(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[2],{"3yWq":function(e,s,t){"use strict";t.d(s,"a",(function(){return r}));var i=t("oDdi"),a=t("hEnr");class r extends i.a{get type(){return"Material"}constructor(e,s={}){super(e,s),a.a.memory.materials++}destroy(){super.destroy(),a.a.memory.materials--}}},Bzs7:function(e,s,t){"use strict";t.d(s,"a",(function(){return h}));var i=t("I4op"),a=t("tehY");const r=new Float32Array([0,0,0]),o=new Uint16Array([0,0,0]);class h{constructor(e,s,t,i,r,o){this._isObject=s,this.scene=e.scene,this.model=e,this.meshes=i,this._numTriangles=0;for(var h=0,n=this.meshes.length;h<n;h++){const e=this.meshes[h];e.parent=this,this._numTriangles+=e.numTriangles}this.id=t,this.originalSystemId=a.a.unglobalizeObjectId(e.id,t),this._flags=r,this._aabb=o,this._offsetAABB=a.a.AABB3(o),this._offset=a.a.vec3(),this._isObject&&e.scene._registerObject(this)}get isEntity(){return!0}get isModel(){return!1}get isObject(){return this._isObject}get aabb(){return this._offsetAABB}get numTriangles(){return this._numTriangles}set visible(e){if(!!(this._flags&i.a.VISIBLE)!==e){this._flags=e?this._flags|i.a.VISIBLE:this._flags&~i.a.VISIBLE;for(let e=0,s=this.meshes.length;e<s;e++)this.meshes[e]._setVisible(this._flags);this._isObject&&this.model.scene._objectVisibilityUpdated(this),this.model.glRedraw()}}get visible(){return this._getFlag(i.a.VISIBLE)}_getFlag(e){return!!(this._flags&e)}set highlighted(e){if(!!(this._flags&i.a.HIGHLIGHTED)!==e){this._flags=e?this._flags|i.a.HIGHLIGHTED:this._flags&~i.a.HIGHLIGHTED;for(var s=0,t=this.meshes.length;s<t;s++)this.meshes[s]._setHighlighted(this._flags);this._isObject&&this.model.scene._objectHighlightedUpdated(this),this.model.glRedraw()}}get highlighted(){return this._getFlag(i.a.HIGHLIGHTED)}set xrayed(e){if(!!(this._flags&i.a.XRAYED)!==e){this._flags=e?this._flags|i.a.XRAYED:this._flags&~i.a.XRAYED;for(let e=0,s=this.meshes.length;e<s;e++)this.meshes[e]._setXRayed(this._flags);this._isObject&&this.model.scene._objectXRayedUpdated(this),this.model.glRedraw()}}get xrayed(){return this._getFlag(i.a.XRAYED)}set selected(e){if(!!(this._flags&i.a.SELECTED)!==e){this._flags=e?this._flags|i.a.SELECTED:this._flags&~i.a.SELECTED;for(let e=0,s=this.meshes.length;e<s;e++)this.meshes[e]._setSelected(this._flags);this._isObject&&this.model.scene._objectSelectedUpdated(this),this.model.glRedraw()}}get selected(){return this._getFlag(i.a.SELECTED)}set edges(e){if(!!(this._flags&i.a.EDGES)!==e){this._flags=e?this._flags|i.a.EDGES:this._flags&~i.a.EDGES;for(var s=0,t=this.meshes.length;s<t;s++)this.meshes[s]._setEdges(this._flags);this.model.glRedraw()}}get edges(){return this._getFlag(i.a.EDGES)}set culled(e){if(!!(this._flags&i.a.CULLED)!==e){this._flags=e?this._flags|i.a.CULLED:this._flags&~i.a.CULLED;for(var s=0,t=this.meshes.length;s<t;s++)this.meshes[s]._setCulled(this._flags);this.model.glRedraw()}}get culled(){return this._getFlag(i.a.CULLED)}set clippable(e){if(!!(this._flags&i.a.CLIPPABLE)!==e){this._flags=e?this._flags|i.a.CLIPPABLE:this._flags&~i.a.CLIPPABLE;for(var s=0,t=this.meshes.length;s<t;s++)this.meshes[s]._setClippable(this._flags);this.model.glRedraw()}}get clippable(){return this._getFlag(i.a.CLIPPABLE)}set collidable(e){if(!!(this._flags&i.a.COLLIDABLE)!==e){this._flags=e?this._flags|i.a.COLLIDABLE:this._flags&~i.a.COLLIDABLE;for(var s=0,t=this.meshes.length;s<t;s++)this.meshes[s]._setCollidable(this._flags)}}get collidable(){return this._getFlag(i.a.COLLIDABLE)}set pickable(e){if(!!(this._flags&i.a.PICKABLE)!==e){this._flags=e?this._flags|i.a.PICKABLE:this._flags&~i.a.PICKABLE;for(var s=0,t=this.meshes.length;s<t;s++)this.meshes[s]._setPickable(this._flags)}}get pickable(){return this._getFlag(i.a.PICKABLE)}set colorize(e){if(e){o[0]=Math.floor(255*e[0]),o[1]=Math.floor(255*e[1]),o[2]=Math.floor(255*e[2]);for(let e=0,s=this.meshes.length;e<s;e++)this.meshes[e]._setColorize(o)}else for(let s=0,t=this.meshes.length;s<t;s++)this.meshes[s]._setColorize(null);if(this._isObject){const s=!!e;this.scene._objectColorizeUpdated(this,s)}this.model.glRedraw()}get colorize(){if(0===this.meshes.length)return null;const e=this.meshes[0]._colorize;return r[0]=e[0]/255,r[1]=e[1]/255,r[2]=e[2]/255,r}set opacity(e){if(0===this.meshes.length)return;const s=null!==e&&void 0!==e,t=this.meshes[0]._colorize[3];let i=255;if(s){if(e<0?e=0:e>1&&(e=1),i=Math.floor(255*e),t===i)return}else if(i=255,t===i)return;for(let a=0,r=this.meshes.length;a<r;a++)this.meshes[a]._setOpacity(i,this._flags);this._isObject&&this.scene._objectOpacityUpdated(this,s),this.model.glRedraw()}get opacity(){return this.meshes.length>0?this.meshes[0]._colorize[3]/255:1}set offset(e){e?(this._offset[0]=e[0],this._offset[1]=e[1],this._offset[2]=e[2]):(this._offset[0]=0,this._offset[1]=0,this._offset[2]=0);for(let s=0,t=this.meshes.length;s<t;s++)this.meshes[s]._setOffset(this._offset);this._offsetAABB[0]=this._aabb[0]+this._offset[0],this._offsetAABB[1]=this._aabb[1]+this._offset[1],this._offsetAABB[2]=this._aabb[2]+this._offset[2],this._offsetAABB[3]=this._aabb[3]+this._offset[0],this._offsetAABB[4]=this._aabb[4]+this._offset[1],this._offsetAABB[5]=this._aabb[5]+this._offset[2],this.scene._aabbDirty=!0,this.scene._objectOffsetUpdated(this,e),this.model._aabbDirty=!0,this.model.glRedraw()}get offset(){return this._offset}set castsShadow(e){}get castsShadow(){return!1}set receivesShadow(e){}get receivesShadow(){return!1}get saoEnabled(){return this.model.saoEnabled}_finalize(){const e=this.model.scene;this._isObject&&(this.visible&&e._objectVisibilityUpdated(this),this.highlighted&&e._objectHighlightedUpdated(this),this.xrayed&&e._objectXRayedUpdated(this),this.selected&&e._objectSelectedUpdated(this));for(let s=0,t=this.meshes.length;s<t;s++)this.meshes[s]._finalize(this._flags)}_destroy(){const e=this.model.scene;this._isObject&&(e._deregisterObject(this),this.visible&&e._objectVisibilityUpdated(this,!1),this.xrayed&&e._objectXRayedUpdated(this),this.selected&&e._objectSelectedUpdated(this),this.highlighted&&e._objectHighlightedUpdated(this),this.scene._objectColorizeUpdated(this,!1),this.scene._objectOpacityUpdated(this,!1),this.scene._objectOffsetUpdated(this,!1));for(let s=0,t=this.meshes.length;s<t;s++)this.meshes[s]._destroy();e._aabbDirty=!0}}},I4op:function(e,s,t){"use strict";t.d(s,"a",(function(){return i}));const i={VISIBLE:1,CULLED:4,PICKABLE:8,CLIPPABLE:16,COLLIDABLE:32,CAST_SHADOW:64,RECEIVE_SHADOW:128,XRAYED:256,HIGHLIGHTED:512,SELECTED:1024,EDGES:2048,BACKFACES:4096,TRANSPARENT:8192}},MXr8:function(e,s,t){"use strict";t.d(s,"a",(function(){return n}));var i=t("3yWq"),a=t("tRux"),r=t("tehY");const o={opaque:0,mask:1,blend:2},h=["opaque","mask","blend"];class n extends i.a{get type(){return"PhongMaterial"}constructor(e,s={}){super(e,s),this._state=new a.a({type:"PhongMaterial",ambient:r.a.vec3([1,1,1]),diffuse:r.a.vec3([1,1,1]),specular:r.a.vec3([1,1,1]),emissive:r.a.vec3([0,0,0]),alpha:null,shininess:null,reflectivity:null,alphaMode:null,alphaCutoff:null,lineWidth:null,pointSize:null,backfaces:null,frontface:null,hash:null}),this.ambient=s.ambient,this.diffuse=s.diffuse,this.specular=s.specular,this.emissive=s.emissive,this.alpha=s.alpha,this.shininess=s.shininess,this.reflectivity=s.reflectivity,this.lineWidth=s.lineWidth,this.pointSize=s.pointSize,s.ambientMap&&(this._ambientMap=this._checkComponent("Texture",s.ambientMap)),s.diffuseMap&&(this._diffuseMap=this._checkComponent("Texture",s.diffuseMap)),s.specularMap&&(this._specularMap=this._checkComponent("Texture",s.specularMap)),s.emissiveMap&&(this._emissiveMap=this._checkComponent("Texture",s.emissiveMap)),s.alphaMap&&(this._alphaMap=this._checkComponent("Texture",s.alphaMap)),s.reflectivityMap&&(this._reflectivityMap=this._checkComponent("Texture",s.reflectivityMap)),s.normalMap&&(this._normalMap=this._checkComponent("Texture",s.normalMap)),s.occlusionMap&&(this._occlusionMap=this._checkComponent("Texture",s.occlusionMap)),s.diffuseFresnel&&(this._diffuseFresnel=this._checkComponent("Fresnel",s.diffuseFresnel)),s.specularFresnel&&(this._specularFresnel=this._checkComponent("Fresnel",s.specularFresnel)),s.emissiveFresnel&&(this._emissiveFresnel=this._checkComponent("Fresnel",s.emissiveFresnel)),s.alphaFresnel&&(this._alphaFresnel=this._checkComponent("Fresnel",s.alphaFresnel)),s.reflectivityFresnel&&(this._reflectivityFresnel=this._checkComponent("Fresnel",s.reflectivityFresnel)),this.alphaMode=s.alphaMode,this.alphaCutoff=s.alphaCutoff,this.backfaces=s.backfaces,this.frontface=s.frontface,this._makeHash()}_makeHash(){const e=this._state,s=["/p"];this._normalMap&&(s.push("/nm"),this._normalMap.hasMatrix&&s.push("/mat")),this._ambientMap&&(s.push("/am"),this._ambientMap.hasMatrix&&s.push("/mat"),s.push("/"+this._ambientMap.encoding)),this._diffuseMap&&(s.push("/dm"),this._diffuseMap.hasMatrix&&s.push("/mat"),s.push("/"+this._diffuseMap.encoding)),this._specularMap&&(s.push("/sm"),this._specularMap.hasMatrix&&s.push("/mat")),this._emissiveMap&&(s.push("/em"),this._emissiveMap.hasMatrix&&s.push("/mat"),s.push("/"+this._emissiveMap.encoding)),this._alphaMap&&(s.push("/opm"),this._alphaMap.hasMatrix&&s.push("/mat")),this._reflectivityMap&&(s.push("/rm"),this._reflectivityMap.hasMatrix&&s.push("/mat")),this._occlusionMap&&(s.push("/ocm"),this._occlusionMap.hasMatrix&&s.push("/mat")),this._diffuseFresnel&&s.push("/df"),this._specularFresnel&&s.push("/sf"),this._emissiveFresnel&&s.push("/ef"),this._alphaFresnel&&s.push("/of"),this._reflectivityFresnel&&s.push("/rf"),s.push(";"),e.hash=s.join("")}set ambient(e){let s=this._state.ambient;if(s){if(e&&s[0]===e[0]&&s[1]===e[1]&&s[2]===e[2])return}else s=this._state.ambient=new Float32Array(3);e?(s[0]=e[0],s[1]=e[1],s[2]=e[2]):(s[0]=.2,s[1]=.2,s[2]=.2),this.glRedraw()}get ambient(){return this._state.ambient}set diffuse(e){let s=this._state.diffuse;if(s){if(e&&s[0]===e[0]&&s[1]===e[1]&&s[2]===e[2])return}else s=this._state.diffuse=new Float32Array(3);e?(s[0]=e[0],s[1]=e[1],s[2]=e[2]):(s[0]=1,s[1]=1,s[2]=1),this.glRedraw()}get diffuse(){return this._state.diffuse}set specular(e){let s=this._state.specular;if(s){if(e&&s[0]===e[0]&&s[1]===e[1]&&s[2]===e[2])return}else s=this._state.specular=new Float32Array(3);e?(s[0]=e[0],s[1]=e[1],s[2]=e[2]):(s[0]=1,s[1]=1,s[2]=1),this.glRedraw()}get specular(){return this._state.specular}set emissive(e){let s=this._state.emissive;if(s){if(e&&s[0]===e[0]&&s[1]===e[1]&&s[2]===e[2])return}else s=this._state.emissive=new Float32Array(3);e?(s[0]=e[0],s[1]=e[1],s[2]=e[2]):(s[0]=0,s[1]=0,s[2]=0),this.glRedraw()}get emissive(){return this._state.emissive}set alpha(e){e=void 0!==e&&null!==e?e:1,this._state.alpha!==e&&(this._state.alpha=e,this.glRedraw())}get alpha(){return this._state.alpha}set shininess(e){this._state.shininess=void 0!==e?e:80,this.glRedraw()}get shininess(){return this._state.shininess}set lineWidth(e){this._state.lineWidth=e||1,this.glRedraw()}get lineWidth(){return this._state.lineWidth}set pointSize(e){this._state.pointSize=e||1,this.glRedraw()}get pointSize(){return this._state.pointSize}set reflectivity(e){this._state.reflectivity=void 0!==e?e:1,this.glRedraw()}get reflectivity(){return this._state.reflectivity}get normalMap(){return this._normalMap}get ambientMap(){return this._ambientMap}get diffuseMap(){return this._diffuseMap}get specularMap(){return this._specularMap}get emissiveMap(){return this._emissiveMap}get alphaMap(){return this._alphaMap}get reflectivityMap(){return this._reflectivityMap}get occlusionMap(){return this._occlusionMap}get diffuseFresnel(){return this._diffuseFresnel}get specularFresnel(){return this._specularFresnel}get emissiveFresnel(){return this._emissiveFresnel}get alphaFresnel(){return this._alphaFresnel}get reflectivityFresnel(){return this._reflectivityFresnel}set alphaMode(e){let s=o[e=e||"opaque"];void 0===s&&(this.error("Unsupported value for 'alphaMode': "+e+" - defaulting to 'opaque'"),s="opaque"),this._state.alphaMode!==s&&(this._state.alphaMode=s,this.glRedraw())}get alphaMode(){return h[this._state.alphaMode]}set alphaCutoff(e){null!==e&&void 0!==e||(e=.5),this._state.alphaCutoff!==e&&(this._state.alphaCutoff=e)}get alphaCutoff(){return this._state.alphaCutoff}set backfaces(e){e=!!e,this._state.backfaces!==e&&(this._state.backfaces=e,this.glRedraw())}get backfaces(){return this._state.backfaces}set frontface(e){e="cw"!==e,this._state.frontface!==e&&(this._state.frontface=e,this.glRedraw())}get frontface(){return this._state.frontface?"ccw":"cw"}destroy(){super.destroy(),this._state.destroy()}}},ZzC7:function(e,s,t){"use strict";t.d(s,"a",(function(){return i}));class i{constructor(){this.visibleLayers=[],this.sectionPlanesActivePerLayer=[],this.reset()}reset(){this.culled=!1,this.sectioned=!1,this.numLayers=0,this.numVisibleLayers=0,this.colorOpaque=!1,this.colorTransparent=!1,this.edgesOpaque=!1,this.edgesTransparent=!1,this.xrayedSilhouetteOpaque=!1,this.xrayedEdgesOpaque=!1,this.xrayedSilhouetteTransparent=!1,this.xrayedEdgesTransparent=!1,this.highlightedSilhouetteOpaque=!1,this.highlightedEdgesOpaque=!1,this.highlightedSilhouetteTransparent=!1,this.highlightedEdgesTransparent=!1,this.selectedSilhouetteOpaque=!1,this.selectedEdgesOpaque=!1,this.selectedSilhouetteTransparent=!1,this.selectedEdgesTransparent=!1}}},bY37:function(e,s,t){"use strict";t.d(s,"a",(function(){return m}));var i=t("oDdi"),a=t("hEnr");class r extends i.a{get type(){return"Geometry"}get isGeometry(){return!0}constructor(e,s={}){super(e,s),a.a.memory.meshes++}destroy(){super.destroy(),a.a.memory.meshes--}}var o=t("tRux"),h=t("f7Wv"),n=t("tehY"),l=t("bFGi"),c=t("WTvf"),u=t("jSXj");const p=a.a.memory,_=l.a.SUPPORTED_EXTENSIONS.OES_element_index_uint,d=_?Uint32Array:Uint16Array,f=n.a.AABB3();class m extends r{get type(){return"ReadableGeometry"}get isReadableGeometry(){return!0}constructor(e,s={}){super(e,s),this._state=new o.a({compressGeometry:!!s.compressGeometry,primitive:null,primitiveName:null,positions:null,normals:null,colors:null,uv:null,indices:null,positionsDecodeMatrix:null,uvDecodeMatrix:null,positionsBuf:null,normalsBuf:null,colorsbuf:null,uvBuf:null,indicesBuf:null,hash:""}),this._numTriangles=0,this._edgeThreshold=s.edgeThreshold||10,this._edgeIndicesBuf=null,this._pickTrianglePositionsBuf=null,this._pickTriangleColorsBuf=null,this._aabbDirty=!0,this._boundingSphere=!0,this._aabb=null,this._aabbDirty=!0,this._obb=null,this._obbDirty=!0;const t=this._state,i=this.scene.canvas.gl;switch(s.primitive=s.primitive||"triangles",s.primitive){case"points":t.primitive=i.POINTS,t.primitiveName=s.primitive;break;case"lines":t.primitive=i.LINES,t.primitiveName=s.primitive;break;case"line-loop":t.primitive=i.LINE_LOOP,t.primitiveName=s.primitive;break;case"line-strip":t.primitive=i.LINE_STRIP,t.primitiveName=s.primitive;break;case"triangles":t.primitive=i.TRIANGLES,t.primitiveName=s.primitive;break;case"triangle-strip":t.primitive=i.TRIANGLE_STRIP,t.primitiveName=s.primitive;break;case"triangle-fan":t.primitive=i.TRIANGLE_FAN,t.primitiveName=s.primitive;break;default:this.error("Unsupported value for 'primitive': '"+s.primitive+"' - supported values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'. Defaulting to 'triangles'."),t.primitive=i.TRIANGLES,t.primitiveName=s.primitive}if(s.positions)if(this._state.compressGeometry){const e=u.a.getPositionsBounds(s.positions),i=u.a.compressPositions(s.positions,e.min,e.max);t.positions=i.quantized,t.positionsDecodeMatrix=i.decodeMatrix}else t.positions=s.positions.constructor===Float32Array?s.positions:new Float32Array(s.positions);if(s.colors&&(t.colors=s.colors.constructor===Float32Array?s.colors:new Float32Array(s.colors)),s.uv)if(this._state.compressGeometry){const e=u.a.getUVBounds(s.uv),i=u.a.compressUVs(s.uv,e.min,e.max);t.uv=i.quantized,t.uvDecodeMatrix=i.decodeMatrix}else t.uv=s.uv.constructor===Float32Array?s.uv:new Float32Array(s.uv);if(s.normals&&(this._state.compressGeometry?t.normals=u.a.compressNormals(s.normals):t.normals=s.normals.constructor===Float32Array?s.normals:new Float32Array(s.normals)),s.indices){if(!_&&s.indices.constructor===Uint32Array)return void this.error("This WebGL implementation does not support Uint32Array");t.indices=s.indices.constructor===Uint32Array||s.indices.constructor===Uint16Array?s.indices:new d(s.indices),"triangles"===this._state.primitiveName&&(this._numTriangles=s.indices.length/3)}this._buildHash(),p.meshes++,this._buildVBOs()}_buildVBOs(){const e=this._state,s=this.scene.canvas.gl;if(e.indices&&(e.indicesBuf=new h.a(s,s.ELEMENT_ARRAY_BUFFER,e.indices,e.indices.length,1,s.STATIC_DRAW),p.indices+=e.indicesBuf.numItems),e.positions&&(e.positionsBuf=new h.a(s,s.ARRAY_BUFFER,e.positions,e.positions.length,3,s.STATIC_DRAW),p.positions+=e.positionsBuf.numItems),e.normals){let t=e.compressGeometry;e.normalsBuf=new h.a(s,s.ARRAY_BUFFER,e.normals,e.normals.length,3,s.STATIC_DRAW,t),p.normals+=e.normalsBuf.numItems}e.colors&&(e.colorsBuf=new h.a(s,s.ARRAY_BUFFER,e.colors,e.colors.length,4,s.STATIC_DRAW),p.colors+=e.colorsBuf.numItems),e.uv&&(e.uvBuf=new h.a(s,s.ARRAY_BUFFER,e.uv,e.uv.length,2,s.STATIC_DRAW),p.uvs+=e.uvBuf.numItems)}_buildHash(){const e=this._state,s=["/g"];s.push("/"+e.primitive+";"),e.positions&&s.push("p"),e.colors&&s.push("c"),(e.normals||e.autoVertexNormals)&&s.push("n"),e.uv&&s.push("u"),e.compressGeometry&&s.push("cp"),s.push(";"),e.hash=s.join("")}_getEdgeIndices(){return this._edgeIndicesBuf||this._buildEdgeIndices(),this._edgeIndicesBuf}_getPickTrianglePositions(){return this._pickTrianglePositionsBuf||this._buildPickTriangleVBOs(),this._pickTrianglePositionsBuf}_getPickTriangleColors(){return this._pickTriangleColorsBuf||this._buildPickTriangleVBOs(),this._pickTriangleColorsBuf}_buildEdgeIndices(){const e=this._state;if(!e.positions||!e.indices)return;const s=this.scene.canvas.gl,t=Object(c.a)(e.positions,e.indices,e.positionsDecodeMatrix,this._edgeThreshold);this._edgeIndicesBuf=new h.a(s,s.ELEMENT_ARRAY_BUFFER,t,t.length,1,s.STATIC_DRAW),p.indices+=this._edgeIndicesBuf.numItems}_buildPickTriangleVBOs(){const e=this._state;if(!e.positions||!e.indices)return;const s=this.scene.canvas.gl,t=n.a.buildPickTriangles(e.positions,e.indices,e.compressGeometry),i=t.positions,a=t.colors;this._pickTrianglePositionsBuf=new h.a(s,s.ARRAY_BUFFER,i,i.length,3,s.STATIC_DRAW),this._pickTriangleColorsBuf=new h.a(s,s.ARRAY_BUFFER,a,a.length,4,s.STATIC_DRAW,!0),p.positions+=this._pickTrianglePositionsBuf.numItems,p.colors+=this._pickTriangleColorsBuf.numItems}_buildPickVertexVBOs(){}_webglContextLost(){this._sceneVertexBufs&&this._sceneVertexBufs.webglContextLost()}_webglContextRestored(){this._sceneVertexBufs&&this._sceneVertexBufs.webglContextRestored(),this._buildVBOs(),this._edgeIndicesBuf=null,this._pickVertexPositionsBuf=null,this._pickTrianglePositionsBuf=null,this._pickTriangleColorsBuf=null,this._pickVertexPositionsBuf=null,this._pickVertexColorsBuf=null}get primitive(){return this._state.primitiveName}get compressGeometry(){return this._state.compressGeometry}get positions(){return this._state.positions?this._state.compressGeometry?(this._decompressedPositions||(this._decompressedPositions=new Float32Array(this._state.positions.length),u.a.decompressPositions(this._state.positions,this._state.positionsDecodeMatrix,this._decompressedPositions)),this._decompressedPositions):this._state.positions:null}set positions(e){const s=this._state,t=s.positions;if(t)if(t.length===e.length){if(this._state.compressGeometry){const t=u.a.getPositionsBounds(e),i=u.a.compressPositions(e,t.min,t.max);e=i.quantized,s.positionsDecodeMatrix=i.decodeMatrix}t.set(e),s.positionsBuf&&s.positionsBuf.setData(t),this._setAABBDirty(),this.glRedraw()}else this.error("can't update geometry positions - new positions are wrong length");else this.error("can't update geometry positions - geometry has no positions")}get normals(){if(this._state.normals){if(!this._state.compressGeometry)return this._state.normals;if(!this._decompressedNormals){const e=this._state.normals.length,s=e+e/2;this._decompressedNormals=new Float32Array(s),u.a.decompressNormals(this._state.normals,this._decompressedNormals)}return this._decompressedNormals}}set normals(e){if(this._state.compressGeometry)return void this.error("can't update geometry normals - quantized geometry is immutable");const s=this._state,t=s.normals;t?t.length===e.length?(t.set(e),s.normalsBuf&&s.normalsBuf.setData(t),this.glRedraw()):this.error("can't update geometry normals - new normals are wrong length"):this.error("can't update geometry normals - geometry has no normals")}get uv(){return this._state.uv?this._state.compressGeometry?(this._decompressedUV||(this._decompressedUV=new Float32Array(this._state.uv.length),u.a.decompressUVs(this._state.uv,this._state.uvDecodeMatrix,this._decompressedUV)),this._decompressedUV):this._state.uv:null}set uv(e){if(this._state.compressGeometry)return void this.error("can't update geometry UVs - quantized geometry is immutable");const s=this._state,t=s.uv;t?t.length===e.length?(t.set(e),s.uvBuf&&s.uvBuf.setData(t),this.glRedraw()):this.error("can't update geometry UVs - new UVs are wrong length"):this.error("can't update geometry UVs - geometry has no UVs")}get colors(){return this._state.colors}set colors(e){if(this._state.compressGeometry)return void this.error("can't update geometry colors - quantized geometry is immutable");const s=this._state,t=s.colors;t?t.length===e.length?(t.set(e),s.colorsBuf&&s.colorsBuf.setData(t),this.glRedraw()):this.error("can't update geometry colors - new colors are wrong length"):this.error("can't update geometry colors - geometry has no colors")}get indices(){return this._state.indices}get aabb(){return this._aabbDirty&&(this._aabb||(this._aabb=n.a.AABB3()),n.a.positions3ToAABB3(this._state.positions,this._aabb,this._state.positionsDecodeMatrix),this._aabbDirty=!1),this._aabb}get obb(){return this._obbDirty&&(this._obb||(this._obb=n.a.OBB3()),n.a.positions3ToAABB3(this._state.positions,f,this._state.positionsDecodeMatrix),n.a.AABB3ToOBB3(f,this._obb),this._obbDirty=!1),this._obb}get numTriangles(){return this._numTriangles}_setAABBDirty(){this._aabbDirty||(this._aabbDirty=!0,this._aabbDirty=!0,this._obbDirty=!0)}_getState(){return this._state}destroy(){super.destroy();const e=this._state;e.indicesBuf&&e.indicesBuf.destroy(),e.positionsBuf&&e.positionsBuf.destroy(),e.normalsBuf&&e.normalsBuf.destroy(),e.uvBuf&&e.uvBuf.destroy(),e.colorsBuf&&e.colorsBuf.destroy(),this._edgeIndicesBuf&&this._edgeIndicesBuf.destroy(),this._pickTrianglePositionsBuf&&this._pickTrianglePositionsBuf.destroy(),this._pickTriangleColorsBuf&&this._pickTriangleColorsBuf.destroy(),this._pickVertexPositionsBuf&&this._pickVertexPositionsBuf.destroy(),this._pickVertexColorsBuf&&this._pickVertexColorsBuf.destroy(),e.destroy(),p.meshes--}}}}]);