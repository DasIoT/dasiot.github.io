(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[13],{f1ZR:function(t,e,i){"use strict";i.r(e),i.d(e,"XKTLoaderPlugin",(function(){return os}));var s=i("zcj1"),o=i("oDdi"),r=i("tehY"),a=i("WTvf"),n=i("bFGi");class l{constructor(t,e,i,s,o=null,a=0){this.model=t,this.object=null,this.parent=null,this.id=e,this.pickId=this.model.scene._renderer.getPickID(this),this.aabb=r.a.AABB3(),this._layer=o,this._portionId=a,this._color=[i[0],i[1],i[2],s],this._colorize=[i[0],i[1],i[2],s],this._colorizing=!1,this._transparent=s<255,this.numTriangles=0,this.rtcCenter=null}_finalize(t){this._layer.initFlags(this._portionId,t,this._transparent)}_setVisible(t){this._layer.setVisible(this._portionId,t,this._transparent)}_setColor(t){this._color[0]=t[0],this._color[1]=t[1],this._color[2]=t[2],this._colorizing||this._layer.setColor(this._portionId,this._color,!1)}_setColorize(t){t?(this._colorize[0]=t[0],this._colorize[1]=t[1],this._colorize[2]=t[2],this._layer.setColor(this._portionId,this._colorize,false),this._colorizing=!0):(this._layer.setColor(this._portionId,this._color,false),this._colorizing=!1)}_setOpacity(t,e){const i=t<255,s=this._transparent!==i;this._color[3]=t,this._colorize[3]=t,this._transparent=i,this._colorizing?this._layer.setColor(this._portionId,this._colorize):this._layer.setColor(this._portionId,this._color),s&&this._layer.setTransparent(this._portionId,e,i)}_setOffset(t){this._layer.setOffset(this._portionId,t)}_setHighlighted(t){this._layer.setHighlighted(this._portionId,t,this._transparent)}_setXRayed(t){this._layer.setXRayed(this._portionId,t,this._transparent)}_setSelected(t){this._layer.setSelected(this._portionId,t,this._transparent)}_setEdges(t){this._layer.setEdges(this._portionId,t,this._transparent)}_setClippable(t){this._layer.setClippable(this._portionId,t,this._transparent)}_setCollidable(t){this._layer.setCollidable(this._portionId,t)}_setPickable(t){this._layer.setPickable(this._portionId,t,this._transparent)}_setCulled(t){this._layer.setCulled(this._portionId,t,this._transparent)}canPickTriangle(){return!1}drawPickTriangles(t,e){}pickTriangleSurface(t){}canPickWorldPos(){return!0}drawPickDepths(t){this.model.drawPickDepths(t)}drawPickNormals(t){this.model.drawPickNormals(t)}delegatePickedEntity(){return this.parent}_destroy(){this.model.scene._renderer.putPickID(this.pickId)}}var h=i("Bzs7");const u=new class{constructor(){this._uint8Arrays={},this._float32Arrays={}}_clear(){this._uint8Arrays={},this._float32Arrays={}}getUInt8Array(t){let e=this._uint8Arrays[t];return e||(e=new Uint8Array(t),this._uint8Arrays[t]=e),e}getFloat32Array(t){let e=this._float32Arrays[t];return e||(e=new Float32Array(t),this._float32Arrays[t]=e),e}};let c=0;var d=i("I4op");const p=0,f=1,_=2,g=3,m=4,P=5,v=6,x=7,b=8,y=9,M=10,E=11;var A=i("tRux"),L=i("f7Wv"),w=i("jSXj"),D=i("mrKj"),C=i("pVQg");const S=r.a.vec4(),B=r.a.vec3();class R{constructor(t,e){this._scene=t,this._withSAO=e,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){const t=this._scene;return[t._lightsState.getHash(),t._sectionPlanesState.getHash(),this._withSAO?"sao":"nosao"].join(";")}drawLayer(t,e,i){const s=this._scene,o=s.camera,r=e.model,a=s.canvas.gl,n=e._state,l=e._state.rtcCenter;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t)),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,l?Object(C.a)(o.viewMatrix,l):o.viewMatrix),a.uniformMatrix4fv(this._uViewNormalMatrix,!1,o.viewNormalMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,r.worldMatrix),a.uniformMatrix4fv(this._uWorldNormalMatrix,!1,r.worldNormalMatrix);const h=s._sectionPlanesState.sectionPlanes.length;if(h>0){const t=s._sectionPlanesState.sectionPlanes,i=e.layerIndex*h,o=r.renderFlags;for(let e=0;e<h;e++){const s=this._uSectionPlanes[e],r=o.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,r?1:0),r){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,B);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aNormal&&this._aNormal.bindArrayBuffer(n.normalsBuf),this._aColor&&this._aColor.bindArrayBuffer(n.colorsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),n.indicesBuf.bind(),a.drawElements(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._lightsState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uWorldNormalMatrix=s.getLocation("worldNormalMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uViewNormalMatrix=s.getLocation("viewNormalMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uLightAmbient=s.getLocation("lightAmbient"),this._uLightColor=[],this._uLightDir=[],this._uLightPos=[],this._uLightAttenuation=[];const o=i.lights;let r;for(let a=0,n=o.length;a<n;a++)switch(r=o[a],r.type){case"dir":this._uLightColor[a]=s.getLocation("lightColor"+a),this._uLightPos[a]=null,this._uLightDir[a]=s.getLocation("lightDir"+a);break;case"point":this._uLightColor[a]=s.getLocation("lightColor"+a),this._uLightPos[a]=s.getLocation("lightPos"+a),this._uLightDir[a]=null,this._uLightAttenuation[a]=s.getLocation("lightAttenuation"+a);break;case"spot":this._uLightColor[a]=s.getLocation("lightColor"+a),this._uLightPos[a]=s.getLocation("lightPos"+a),this._uLightDir[a]=s.getLocation("lightDir"+a),this._uLightAttenuation[a]=s.getLocation("lightAttenuation"+a)}this._uSectionPlanes=[];for(let a=0,n=t._sectionPlanesState.sectionPlanes.length;a<n;a++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+a),pos:s.getLocation("sectionPlanePos"+a),dir:s.getLocation("sectionPlaneDir"+a)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aNormal=s.getAttribute("normal"),this._aColor=s.getAttribute("color"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._withSAO&&(this._uOcclusionTexture="uOcclusionTexture",this._uSAOParams=s.getLocation("uSAOParams")),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(t){const e=this._scene,i=e.canvas.gl,s=this._program,o=e._lightsState.lights,r=e.camera.project;if(s.bind(),i.uniformMatrix4fv(this._uProjMatrix,!1,r.matrix),this._uLightAmbient){const t=e._lightsState.getAmbientColor();i.uniform4f(this._uLightAmbient,t[0],t[1],t[2],1)}for(let a=0,n=o.length;a<n;a++){const t=o[a];this._uLightColor[a]&&i.uniform4f(this._uLightColor[a],t.color[0],t.color[1],t.color[2],t.intensity),this._uLightPos[a]&&(i.uniform3fv(this._uLightPos[a],t.pos),this._uLightAttenuation[a]&&i.uniform1f(this._uLightAttenuation[a],t.attenuation)),this._uLightDir[a]&&i.uniform3fv(this._uLightDir[a],t.dir)}if(this._withSAO){const s=e.sao;if(s.possible){const e=i.drawingBufferWidth,o=i.drawingBufferHeight;S[0]=e,S[1]=o,S[2]=s.blendCutoff,S[3]=s.blendFactor,i.uniform4fv(this._uSAOParams,S),this._program.bindTexture(this._uOcclusionTexture,t.occlusionTexture,0)}}if(e.logarithmicDepthBufferEnabled){const t=2/(Math.log(r.far+1)/Math.LN2);i.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState,i=t._lightsState,s=e.sectionPlanes.length>0;let o;const r=[];r.push("// Triangles batching draw vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("#extension GL_EXT_frag_depth : enable"),r.push("uniform int renderPass;"),r.push("attribute vec3 position;"),r.push("attribute vec3 normal;"),r.push("attribute vec4 color;"),r.push("attribute vec4 flags;"),r.push("attribute vec4 flags2;"),t.entityOffsetsEnabled&&r.push("attribute vec3 offset;"),r.push("uniform mat4 worldMatrix;"),r.push("uniform mat4 worldNormalMatrix;"),r.push("uniform mat4 viewMatrix;"),r.push("uniform mat4 projMatrix;"),r.push("uniform mat4 viewNormalMatrix;"),r.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(r.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("varying float vFragDepth;")),r.push("uniform vec4 lightAmbient;");for(let a=0,n=i.lights.length;a<n;a++)o=i.lights[a],"ambient"!==o.type&&(r.push("uniform vec4 lightColor"+a+";"),"dir"===o.type&&r.push("uniform vec3 lightDir"+a+";"),"point"===o.type&&r.push("uniform vec3 lightPos"+a+";"),"spot"===o.type&&(r.push("uniform vec3 lightPos"+a+";"),r.push("uniform vec3 lightDir"+a+";")));r.push("vec3 octDecode(vec2 oct) {"),r.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"),r.push("    if (v.z < 0.0) {"),r.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"),r.push("    }"),r.push("    return normalize(v);"),r.push("}"),s&&(r.push("varying vec4 vWorldPosition;"),r.push("varying vec4 vFlags2;")),r.push("varying vec4 vColor;"),r.push("void main(void) {"),r.push("if (int(flags.x) != renderPass) {"),r.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),r.push("} else {"),r.push("vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&r.push("worldPosition.xyz = worldPosition.xyz + offset;"),r.push("vec4 viewPosition  = viewMatrix * worldPosition; "),r.push("vec4 worldNormal =  worldNormalMatrix * vec4(octDecode(normal.xy), 0.0); "),r.push("vec3 viewNormal = normalize((viewNormalMatrix * worldNormal).xyz);"),r.push("vec3 reflectedColor = vec3(0.0, 0.0, 0.0);"),r.push("vec3 viewLightDir = vec3(0.0, 0.0, -1.0);"),r.push("float lambertian = 1.0;");for(let a=0,n=i.lights.length;a<n;a++)if(o=i.lights[a],"ambient"!==o.type){if("dir"===o.type)"view"===o.space?r.push("viewLightDir = normalize(lightDir"+a+");"):r.push("viewLightDir = normalize((viewMatrix * vec4(lightDir"+a+", 0.0)).xyz);");else if("point"===o.type)"view"===o.space?r.push("viewLightDir = -normalize(lightPos"+a+" - viewPosition.xyz);"):r.push("viewLightDir = -normalize((viewMatrix * vec4(lightPos"+a+", 0.0)).xyz);");else{if("spot"!==o.type)continue;"view"===o.space?r.push("viewLightDir = normalize(lightDir"+a+");"):r.push("viewLightDir = normalize((viewMatrix * vec4(lightDir"+a+", 0.0)).xyz);")}r.push("lambertian = max(dot(-viewNormal, viewLightDir), 0.0);"),r.push("reflectedColor += lambertian * (lightColor"+a+".rgb * lightColor"+a+".a);")}return r.push("vec3 rgb = (vec3(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0));"),r.push("vColor =  vec4((lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedColor * rgb), float(color.a) / 255.0);"),r.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?r.push("vFragDepth = 1.0 + clipPos.w;"):(r.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),r.push("clipPos.z *= clipPos.w;"))),s&&(r.push("vWorldPosition = worldPosition;"),r.push("vFlags2 = flags2;")),r.push("gl_Position = clipPos;"),r.push("}"),r.push("}"),r}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Triangles batching draw fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),this._withSAO&&(s.push("uniform sampler2D uOcclusionTexture;"),s.push("uniform vec4      uSAOParams;"),s.push("const float       packUpscale = 256. / 255.;"),s.push("const float       unpackDownScale = 255. / 256.;"),s.push("const vec3        packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );"),s.push("const vec4        unPackFactors = unpackDownScale / vec4( packFactors, 1. );"),s.push("float unpackRGBToFloat( const in vec4 v ) {"),s.push("    return dot( v, unPackFactors );"),s.push("}")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vColor;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("  if (dist > 0.0) { "),s.push("      discard;"),s.push("  }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),this._withSAO?(s.push("   float viewportWidth     = uSAOParams[0];"),s.push("   float viewportHeight    = uSAOParams[1];"),s.push("   float blendCutoff       = uSAOParams[2];"),s.push("   float blendFactor       = uSAOParams[3];"),s.push("   vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);"),s.push("   float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBToFloat(texture2D(uOcclusionTexture, uv))) * blendFactor;"),s.push("   gl_FragColor            = vec4(vColor.rgb * ambient, 1.0);")):s.push("   gl_FragColor            = vColor;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const N=new Float32Array([1,1,1]),F=r.a.vec3();class T{constructor(t,e){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=e._state.rtcCenter;if(!this._program&&(this._allocate(),this.errors))return;if(t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),i===P){const t=o.xrayMaterial._state,e=t.fillColor,i=t.fillAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===g){const t=o.highlightMaterial._state,e=t.fillColor,i=t.fillAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===m){const t=o.selectedMaterial._state,e=t.fillColor,i=t.fillAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else a.uniform4fv(this._uColor,N);const h=l?Object(C.a)(r.viewMatrix,l):r.viewMatrix;a.uniformMatrix4fv(this._uViewMatrix,!1,h),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const u=o._sectionPlanesState.sectionPlanes.length;if(u>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*u,r=s.renderFlags;for(let e=0;e<u;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,F);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),n.indicesBuf.bind(),a.drawElements(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uColor=i.getLocation("color"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Triangles batching silhouette vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),i.push("uniform vec4 color;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("void main(void) {"),i.push("if (int(flags.y) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("vWorldPosition = worldPosition;"),i.push("vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState;let i,s;const o=e.sectionPlanes.length>0,r=[];if(r.push("// Triangles batching silhouette fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("#extension GL_EXT_frag_depth : enable"),r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),r.push("precision highp float;"),r.push("precision highp int;"),r.push("#else"),r.push("precision mediump float;"),r.push("precision mediump int;"),r.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(r.push("uniform float logDepthBufFC;"),r.push("varying float vFragDepth;")),o)for(r.push("varying vec4 vWorldPosition;"),r.push("varying vec4 vFlags2;"),i=0,s=e.sectionPlanes.length;i<s;i++)r.push("uniform bool sectionPlaneActive"+i+";"),r.push("uniform vec3 sectionPlanePos"+i+";"),r.push("uniform vec3 sectionPlaneDir"+i+";");if(r.push("uniform vec4 color;"),r.push("void main(void) {"),o){for(r.push("  bool clippable = (float(vFlags2.x) > 0.0);"),r.push("  if (clippable) {"),r.push("  float dist = 0.0;"),i=0,s=e.sectionPlanes.length;i<s;i++)r.push("if (sectionPlaneActive"+i+") {"),r.push("   dist += clamp(dot(-sectionPlaneDir"+i+".xyz, vWorldPosition.xyz - sectionPlanePos"+i+".xyz), 0.0, 1000.0);"),r.push("}");r.push("  if (dist > 0.0) { discard; }"),r.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),r.push("gl_FragColor = color;"),r.push("}"),r}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const I=r.a.vec3(),O=new Float32Array([0,0,0,1]);class z{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=e._state.rtcCenter;if(!this._program&&(this._allocate(e),this.errors))return;if(t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),i===M){const t=o.xrayMaterial._state,e=t.edgeColor,i=t.edgeAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===b){const t=o.highlightMaterial._state,e=t.edgeColor,i=t.edgeAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===y){const t=o.selectedMaterial._state,e=t.edgeColor,i=t.edgeAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else a.uniform4fv(this._uColor,O);a.uniformMatrix4fv(this._uViewMatrix,!1,l?Object(C.a)(r.viewMatrix,l):r.viewMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const h=o._sectionPlanesState.sectionPlanes.length;if(h>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*h,r=s.renderFlags;for(let e=0;e<h;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,I);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),n.edgeIndicesBuf.bind(),a.drawElements(a.LINES,n.edgeIndicesBuf.numItems,n.edgeIndicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uColor=i.getLocation("color"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=this._program,s=t.camera.project;if(i.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,s.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(s.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Batched geometry edges drawing vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("uniform vec4 color;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec4 vColor;"),i.push("void main(void) {"),i.push("if (int(flags.z) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("      vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("  vWorldPosition = worldPosition;"),i.push("  vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("vColor = vec4(color.r, color.g, color.b, color.a);"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Batched geometry edges drawing fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vColor;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("  if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("gl_FragColor = vColor;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const G=r.a.vec3();class X{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=e._state.rtcCenter;if(!this._program&&(this._allocate(e),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,l?Object(C.a)(r.viewMatrix,l):r.viewMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const h=o._sectionPlanesState.sectionPlanes.length;if(h>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*h,r=s.renderFlags;for(let e=0;e<h;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,G);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aColor.bindArrayBuffer(n.colorsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),n.edgeIndicesBuf.bind(),a.drawElements(a.LINES,n.edgeIndicesBuf.numItems,n.edgeIndicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aColor=i.getAttribute("color"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=this._program,s=t.camera.project;if(i.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,s.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(s.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Batched geometry edges drawing vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),i.push("attribute vec4 color;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec4 vColor;"),i.push("void main(void) {"),i.push("if (int(flags.z) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("      vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("  vWorldPosition = worldPosition;"),i.push("  vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("vColor = vec4(float(color.r*0.5) / 255.0, float(color.g*0.5) / 255.0, float(color.b*0.5) / 255.0, float(color.a) / 255.0);"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Batched geometry edges drawing fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vColor;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("  if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("gl_FragColor = vColor;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const k=r.a.vec3();class U{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=e._state.rtcCenter;this._program||this._allocate(e),t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t)),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const h=t.pickViewMatrix||r.viewMatrix,u=l?Object(C.a)(h,l):h;if(a.uniformMatrix4fv(this._uProjMatrix,!1,t.pickProjMatrix),a.uniformMatrix4fv(this._uViewMatrix,!1,u),o.logarithmicDepthBufferEnabled){const t=2/(Math.log(r.project.far+1)/Math.LN2);a.uniform1f(this._uLogDepthBufFC,t)}const c=o._sectionPlanesState.sectionPlanes.length;if(c>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*c,r=s.renderFlags;for(let e=0;e<c;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,k);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),this._aPickColor&&this._aPickColor.bindArrayBuffer(n.pickColorsBuf),n.indicesBuf.bind(),a.drawElements(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPickInvisible=i.getLocation("pickInvisible"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aPickColor=i.getAttribute("pickColor"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(t){const e=this._scene.canvas.gl;this._program.bind(),e.uniform1i(this._uPickInvisible,t.pickInvisible)}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Batched geometry picking vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 pickColor;"),i.push("uniform bool pickInvisible;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec4 vPickColor;"),i.push("void main(void) {"),i.push("if (int(flags.w) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("  } else {"),i.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("      vec4 viewPosition  = viewMatrix * worldPosition; "),i.push("      vPickColor = vec4(float(pickColor.r) / 255.0, float(pickColor.g) / 255.0, float(pickColor.b) / 255.0, float(pickColor.a) / 255.0);"),e&&(i.push("      vWorldPosition = worldPosition;"),i.push("      vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("  }"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Batched geometry picking fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(var o=0;o<e.sectionPlanes.length;o++)s.push("uniform bool sectionPlaneActive"+o+";"),s.push("uniform vec3 sectionPlanePos"+o+";"),s.push("uniform vec3 sectionPlaneDir"+o+";")}if(s.push("varying vec4 vPickColor;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("      float dist = 0.0;");for(o=0;o<e.sectionPlanes.length;o++)s.push("      if (sectionPlaneActive"+o+") {"),s.push("          dist += clamp(dot(-sectionPlaneDir"+o+".xyz, vWorldPosition.xyz - sectionPlanePos"+o+".xyz), 0.0, 1000.0);"),s.push("      }");s.push("      if (dist > 0.0) { discard; }"),s.push("  }")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("   gl_FragColor = vPickColor; "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const V=r.a.vec3();class H{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=e._state.rtcCenter;this._program||this._allocate(),t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniform1i(this._uPickInvisible,t.pickInvisible);const h=t.pickViewMatrix||r.viewMatrix,u=l?Object(C.a)(h,l):h;if(a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.uniformMatrix4fv(this._uViewMatrix,!1,u),a.uniformMatrix4fv(this._uProjMatrix,!1,t.pickProjMatrix),a.uniform1f(this._uPickZNear,t.pickZNear),a.uniform1f(this._uPickZFar,t.pickZFar),o.logarithmicDepthBufferEnabled){const e=2/(Math.log(t.pickZFar+1)/Math.LN2);a.uniform1f(this._uLogDepthBufFC,e)}const c=o._sectionPlanesState.sectionPlanes.length;if(c>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*c,r=s.renderFlags;for(let e=0;e<c;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,V);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),n.indicesBuf.bind(),a.drawElements(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPickInvisible=i.getLocation("pickInvisible"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),this._uPickZNear=i.getLocation("pickZNear"),this._uPickZFar=i.getLocation("pickZFar"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){this._program.bind()}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Triangles batching pick depth vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("uniform bool pickInvisible;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec4 vViewPosition;"),i.push("void main(void) {"),i.push("if (int(flags.w) != renderPass) {"),i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("  } else {"),i.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("      vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("      vWorldPosition = worldPosition;"),i.push("      vFlags2 = flags2;")),i.push("vViewPosition = viewPosition;"),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("  }"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Triangles batching pick depth fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),s.push("uniform float pickZNear;"),s.push("uniform float pickZFar;"),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(var o=0;o<e.sectionPlanes.length;o++)s.push("uniform bool sectionPlaneActive"+o+";"),s.push("uniform vec3 sectionPlanePos"+o+";"),s.push("uniform vec3 sectionPlaneDir"+o+";")}if(s.push("varying vec4 vViewPosition;"),s.push("vec4 packDepth(const in float depth) {"),s.push("  const vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);"),s.push("  const vec4 bitMask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);"),s.push("  vec4 res = fract(depth * bitShift);"),s.push("  res -= res.xxyz * bitMask;"),s.push("  return res;"),s.push("}"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("      float dist = 0.0;");for(o=0;o<e.sectionPlanes.length;o++)s.push("      if (sectionPlaneActive"+o+") {"),s.push("          dist += clamp(dot(-sectionPlaneDir"+o+".xyz, vWorldPosition.xyz - sectionPlanePos"+o+".xyz), 0.0, 1000.0);"),s.push("      }");s.push("      if (dist > 0.0) { discard; }"),s.push("  }")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("    float zNormalizedDepth = abs((pickZNear + vViewPosition.z) / (pickZFar - pickZNear));"),s.push("    gl_FragColor = packDepth(zNormalizedDepth); "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const j=r.a.vec3();class W{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=e._state.rtcCenter;this._program||this._allocate(e),t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniform1i(this._uPickInvisible,t.pickInvisible),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const h=t.pickViewMatrix||r.viewMatrix,u=l?Object(C.a)(h,l):h;if(a.uniformMatrix4fv(this._uViewMatrix,!1,u),a.uniformMatrix4fv(this._uProjMatrix,!1,t.pickProjMatrix),o.logarithmicDepthBufferEnabled){const t=2/(Math.log(r.project.far+1)/Math.LN2);a.uniform1f(this._uLogDepthBufFC,t)}const c=o._sectionPlanesState.sectionPlanes.length;if(c>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*c,r=s.renderFlags;for(let e=0;e<c;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,j);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),this._aNormal&&this._aNormal.bindArrayBuffer(n.normalsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),n.indicesBuf.bind(),a.drawElements(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPickInvisible=i.getLocation("pickInvisible"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aNormal=i.getAttribute("normal"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){this._program.bind()}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Triangles batching pick normals vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec3 normal;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("uniform bool pickInvisible;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),i.push("vec3 octDecode(vec2 oct) {"),i.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"),i.push("    if (v.z < 0.0) {"),i.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"),i.push("    }"),i.push("    return normalize(v);"),i.push("}"),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec3 vWorldNormal;"),i.push("void main(void) {"),i.push("if (int(flags.w) != renderPass) {"),i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("  } else {"),i.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("      vec4 viewPosition  = viewMatrix * worldPosition; "),i.push("      vec3 worldNormal =  octDecode(normal.xy); "),i.push("      vWorldNormal = worldNormal;"),e&&(i.push("      vWorldPosition = worldPosition;"),i.push("      vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("  }"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Triangles batching pick normals fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(var o=0;o<e.sectionPlanes.length;o++)s.push("uniform bool sectionPlaneActive"+o+";"),s.push("uniform vec3 sectionPlanePos"+o+";"),s.push("uniform vec3 sectionPlaneDir"+o+";")}if(s.push("varying vec3 vWorldNormal;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("      float dist = 0.0;");for(o=0;o<e.sectionPlanes.length;o++)s.push("      if (sectionPlaneActive"+o+") {"),s.push("          dist += clamp(dot(-sectionPlaneDir"+o+".xyz, vWorldPosition.xyz - sectionPlanePos"+o+".xyz), 0.0, 1000.0);"),s.push("      }");s.push("      if (dist > 0.0) { discard; }"),s.push("  }")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("    gl_FragColor = vec4((vWorldNormal * 0.5) + 0.5, 1.0);"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Y=r.a.vec3();class Z{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.canvas.gl,a=e._state,n=o.camera,l=e._state.rtcCenter;if(!this._program&&(this._allocate(e),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),r.uniform1i(this._uRenderPass,i),r.uniformMatrix4fv(this._uViewMatrix,!1,l?Object(C.a)(n.viewMatrix,l):n.viewMatrix),r.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const h=o._sectionPlanesState.sectionPlanes.length;if(h>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*h,a=s.renderFlags;for(let e=0;e<h;e++){const s=this._uSectionPlanes[e],o=a.sectionPlanesActivePerLayer[i+e];if(r.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,Y);r.uniform3fv(s.pos,t)}else r.uniform3fv(s.pos,i.pos);r.uniform3fv(s.dir,i.dir)}}}r.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(a.positionsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(a.offsetsBuf),this._aColor&&this._aColor.bindArrayBuffer(a.colorsBuf),this._aFlags.bindArrayBuffer(a.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(a.flags2Buf),a.indicesBuf.bind(),r.drawElements(r.TRIANGLES,a.indicesBuf.numItems,a.indicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aColor=i.getAttribute("color"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Triangles batching occlusion vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 color;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("void main(void) {"),i.push("if (int(flags.x) != renderPass) {"),i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("  } else {"),i.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("      vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("      vWorldPosition = worldPosition;"),i.push("      vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("  }"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Triangles batching occlusion fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("      float dist = 0.0;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("      if (sectionPlaneActive"+t+") {"),s.push("          dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("      }");s.push("      if (dist > 0.0) { discard; }"),s.push("  }")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("   gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}var Q=i("hEnr");const q=r.a.vec3();class K{constructor(t){this._scene=t,this._allocate(),this._hash=this._getHash()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=e._state.rtcCenter;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.uniformMatrix4fv(this._uViewMatrix,!1,l?Object(C.a)(r.viewMatrix,l):r.viewMatrix);const h=o._sectionPlanesState.sectionPlanes.length;if(h>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*h,r=s.renderFlags;for(let e=0;e<h;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,q);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),n.indicesBuf.bind(),a.drawElements(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Triangles batching depth vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("void main(void) {"),i.push("if (int(flags.x) != renderPass) {"),i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("  } else {"),i.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("      vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("      vWorldPosition = worldPosition;"),i.push("      vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("  }"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Triangles batching depth fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("const float   packUpScale = 256. / 255.;"),s.push("const float   unpackDownscale = 255. / 256.;"),s.push("const vec3    packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );"),s.push("const vec4    unpackFactors = unpackDownscale / vec4( packFactors, 1. );"),s.push("const float   shiftRight8 = 1. / 256.;"),s.push("vec4 packDepthToRGBA( const in float v ) {"),s.push("    vec4 r = vec4( fract( v * packFactors ), v );"),s.push("    r.yzw -= r.xyz * shiftRight8;"),s.push("    return r * packUpScale;"),s.push("}"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("      float dist = 0.0;");for(var o=0;o<e.sectionPlanes.length;o++)s.push("      if (sectionPlaneActive"+o+") {"),s.push("          dist += clamp(dot(-sectionPlaneDir"+o+".xyz, vWorldPosition.xyz - sectionPlanePos"+o+".xyz), 0.0, 1000.0);"),s.push("      }");s.push("      if (dist > 0.0) { discard; }"),s.push("  }")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("    gl_FragColor = packDepthToRGBA(gl_FragCoord.z); "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null,Q.a.memory.programs--}}const J=r.a.vec3();class ${constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=e._state.rtcCenter;if(!this._program&&(this._allocate(e),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(e)),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,l?Object(C.a)(r.viewMatrix,l):r.viewMatrix),a.uniformMatrix4fv(this._uViewNormalMatrix,!1,r.viewNormalMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.uniformMatrix4fv(this._uWorldNormalMatrix,!1,s.worldNormalMatrix);const h=o._sectionPlanesState.sectionPlanes.length;if(h>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*h,r=s.renderFlags;for(let e=0;e<h;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,J);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset.bindArrayBuffer(n.offsetsBuf),this._aNormal.bindArrayBuffer(n.normalsBuf),this._aColor.bindArrayBuffer(n.colorsBuf),this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),n.indicesBuf.bind(),a.drawElements(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uWorldNormalMatrix=i.getLocation("worldNormalMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uViewNormalMatrix=i.getLocation("viewNormalMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aNormal=i.getAttribute("normal"),this._aColor=i.getAttribute("color"),this._aFlags=i.getAttribute("flags"),this._aFlags2&&(this._aFlags2=i.getAttribute("flags2")),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Batched geometry normals vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec3 normal;"),i.push("attribute vec4 color;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 worldNormalMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 viewNormalMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),i.push("vec3 octDecode(vec2 oct) {"),i.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"),i.push("    if (v.z < 0.0) {"),i.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"),i.push("    }"),i.push("    return normalize(v);"),i.push("}"),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec3 vViewNormal;"),i.push("void main(void) {"),i.push("if (int(flags.x) != renderPass) {"),i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("  } else {"),i.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("      vec4 viewPosition   = viewMatrix * worldPosition; "),i.push("      vec4 worldNormal    = worldNormalMatrix * vec4(octDecode(normal.xy), 0.0); "),i.push("      vec3 viewNormal     = normalize((viewNormalMatrix * worldNormal).xyz);"),e&&(i.push("      vWorldPosition  = worldPosition;"),i.push("      vFlags2         = flags2;")),i.push("      vViewNormal = viewNormal;"),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("  }"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Batched geometry normals fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec3 vViewNormal;"),s.push("vec3 packNormalToRGB( const in vec3 normal ) {"),s.push("    return normalize( normal ) * 0.5 + 0.5;"),s.push("}"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("      float dist = 0.0;");for(var o=0;o<e.sectionPlanes.length;o++)s.push("      if (sectionPlaneActive"+o+") {"),s.push("          dist += clamp(dot(-sectionPlaneDir"+o+".xyz, vWorldPosition.xyz - sectionPlanePos"+o+".xyz), 0.0, 1000.0);"),s.push("      }");s.push("      if (dist > 0.0) { discard; }"),s.push("  }")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("    gl_FragColor = vec4(packNormalToRGB(vViewNormal), 1.0); "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const tt=r.a.vec3();class et{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e){const i=this._scene,s=i.canvas.gl,o=e._state;this._program||this._allocate(),t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t)),s.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),i.logarithmicDepthBufferEnabled&&s.uniform1f(this._uZFar,i.camera.project.far),this._aPosition.bindArrayBuffer(o.positionsBuf),this._aColor&&this._aColor.bindArrayBuffer(o.colorsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(o.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(o.flags2Buf),this._aOffset&&this._aOffset.bindArrayBuffer(o.offsetsBuf),o.indicesBuf.bind();const r=i._sectionPlanesState.sectionPlanes.length;if(r>0){const t=i._sectionPlanesState.sectionPlanes,o=e.layerIndex*r,a=model.renderFlags,n=e._state.rtcCenter;for(let e=0;e<r;e++){const i=this._uSectionPlanes[e],r=a.sectionPlanesActivePerLayer[o+e];if(s.uniform1i(i.active,r?1:0),r){const o=t[e];if(n){const t=Object(C.b)(o.dist,o.dir,n,tt);s.uniform3fv(i.pos,t)}else s.uniform3fv(i.pos,o.pos);s.uniform3fv(i.dir,o.dir)}}}s.drawElements(s.TRIANGLES,o.indicesBuf.numItems,o.indicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const s=this._program;this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uShadowViewMatrix=s.getLocation("shadowViewMatrix"),this._uShadowProjMatrix=s.getLocation("shadowProjMatrix"),t.logarithmicDepthBufferEnabled&&(this._uZFar=s.getLocation("zFar")),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aColor=s.getAttribute("color"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2")}_bindProgram(t){const e=this._scene.canvas.gl;this._program.bind(),e.uniformMatrix4fv(this._uShadowViewMatrix,!1,t.shadowViewMatrix),e.uniformMatrix4fv(this._uShadowProjMatrix,!1,t.shadowProjMatrix),this._lastLightId=null}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Batched geometry shadow vertex shader"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 color;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("uniform mat4 shadowViewMatrix;"),i.push("uniform mat4 shadowProjMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec4 vViewPosition;"),i.push("void main(void) {"),i.push("  bool visible        = (float(flags.x) > 0.0);"),i.push("  bool transparent    = ((float(color.a) / 255.0) < 1.0);"),i.push("  if (!visible || transparent) {"),i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("  } else {"),i.push("      vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("      vec4 viewPosition  = shadowViewMatrix * worldPosition; "),e&&(i.push("      vWorldPosition = worldPosition;"),i.push("      vFlags2 = flags2;")),i.push("      vViewPosition = viewPosition;"),i.push("      gl_Position = shadowProjMatrix * viewPosition;"),i.push("  }"),i.push("}"),i}_buildFragmentShader(){const t=this._scene._sectionPlanesState,e=t.sectionPlanes.length>0,i=[];if(i.push("// Batched geometry shadow fragment shader"),i.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),i.push("precision highp float;"),i.push("precision highp int;"),i.push("#else"),i.push("precision mediump float;"),i.push("precision mediump int;"),i.push("#endif"),e){i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;");for(let e=0;e<t.sectionPlanes.length;e++)i.push("uniform bool sectionPlaneActive"+e+";"),i.push("uniform vec3 sectionPlanePos"+e+";"),i.push("uniform vec3 sectionPlaneDir"+e+";")}if(i.push("varying vec4 vViewPosition;"),i.push("vec4 encodeFloat( const in float v ) {"),i.push("  const vec4 bitShift = vec4(256 * 256 * 256, 256 * 256, 256, 1.0);"),i.push("  const vec4 bitMask = vec4(0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);"),i.push("  vec4 comp = fract(v * bitShift);"),i.push("  comp -= comp.xxyz * bitMask;"),i.push("  return comp;"),i.push("}"),i.push("void main(void) {"),e){i.push("  bool clippable = (float(vFlags2.x) > 0.0);"),i.push("  if (clippable) {"),i.push("      float dist = 0.0;");for(var s=0;s<t.sectionPlanes.length;s++)i.push("      if (sectionPlaneActive"+s+") {"),i.push("          dist += clamp(dot(-sectionPlaneDir"+s+".xyz, vWorldPosition.xyz - sectionPlanePos"+s+".xyz), 0.0, 1000.0);"),i.push("      }");i.push("      if (dist > 0.0) { discard; }"),i.push("  }")}return i.push("    gl_FragColor = encodeFloat( gl_FragCoord.z); "),i.push("}"),i}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const it=r.a.vec4(),st=r.a.vec3(),ot={linear:"linearToLinear",sRGB:"sRGBToLinear",gamma:"gammaToLinear"};class rt{constructor(t,e){this._scene=t,this._withSAO=e,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){const t=this._scene;return[t.gammaOutput,t._lightsState.getHash(),t._sectionPlanesState.getHash(),this._withSAO?"sao":"nosao"].join(";")}drawLayer(t,e,i){const s=this._scene,o=s.camera,r=e.model,a=s.canvas.gl,n=e._state,l=e._state.rtcCenter;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t)),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,l?Object(C.a)(o.viewMatrix,l):o.viewMatrix),a.uniformMatrix4fv(this._uViewNormalMatrix,!1,o.viewNormalMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,r.worldMatrix),a.uniformMatrix4fv(this._uWorldNormalMatrix,!1,r.worldNormalMatrix);const h=s._sectionPlanesState.sectionPlanes.length;if(h>0){const t=s._sectionPlanesState.sectionPlanes,i=e.layerIndex*h,o=r.renderFlags;for(let e=0;e<h;e++){const s=this._uSectionPlanes[e],r=o.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,r?1:0),r){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,st);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aNormal&&this._aNormal.bindArrayBuffer(n.normalsBuf),this._aColor&&this._aColor.bindArrayBuffer(n.colorsBuf),this._aMetallicRoughness&&this._aMetallicRoughness.bindArrayBuffer(n.metallicRoughnessBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),n.indicesBuf.bind(),a.drawElements(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._lightsState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uWorldNormalMatrix=s.getLocation("worldNormalMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uViewNormalMatrix=s.getLocation("viewNormalMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uGammaFactor=s.getLocation("gammaFactor"),this._uLightAmbient=s.getLocation("lightAmbient"),this._uLightColor=[],this._uLightDir=[],this._uLightPos=[],this._uLightAttenuation=[];const o=i.lights;let r;for(let a=0,n=o.length;a<n;a++)switch(r=o[a],r.type){case"dir":this._uLightColor[a]=s.getLocation("lightColor"+a),this._uLightPos[a]=null,this._uLightDir[a]=s.getLocation("lightDir"+a);break;case"point":this._uLightColor[a]=s.getLocation("lightColor"+a),this._uLightPos[a]=s.getLocation("lightPos"+a),this._uLightDir[a]=null,this._uLightAttenuation[a]=s.getLocation("lightAttenuation"+a);break;case"spot":this._uLightColor[a]=s.getLocation("lightColor"+a),this._uLightPos[a]=s.getLocation("lightPos"+a),this._uLightDir[a]=s.getLocation("lightDir"+a),this._uLightAttenuation[a]=s.getLocation("lightAttenuation"+a)}i.reflectionMaps.length>0&&(this._uReflectionMap="reflectionMap"),i.lightMaps.length>0&&(this._uLightMap="lightMap"),this._uSectionPlanes=[];for(let a=0,n=t._sectionPlanesState.sectionPlanes.length;a<n;a++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+a),pos:s.getLocation("sectionPlanePos"+a),dir:s.getLocation("sectionPlaneDir"+a)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aNormal=s.getAttribute("normal"),this._aColor=s.getAttribute("color"),this._aMetallicRoughness=s.getAttribute("metallicRoughness"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._withSAO&&(this._uOcclusionTexture="uOcclusionTexture",this._uSAOParams=s.getLocation("uSAOParams")),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(t){const e=n.a.MAX_TEXTURE_UNITS,i=this._scene,s=i.canvas.gl,o=this._program,r=i._lightsState,a=r.lights,l=i.camera.project;if(o.bind(),s.uniformMatrix4fv(this._uProjMatrix,!1,l.matrix),this._uLightAmbient){const t=i._lightsState.getAmbientColor();s.uniform4f(this._uLightAmbient,t[0],t[1],t[2],1)}for(let n=0,h=a.length;n<h;n++){const t=a[n];this._uLightColor[n]&&s.uniform4f(this._uLightColor[n],t.color[0],t.color[1],t.color[2],t.intensity),this._uLightPos[n]&&(s.uniform3fv(this._uLightPos[n],t.pos),this._uLightAttenuation[n]&&s.uniform1f(this._uLightAttenuation[n],t.attenuation)),this._uLightDir[n]&&s.uniform3fv(this._uLightDir[n],t.dir)}if(r.reflectionMaps.length>0&&r.reflectionMaps[0].texture&&this._uReflectionMap&&(o.bindTexture(this._uReflectionMap,r.reflectionMaps[0].texture,t.textureUnit),t.textureUnit=(t.textureUnit+1)%e,t.bindTexture++),r.lightMaps.length>0&&r.lightMaps[0].texture&&this._uLightMap&&(o.bindTexture(this._uLightMap,r.lightMaps[0].texture,t.textureUnit),t.textureUnit=(t.textureUnit+1)%e,t.bindTexture++),this._withSAO){const o=i.sao;if(o.possible){const i=s.drawingBufferWidth,r=s.drawingBufferHeight;it[0]=i,it[1]=r,it[2]=o.blendCutoff,it[3]=o.blendFactor,s.uniform4fv(this._uSAOParams,it),this._program.bindTexture(this._uOcclusionTexture,t.occlusionTexture,t.textureUnit),t.textureUnit=(t.textureUnit+1)%e,t.bindTexture++}}if(i.logarithmicDepthBufferEnabled){const t=2/(Math.log(l.far+1)/Math.LN2);s.uniform1f(this._uLogDepthBufFC,t)}this._uGammaFactor&&s.uniform1f(this._uGammaFactor,i.gammaFactor)}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState,i=t._lightsState,s=e.sectionPlanes.length>0,o=e.clippingCaps,r=[];return r.push("// Triangles batching quality draw vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("#extension GL_EXT_frag_depth : enable"),r.push("uniform int renderPass;"),r.push("attribute vec3 position;"),r.push("attribute vec3 normal;"),r.push("attribute vec4 color;"),r.push("attribute vec2 metallicRoughness;"),r.push("attribute vec4 flags;"),r.push("attribute vec4 flags2;"),t.entityOffsetsEnabled&&r.push("attribute vec3 offset;"),r.push("uniform mat4 worldMatrix;"),r.push("uniform mat4 worldNormalMatrix;"),r.push("uniform mat4 viewMatrix;"),r.push("uniform mat4 projMatrix;"),r.push("uniform mat4 viewNormalMatrix;"),r.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(r.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("varying float vFragDepth;")),r.push("vec3 octDecode(vec2 oct) {"),r.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"),r.push("    if (v.z < 0.0) {"),r.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"),r.push("    }"),r.push("    return normalize(v);"),r.push("}"),r.push("varying vec4 vViewPosition;"),r.push("varying vec3 vViewNormal;"),r.push("varying vec4 vColor;"),r.push("varying vec2 vMetallicRoughness;"),i.lightMaps.length>0&&r.push("varying vec3 vWorldNormal;"),s&&(r.push("varying vec4 vWorldPosition;"),r.push("varying vec4 vFlags2;"),o&&r.push("varying vec4 vClipPosition;")),r.push("void main(void) {"),r.push("if (int(flags.x) != renderPass) {"),r.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),r.push("} else {"),r.push("vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&r.push("worldPosition.xyz = worldPosition.xyz + offset;"),r.push("vec4 viewPosition  = viewMatrix * worldPosition; "),r.push("vec4 worldNormal =  worldNormalMatrix * vec4(octDecode(normal.xy), 0.0); "),r.push("vec3 viewNormal = normalize((viewNormalMatrix * worldNormal).xyz);"),r.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?r.push("vFragDepth = 1.0 + clipPos.w;"):(r.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),r.push("clipPos.z *= clipPos.w;"))),s&&(r.push("vWorldPosition = worldPosition;"),r.push("vFlags2 = flags2;"),o&&r.push("vClipPosition = clipPos;")),r.push("vViewPosition = viewPosition;"),r.push("vViewNormal = viewNormal;"),r.push("vColor = color;"),r.push("vMetallicRoughness = metallicRoughness;"),i.lightMaps.length>0&&r.push("vWorldNormal = worldNormal.xyz;"),r.push("gl_Position = clipPos;"),r.push("}"),r.push("}"),r}_buildFragmentShader(){const t=this._scene,e=t.gammaOutput,i=t._sectionPlanesState,s=t._lightsState,o=i.sectionPlanes.length>0,r=i.clippingCaps,a=[];a.push("// Triangles batching quality draw fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&a.push("#extension GL_EXT_frag_depth : enable"),a.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),a.push("precision highp float;"),a.push("precision highp int;"),a.push("#else"),a.push("precision mediump float;"),a.push("precision mediump int;"),a.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(a.push("uniform float logDepthBufFC;"),a.push("varying float vFragDepth;")),a.push("varying vec4 vViewPosition;"),a.push("varying vec3 vViewNormal;"),a.push("varying vec4 vColor;"),a.push("varying vec2 vMetallicRoughness;"),s.lightMaps.length>0&&a.push("varying vec3 vWorldNormal;"),a.push("uniform mat4 viewMatrix;"),s.reflectionMaps.length>0&&a.push("uniform samplerCube reflectionMap;"),s.lightMaps.length>0&&a.push("uniform samplerCube lightMap;"),a.push("uniform vec4 lightAmbient;");for(let n=0,l=s.lights.length;n<l;n++){const t=s.lights[n];"ambient"!==t.type&&(a.push("uniform vec4 lightColor"+n+";"),"dir"===t.type&&a.push("uniform vec3 lightDir"+n+";"),"point"===t.type&&a.push("uniform vec3 lightPos"+n+";"),"spot"===t.type&&(a.push("uniform vec3 lightPos"+n+";"),a.push("uniform vec3 lightDir"+n+";")))}if(this._withSAO&&(a.push("uniform sampler2D uOcclusionTexture;"),a.push("uniform vec4      uSAOParams;"),a.push("const float       packUpscale = 256. / 255.;"),a.push("const float       unpackDownScale = 255. / 256.;"),a.push("const vec3        packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );"),a.push("const vec4        unPackFactors = unpackDownScale / vec4( packFactors, 1. );"),a.push("float unpackRGBAToDepth( const in vec4 v ) {"),a.push("    return dot( v, unPackFactors );"),a.push("}")),a.push("uniform float gammaFactor;"),a.push("vec4 linearToLinear( in vec4 value ) {"),a.push("  return value;"),a.push("}"),a.push("vec4 sRGBToLinear( in vec4 value ) {"),a.push("  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );"),a.push("}"),a.push("vec4 gammaToLinear( in vec4 value) {"),a.push("  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );"),a.push("}"),e&&(a.push("vec4 linearToGamma( in vec4 value, in float gammaFactor ) {"),a.push("  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );"),a.push("}")),o){a.push("varying vec4 vWorldPosition;"),a.push("varying vec4 vFlags2;"),r&&a.push("varying vec4 vClipPosition;");for(let t=0,e=i.sectionPlanes.length;t<e;t++)a.push("uniform bool sectionPlaneActive"+t+";"),a.push("uniform vec3 sectionPlanePos"+t+";"),a.push("uniform vec3 sectionPlaneDir"+t+";")}if(a.push("#define PI 3.14159265359"),a.push("#define RECIPROCAL_PI 0.31830988618"),a.push("#define RECIPROCAL_PI2 0.15915494"),a.push("#define EPSILON 1e-6"),a.push("#define saturate(a) clamp( a, 0.0, 1.0 )"),a.push("vec3 inverseTransformDirection(in vec3 dir, in mat4 matrix) {"),a.push("   return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );"),a.push("}"),a.push("struct IncidentLight {"),a.push("   vec3 color;"),a.push("   vec3 direction;"),a.push("};"),a.push("struct ReflectedLight {"),a.push("   vec3 diffuse;"),a.push("   vec3 specular;"),a.push("};"),a.push("struct Geometry {"),a.push("   vec3 position;"),a.push("   vec3 viewNormal;"),a.push("   vec3 worldNormal;"),a.push("   vec3 viewEyeDir;"),a.push("};"),a.push("struct Material {"),a.push("   vec3    diffuseColor;"),a.push("   float   specularRoughness;"),a.push("   vec3    specularColor;"),a.push("   float   shine;"),a.push("};"),a.push("float GGXRoughnessToBlinnExponent(const in float ggxRoughness) {"),a.push("   float r = ggxRoughness + 0.0001;"),a.push("   return (2.0 / (r * r) - 2.0);"),a.push("}"),a.push("float getSpecularMIPLevel(const in float blinnShininessExponent, const in int maxMIPLevel) {"),a.push("   float maxMIPLevelScalar = float( maxMIPLevel );"),a.push("   float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( ( blinnShininessExponent * blinnShininessExponent ) + 1.0 );"),a.push("   return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );"),a.push("}"),s.reflectionMaps.length>0&&(a.push("vec3 getLightProbeIndirectRadiance(const in vec3 reflectVec, const in float blinnShininessExponent, const in int maxMIPLevel) {"),a.push("   float mipLevel = 0.5 * getSpecularMIPLevel(blinnShininessExponent, maxMIPLevel);"),a.push("   vec3 envMapColor = "+ot[s.reflectionMaps[0].encoding]+"(textureCube(reflectionMap, reflectVec, mipLevel)).rgb;"),a.push("  return envMapColor;"),a.push("}")),a.push("vec3 F_Schlick(const in vec3 specularColor, const in float dotLH) {"),a.push("   float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );"),a.push("   return ( 1.0 - specularColor ) * fresnel + specularColor;"),a.push("}"),a.push("float G_GGX_Smith(const in float alpha, const in float dotNL, const in float dotNV) {"),a.push("   float a2 = ( alpha * alpha );"),a.push("   float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * ( dotNL * dotNL ) );"),a.push("   float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * ( dotNV * dotNV ) );"),a.push("   return 1.0 / ( gl * gv );"),a.push("}"),a.push("float G_GGX_SmithCorrelated(const in float alpha, const in float dotNL, const in float dotNV) {"),a.push("   float a2 = ( alpha * alpha );"),a.push("   float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * ( dotNV * dotNV ) );"),a.push("   float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * ( dotNL * dotNL ) );"),a.push("   return 0.5 / max( gv + gl, EPSILON );"),a.push("}"),a.push("float D_GGX(const in float alpha, const in float dotNH) {"),a.push("   float a2 = ( alpha * alpha );"),a.push("   float denom = ( dotNH * dotNH) * ( a2 - 1.0 ) + 1.0;"),a.push("   return RECIPROCAL_PI * a2 / ( denom * denom);"),a.push("}"),a.push("vec3 BRDF_Specular_GGX(const in IncidentLight incidentLight, const in Geometry geometry, const in vec3 specularColor, const in float roughness) {"),a.push("   float alpha = ( roughness * roughness );"),a.push("   vec3 halfDir = normalize( incidentLight.direction + geometry.viewEyeDir );"),a.push("   float dotNL = saturate( dot( geometry.viewNormal, incidentLight.direction ) );"),a.push("   float dotNV = saturate( dot( geometry.viewNormal, geometry.viewEyeDir ) );"),a.push("   float dotNH = saturate( dot( geometry.viewNormal, halfDir ) );"),a.push("   float dotLH = saturate( dot( incidentLight.direction, halfDir ) );"),a.push("   vec3  F = F_Schlick( specularColor, dotLH );"),a.push("   float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );"),a.push("   float D = D_GGX( alpha, dotNH );"),a.push("   return F * (G * D);"),a.push("}"),a.push("vec3 BRDF_Specular_GGX_Environment(const in Geometry geometry, const in vec3 specularColor, const in float roughness) {"),a.push("   float dotNV = saturate(dot(geometry.viewNormal, geometry.viewEyeDir));"),a.push("   const vec4 c0 = vec4( -1, -0.0275, -0.572,  0.022);"),a.push("   const vec4 c1 = vec4(  1,  0.0425,   1.04, -0.04);"),a.push("   vec4 r = roughness * c0 + c1;"),a.push("   float a004 = min(r.x * r.x, exp2(-9.28 * dotNV)) * r.x + r.y;"),a.push("   vec2 AB    = vec2(-1.04, 1.04) * a004 + r.zw;"),a.push("   return specularColor * AB.x + AB.y;"),a.push("}"),(s.lightMaps.length>0||s.reflectionMaps.length>0)&&(a.push("void computePBRLightMapping(const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {"),s.lightMaps.length>0&&(a.push("   vec3 irradiance = "+ot[s.lightMaps[0].encoding]+"(textureCube(lightMap, geometry.worldNormal)).rgb;"),a.push("   irradiance *= PI;"),a.push("   vec3 diffuseBRDFContrib = (RECIPROCAL_PI * material.diffuseColor);"),a.push("   reflectedLight.diffuse +=  irradiance * diffuseBRDFContrib;")),s.reflectionMaps.length>0&&(a.push("   vec3 reflectVec             = reflect(geometry.viewEyeDir, geometry.viewNormal);"),a.push("   reflectVec                  = inverseTransformDirection(reflectVec, viewMatrix);"),a.push("   float blinnExpFromRoughness = GGXRoughnessToBlinnExponent(material.specularRoughness);"),a.push("   vec3 radiance               = getLightProbeIndirectRadiance(reflectVec, blinnExpFromRoughness, 8);"),a.push("   vec3 specularBRDFContrib    = BRDF_Specular_GGX_Environment(geometry, material.specularColor, material.specularRoughness);"),a.push("   reflectedLight.specular     += radiance * specularBRDFContrib;")),a.push("}")),a.push("void computePBRLighting(const in IncidentLight incidentLight, const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {"),a.push("   float dotNL     = saturate(dot(geometry.viewNormal, incidentLight.direction));"),a.push("   vec3 irradiance = dotNL * incidentLight.color * PI;"),a.push("   reflectedLight.diffuse  += irradiance * (RECIPROCAL_PI * material.diffuseColor);"),a.push("   reflectedLight.specular += irradiance * BRDF_Specular_GGX(incidentLight, geometry, material.specularColor, material.specularRoughness);"),a.push("}"),a.push("void main(void) {"),o){a.push("  bool clippable = (float(vFlags2.x) > 0.0);"),a.push("  if (clippable) {"),a.push("  float dist = 0.0;");for(let t=0,e=i.sectionPlanes.length;t<e;t++)a.push("if (sectionPlaneActive"+t+") {"),a.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),a.push("}");r?(a.push("  if (dist > (0.002 * vClipPosition.w)) {"),a.push("      discard;"),a.push("  }"),a.push("  if (dist > 0.0) { "),a.push("      gl_FragColor=vec4(1.0, 0.0, 0.0, 1.0);"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&a.push("  gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),a.push("  return;"),a.push("}")):(a.push("  if (dist > 0.0) { "),a.push("      discard;"),a.push("  }")),a.push("}")}a.push("IncidentLight  light;"),a.push("Material       material;"),a.push("Geometry       geometry;"),a.push("ReflectedLight reflectedLight = ReflectedLight(vec3(0.0,0.0,0.0), vec3(0.0,0.0,0.0));"),a.push("vec3 rgb = (vec3(float(vColor.r) / 255.0, float(vColor.g) / 255.0, float(vColor.b) / 255.0));"),a.push("float alpha = float(vColor.a) / 255.0;"),a.push("vec3  diffuseColor = rgb;"),a.push("float specularF0 = 1.0;"),a.push("float metallic = float(vMetallicRoughness.r) / 255.0;"),a.push("float roughness = float(vMetallicRoughness.g) / 255.0;"),a.push("float dielectricSpecular = 0.16 * specularF0 * specularF0;"),a.push("material.diffuseColor      = diffuseColor * (1.0 - dielectricSpecular) * (1.0 - metallic);"),a.push("material.specularRoughness = clamp(roughness, 0.04, 1.0);"),a.push("material.specularColor     = mix(vec3(dielectricSpecular), diffuseColor, metallic);"),a.push("geometry.position      = vViewPosition.xyz;"),a.push("geometry.viewNormal    = -normalize(vViewNormal);"),a.push("geometry.viewEyeDir    = normalize(vViewPosition.xyz);"),s.lightMaps.length>0&&a.push("geometry.worldNormal   = normalize(vWorldNormal);"),(s.lightMaps.length>0||s.reflectionMaps.length>0)&&a.push("computePBRLightMapping(geometry, material, reflectedLight);");for(let n=0,l=s.lights.length;n<l;n++){const t=s.lights[n];if("ambient"!==t.type){if("dir"===t.type)"view"===t.space?a.push("light.direction =  normalize(lightDir"+n+");"):a.push("light.direction =  normalize((viewMatrix * vec4(lightDir"+n+", 0.0)).xyz);");else if("point"===t.type)"view"===t.space?a.push("light.direction =  normalize(lightPos"+n+" - vViewPosition.xyz);"):a.push("light.direction =  normalize((viewMatrix * vec4(lightPos"+n+", 0.0)).xyz);");else{if("spot"!==t.type)continue;"view"===t.space?a.push("light.direction =  normalize(lightDir"+n+");"):a.push("light.direction =  normalize((viewMatrix * vec4(lightDir"+n+", 0.0)).xyz);")}a.push("light.color =  lightColor"+n+".rgb * lightColor"+n+".a;"),a.push("computePBRLighting(light, geometry, material, reflectedLight);")}}return a.push("vec3 outgoingLight = (lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedLight.diffuse) + (reflectedLight.specular);"),a.push("vec4 fragColor;"),this._withSAO?(a.push("   float viewportWidth     = uSAOParams[0];"),a.push("   float viewportHeight    = uSAOParams[1];"),a.push("   float blendCutoff       = uSAOParams[2];"),a.push("   float blendFactor       = uSAOParams[3];"),a.push("   vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);"),a.push("   float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBAToDepth(texture2D(uOcclusionTexture, uv))) * blendFactor;"),a.push("   fragColor               = vec4(outgoingLight.rgb * ambient, alpha);")):a.push("   fragColor            = vec4(outgoingLight.rgb, alpha);"),e&&a.push("fragColor = linearToGamma(fragColor, gammaFactor);"),a.push("gl_FragColor = fragColor;"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&a.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),a.push("}"),a}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}class at{constructor(t){this._scene=t}_compile(){this._colorRenderer&&!this._colorRenderer.getValid()&&(this._colorRenderer.destroy(),this._colorRenderer=null),this._colorRendererWithSAO&&!this._colorRendererWithSAO.getValid()&&(this._colorRendererWithSAO.destroy(),this._colorRendererWithSAO=null),this._colorQualityRenderer&&!this._colorQualityRenderer.getValid()&&(this._colorQualityRenderer.destroy(),this._colorQualityRenderer=null),this._colorQualityRendererWithSAO&&!this._colorQualityRendererWithSAO.getValid()&&(this._colorQualityRendererWithSAO.destroy(),this._colorQualityRendererWithSAO=null),this._depthRenderer&&!this._depthRenderer.getValid()&&(this._depthRenderer.destroy(),this._depthRenderer=null),this._normalsRenderer&&!this._normalsRenderer.getValid()&&(this._normalsRenderer.destroy(),this._normalsRenderer=null),this._silhouetteRenderer&&!this._silhouetteRenderer.getValid()&&(this._silhouetteRenderer.destroy(),this._silhouetteRenderer=null),this._edgesRenderer&&!this._edgesRenderer.getValid()&&(this._edgesRenderer.destroy(),this._edgesRenderer=null),this._edgesColorRenderer&&!this._edgesColorRenderer.getValid()&&(this._edgesColorRenderer.destroy(),this._edgesColorRenderer=null),this._pickMeshRenderer&&!this._pickMeshRenderer.getValid()&&(this._pickMeshRenderer.destroy(),this._pickMeshRenderer=null),this._pickDepthRenderer&&!this._pickDepthRenderer.getValid()&&(this._pickDepthRenderer.destroy(),this._pickDepthRenderer=null),this._pickNormalsRenderer&&!1===this._pickNormalsRenderer.getValid()&&(this._pickNormalsRenderer.destroy(),this._pickNormalsRenderer=null),this._occlusionRenderer&&!1===this._occlusionRenderer.getValid()&&(this._occlusionRenderer.destroy(),this._occlusionRenderer=null),this._shadowRenderer&&!this._shadowRenderer.getValid()&&(this._shadowRenderer.destroy(),this._shadowRenderer=null)}get colorRenderer(){return this._colorRenderer||(this._colorRenderer=new R(this._scene,!1)),this._colorRenderer}get colorRendererWithSAO(){return this._colorRendererWithSAO||(this._colorRendererWithSAO=new R(this._scene,!0)),this._colorRendererWithSAO}get colorQualityRenderer(){return this._colorQualityRenderer||(this._colorQualityRenderer=new rt(this._scene,!1)),this._colorQualityRenderer}get colorQualityRendererWithSAO(){return this._colorQualityRendererWithSAO||(this._colorQualityRendererWithSAO=new rt(this._scene,!0)),this._colorQualityRendererWithSAO}get silhouetteRenderer(){return this._silhouetteRenderer||(this._silhouetteRenderer=new T(this._scene)),this._silhouetteRenderer}get depthRenderer(){return this._depthRenderer||(this._depthRenderer=new K(this._scene)),this._depthRenderer}get normalsRenderer(){return this._normalsRenderer||(this._normalsRenderer=new $(this._scene)),this._normalsRenderer}get edgesRenderer(){return this._edgesRenderer||(this._edgesRenderer=new z(this._scene)),this._edgesRenderer}get edgesColorRenderer(){return this._edgesColorRenderer||(this._edgesColorRenderer=new X(this._scene)),this._edgesColorRenderer}get pickMeshRenderer(){return this._pickMeshRenderer||(this._pickMeshRenderer=new U(this._scene)),this._pickMeshRenderer}get pickNormalsRenderer(){return this._pickNormalsRenderer||(this._pickNormalsRenderer=new W(this._scene)),this._pickNormalsRenderer}get pickDepthRenderer(){return this._pickDepthRenderer||(this._pickDepthRenderer=new H(this._scene)),this._pickDepthRenderer}get occlusionRenderer(){return this._occlusionRenderer||(this._occlusionRenderer=new Z(this._scene)),this._occlusionRenderer}get shadowRenderer(){return this._shadowRenderer||(this._shadowRenderer=new et(this._scene)),this._shadowRenderer}_destroy(){this._colorRenderer&&this._colorRenderer.destroy(),this._colorRendererWithSAO&&this._colorRendererWithSAO.destroy(),this._colorQualityRenderer&&this._colorQualityRenderer.destroy(),this._colorQualityRendererWithSAO&&this._colorQualityRendererWithSAO.destroy(),this._depthRenderer&&this._depthRenderer.destroy(),this._normalsRenderer&&this._normalsRenderer.destroy(),this._silhouetteRenderer&&this._silhouetteRenderer.destroy(),this._edgesRenderer&&this._edgesRenderer.destroy(),this._edgesColorRenderer&&this._edgesColorRenderer.destroy(),this._pickMeshRenderer&&this._pickMeshRenderer.destroy(),this._pickDepthRenderer&&this._pickDepthRenderer.destroy(),this._pickNormalsRenderer&&this._pickNormalsRenderer.destroy(),this._occlusionRenderer&&this._occlusionRenderer.destroy(),this._shadowRenderer&&this._shadowRenderer.destroy()}}const nt={};const lt=n.a.SUPPORTED_EXTENSIONS.OES_element_index_uint;class ht{constructor(t=5e6){lt?t>5e6&&(t=5e6):t>65530&&(t=65530),this.maxVerts=t,this.maxIndices=3*t,this.positions=[],this.colors=[],this.metallicRoughness=[],this.normals=[],this.pickColors=[],this.flags=[],this.flags2=[],this.offsets=[],this.indices=[],this.edgeIndices=[]}}const ut=r.a.mat4(),ct=r.a.mat4();function dt(t,e,i){const s=t.length,o=new Uint16Array(s),a=e[0],n=e[1],l=e[2],h=e[3]-a,u=e[4]-n,c=e[5]-l,d=65525,p=d/h,f=d/u,_=d/c;for(let r=0;r<s;r+=3)o[r+0]=Math.floor((t[r+0]-a)*p),o[r+1]=Math.floor((t[r+1]-n)*f),o[r+2]=Math.floor((t[r+2]-l)*_);return r.a.identityMat4(ut),r.a.translationMat4v(e,ut),r.a.identityMat4(ct),r.a.scalingMat4v([h/d,u/d,c/d],ct),r.a.mulMat4(ut,ct,i),o}function pt(t,e,i){let s=t[0]/(Math.abs(t[0])+Math.abs(t[1])+Math.abs(t[2])),o=t[1]/(Math.abs(t[0])+Math.abs(t[1])+Math.abs(t[2]));if(t[2]<0){let t=s,e=o;t=(1-Math.abs(o))*(s>=0?1:-1),e=(1-Math.abs(s))*(o>=0?1:-1),s=t,o=e}return new Int8Array([Math[e](127.5*s+(s<0?-1:0)),Math[i](127.5*o+(o<0?-1:0))])}function ft(t,e,i,s){let o=t[e]/(Math.abs(t[e])+Math.abs(t[e+1])+Math.abs(t[e+2])),r=t[e+1]/(Math.abs(t[e])+Math.abs(t[e+1])+Math.abs(t[e+2]));if(t[e+2]<0){let t=(1-Math.abs(r))*(o>=0?1:-1),e=(1-Math.abs(o))*(r>=0?1:-1);o=t,r=e}return new Int8Array([Math[i](127.5*o+(o<0?-1:0)),Math[s](127.5*r+(r<0?-1:0))])}function _t(t){let e=t[0],i=t[1];e/=e<0?127:128,i/=i<0?127:128;const s=1-Math.abs(e)-Math.abs(i);s<0&&(e=(1-Math.abs(i))*(e>=0?1:-1),i=(1-Math.abs(e))*(i>=0?1:-1));const o=Math.sqrt(e*e+i*i+s*s);return[e/o,i/o,s/o]}function gt(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}const mt=r.a.mat4(),Pt=r.a.mat4(),vt=r.a.vec4([0,0,0,1]),xt=r.a.vec4([0,0,0,1]),bt=r.a.vec4([0,0,0,1]),yt=r.a.OBB3();class Mt{constructor(t,e){this.sortId="-solid",this.layerIndex=e.layerIndex,this._batchingRenderers=function(t){const e=t.id;let i=nt[e];return i||(i=new at(t),nt[e]=i,i._compile(),t.on("compile",(()=>{i._compile()})),t.on("destroyed",(()=>{delete nt[e],i._destroy()}))),i}(t.scene),this.model=t,this._buffer=new ht(e.maxGeometryBatchSize),this._scratchMemory=e.scratchMemory,this._state=new A.a({positionsBuf:null,offsetsBuf:null,normalsBuf:null,colorsBuf:null,metallicRoughnessBuf:null,flagsBuf:null,flags2Buf:null,indicesBuf:null,edgeIndicesBuf:null,positionsDecodeMatrix:r.a.mat4(),rtcCenter:null}),this._numPortions=0,this._numVisibleLayerPortions=0,this._numTransparentLayerPortions=0,this._numXRayedLayerPortions=0,this._numSelectedLayerPortions=0,this._numHighlightedLayerPortions=0,this._numClippableLayerPortions=0,this._numEdgesLayerPortions=0,this._numPickableLayerPortions=0,this._numCulledLayerPortions=0,this._modelAABB=r.a.collapseAABB3(),this._portions=[],this._finalized=!1,this._positionsDecodeMatrix=e.positionsDecodeMatrix,this._preCompressed=!!this._positionsDecodeMatrix,e.rtcCenter&&(this._state.rtcCenter=r.a.vec3(e.rtcCenter)),this.aabb=r.a.collapseAABB3(),this.solid=!!e.solid}canCreatePortion(t,e){if(this._finalized)throw"Already finalized";return this._buffer.positions.length+t<3*this._buffer.maxVerts&&this._buffer.indices.length+e<this._buffer.maxIndices}createPortion(t){if(this._finalized)throw"Already finalized";const e=t.positions,i=t.normals,s=t.indices,o=t.edgeIndices,a=t.color,n=t.metallic,l=t.roughness,h=t.colors,u=t.opacity,c=t.meshMatrix,d=t.worldMatrix,p=t.worldAABB,f=t.pickColor,_=this._buffer,g=_.positions.length/3,m=e.length/3,P=e.length;if(this._preCompressed){for(let o=0,r=e.length;o<r;o++)_.positions.push(e[o]);const t=w.a.getPositionsBounds(e),i=w.a.decompressPosition(t.min,this._positionsDecodeMatrix,[]),s=w.a.decompressPosition(t.max,this._positionsDecodeMatrix,[]);p[0]=i[0],p[1]=i[1],p[2]=i[2],p[3]=s[0],p[4]=s[1],p[5]=s[2],d&&(r.a.AABB3ToOBB3(p,yt),r.a.transformOBB3(d,yt),r.a.OBB3ToAABB3(yt,p))}else{const t=_.positions.length;for(let i=0,s=e.length;i<s;i++)_.positions.push(e[i]);if(c)for(let e=t,i=t+P;e<i;e+=3)vt[0]=_.positions[e+0],vt[1]=_.positions[e+1],vt[2]=_.positions[e+2],r.a.transformPoint4(c,vt,xt),_.positions[e+0]=xt[0],_.positions[e+1]=xt[1],_.positions[e+2]=xt[2],r.a.expandAABB3Point3(this._modelAABB,xt),d?(r.a.transformPoint4(d,xt,bt),r.a.expandAABB3Point3(p,bt)):r.a.expandAABB3Point3(p,xt);else for(let e=t,i=t+P;e<i;e+=3)vt[0]=_.positions[e+0],vt[1]=_.positions[e+1],vt[2]=_.positions[e+2],r.a.expandAABB3Point3(this._modelAABB,vt),d?(r.a.transformPoint4(d,vt,xt),r.a.expandAABB3Point3(p,xt)):r.a.expandAABB3Point3(p,vt)}if(this._state.rtcCenter){const t=this._state.rtcCenter;p[0]+=t[0],p[1]+=t[1],p[2]+=t[2],p[3]+=t[0],p[4]+=t[1],p[5]+=t[2]}if(r.a.expandAABB3(this.aabb,p),i)if(this._preCompressed)for(let r=0,x=i.length;r<x;r++)_.normals.push(i[r]);else{const t=mt;c?r.a.inverseMat4(r.a.transposeMat4(c,Pt),t):r.a.identityMat4(t,t),function(t,e,i,s,o){let a,n,l,h,u,c,d=new Float32Array([0,0,0,0]),p=new Float32Array([0,0,0,0]);for(c=0;c<i;c+=3)d[0]=e[c],d[1]=e[c+1],d[2]=e[c+2],r.a.transformVec3(t,d,p),r.a.normalizeVec3(p,p),l=a=pt(p,"floor","floor"),n=_t(a),h=u=gt(p,n),a=pt(p,"ceil","floor"),n=_t(a),h=gt(p,n),h>u&&(l=a,u=h),a=pt(p,"floor","ceil"),n=_t(a),h=gt(p,n),h>u&&(l=a,u=h),a=pt(p,"ceil","ceil"),n=_t(a),h=gt(p,n),h>u&&(l=a,u=h),s[o+c+0]=l[0],s[o+c+1]=l[1],s[o+c+2]=0}(t,i,i.length,_.normals,_.normals.length)}if(h)for(let r=0,x=h.length;r<x;r+=3)_.colors.push(255*h[r]),_.colors.push(255*h[r+1]),_.colors.push(255*h[r+2]),_.colors.push(255);else if(a){const t=a[0],e=a[1],i=a[2],s=u,o=null!==n&&void 0!==n?n:0,r=null!==l&&void 0!==l?l:255;for(let a=0;a<m;a++)_.colors.push(t),_.colors.push(e),_.colors.push(i),_.colors.push(s),_.metallicRoughness.push(o),_.metallicRoughness.push(r)}if(s)for(let r=0,x=s.length;r<x;r++)_.indices.push(s[r]+g);if(o)for(let r=0,x=o.length;r<x;r++)_.edgeIndices.push(o[r]+g);{const t=_.pickColors.length;for(let e=t,i=t+4*m;e<i;e+=4)_.pickColors.push(f[0]),_.pickColors.push(f[1]),_.pickColors.push(f[2]),_.pickColors.push(f[3])}if(this.model.scene.entityOffsetsEnabled)for(let r=0;r<m;r++)_.offsets.push(0),_.offsets.push(0),_.offsets.push(0);const v=this._portions.length/2;return this._portions.push(g),this._portions.push(m),this._numPortions++,this.model.numPortions++,v}finalize(){if(this._finalized)return void this.model.error("Already finalized");const t=this._state,e=this.model.scene.canvas.gl,i=this._buffer;if(i.positions.length>0)if(this._preCompressed){t.positionsDecodeMatrix=this._positionsDecodeMatrix;const s=new Uint16Array(i.positions);t.positionsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.positions.length,3,e.STATIC_DRAW)}else{const s=dt(i.positions,this._modelAABB,t.positionsDecodeMatrix);t.positionsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.positions.length,3,e.STATIC_DRAW)}if(i.normals.length>0){const s=new Int8Array(i.normals);let o=!0;t.normalsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.normals.length,3,e.STATIC_DRAW,o)}if(i.colors.length>0){const s=new Uint8Array(i.colors);let o=!1;t.colorsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.colors.length,4,e.DYNAMIC_DRAW,o)}if(i.metallicRoughness.length>0){const s=new Uint8Array(i.metallicRoughness);let o=!1;t.metallicRoughnessBuf=new L.a(e,e.ARRAY_BUFFER,s,i.metallicRoughness.length,2,e.STATIC_DRAW,o)}if(i.colors.length>0){const s=i.colors.length,o=new Uint8Array(s),r=new Uint8Array(s);let a=!1,n=!0;t.flagsBuf=new L.a(e,e.ARRAY_BUFFER,o,o.length,4,e.DYNAMIC_DRAW,a),t.flags2Buf=new L.a(e,e.ARRAY_BUFFER,r,r.length,4,e.DYNAMIC_DRAW,n)}if(i.pickColors.length>0){const s=new Uint8Array(i.pickColors);let o=!1;t.pickColorsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.pickColors.length,4,e.STATIC_DRAW,o)}if(this.model.scene.entityOffsetsEnabled&&i.offsets.length>0){const s=new Float32Array(i.offsets);t.offsetsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.offsets.length,3,e.DYNAMIC_DRAW)}const s=n.a.SUPPORTED_EXTENSIONS.OES_element_index_uint;if(i.indices.length>0){const o=s?new Uint32Array(i.indices):new Uint16Array(i.indices);t.indicesBuf=new L.a(e,e.ELEMENT_ARRAY_BUFFER,o,i.indices.length,1,e.STATIC_DRAW)}if(i.edgeIndices.length>0){const o=s?new Uint32Array(i.edgeIndices):new Uint16Array(i.edgeIndices);t.edgeIndicesBuf=new L.a(e,e.ELEMENT_ARRAY_BUFFER,o,i.edgeIndices.length,1,e.STATIC_DRAW)}this._buffer=null,this._finalized=!0}initFlags(t,e,i){e&d.a.VISIBLE&&(this._numVisibleLayerPortions++,this.model.numVisibleLayerPortions++),e&d.a.HIGHLIGHTED&&(this._numHighlightedLayerPortions++,this.model.numHighlightedLayerPortions++),e&d.a.XRAYED&&(this._numXRayedLayerPortions++,this.model.numXRayedLayerPortions++),e&d.a.SELECTED&&(this._numSelectedLayerPortions++,this.model.numSelectedLayerPortions++),e&d.a.CLIPPABLE&&(this._numClippableLayerPortions++,this.model.numClippableLayerPortions++),e&d.a.EDGES&&(this._numEdgesLayerPortions++,this.model.numEdgesLayerPortions++),e&d.a.PICKABLE&&(this._numPickableLayerPortions++,this.model.numPickableLayerPortions++),e&d.a.CULLED&&(this._numCulledLayerPortions++,this.model.numCulledLayerPortions++),i&&(this._numTransparentLayerPortions++,this.model.numTransparentLayerPortions++),this._setFlags(t,e,i),this._setFlags2(t,e)}setVisible(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.VISIBLE?(this._numVisibleLayerPortions++,this.model.numVisibleLayerPortions++):(this._numVisibleLayerPortions--,this.model.numVisibleLayerPortions--),this._setFlags(t,e,i)}setHighlighted(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.HIGHLIGHTED?(this._numHighlightedLayerPortions++,this.model.numHighlightedLayerPortions++):(this._numHighlightedLayerPortions--,this.model.numHighlightedLayerPortions--),this._setFlags(t,e,i)}setXRayed(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.XRAYED?(this._numXRayedLayerPortions++,this.model.numXRayedLayerPortions++):(this._numXRayedLayerPortions--,this.model.numXRayedLayerPortions--),this._setFlags(t,e,i)}setSelected(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.SELECTED?(this._numSelectedLayerPortions++,this.model.numSelectedLayerPortions++):(this._numSelectedLayerPortions--,this.model.numSelectedLayerPortions--),this._setFlags(t,e,i)}setEdges(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.EDGES?(this._numEdgesLayerPortions++,this.model.numEdgesLayerPortions++):(this._numEdgesLayerPortions--,this.model.numEdgesLayerPortions--),this._setFlags(t,e,i)}setClippable(t,e){if(!this._finalized)throw"Not finalized";e&d.a.CLIPPABLE?(this._numClippableLayerPortions++,this.model.numClippableLayerPortions++):(this._numClippableLayerPortions--,this.model.numClippableLayerPortions--),this._setFlags2(t,e)}setCulled(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.CULLED?(this._numCulledLayerPortions++,this.model.numCulledLayerPortions++):(this._numCulledLayerPortions--,this.model.numCulledLayerPortions--),this._setFlags(t,e,i)}setCollidable(t,e){if(!this._finalized)throw"Not finalized"}setPickable(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.PICKABLE?(this._numPickableLayerPortions++,this.model.numPickableLayerPortions++):(this._numPickableLayerPortions--,this.model.numPickableLayerPortions--),this._setFlags(t,e,i)}setColor(t,e){if(!this._finalized)throw"Not finalized";const i=2*t,s=4*this._portions[i],o=4*this._portions[i+1],r=this._scratchMemory.getUInt8Array(o),a=e[0],n=e[1],l=e[2],h=e[3];for(let u=0;u<o;u+=4)r[u+0]=a,r[u+1]=n,r[u+2]=l,r[u+3]=h;this._state.colorsBuf.setData(r,s,o)}setTransparent(t,e,i){i?(this._numTransparentLayerPortions++,this.model.numTransparentLayerPortions++):(this._numTransparentLayerPortions--,this.model.numTransparentLayerPortions--),this._setFlags(t,e,i)}_setFlags(t,e,i){if(!this._finalized)throw"Not finalized";const s=2*t,o=4*this._portions[s],r=4*this._portions[s+1],a=this._scratchMemory.getUInt8Array(r),n=!!(e&d.a.VISIBLE),l=!!(e&d.a.XRAYED),h=!!(e&d.a.HIGHLIGHTED),u=!!(e&d.a.SELECTED),c=!!(e&d.a.EDGES),A=!!(e&d.a.PICKABLE),L=!!(e&d.a.CULLED);let w,D;w=!n||L||l?p:i?_:f,D=!n||L?p:u?m:h?g:l?P:p;let C=0;C=!n||L?p:u?y:h?b:l?M:c?i?x:v:p;let S=n&&!L&&A?E:p;for(let d=0;d<r;d+=4)a[d+0]=w,a[d+1]=D,a[d+2]=C,a[d+3]=S;this._state.flagsBuf.setData(a,o,r)}_setFlags2(t,e){if(!this._finalized)throw"Not finalized";const i=2*t,s=4*this._portions[i],o=4*this._portions[i+1],r=this._scratchMemory.getUInt8Array(o),a=e&d.a.CLIPPABLE?255:0;for(let n=0;n<o;n+=4)r[n+0]=a;this._state.flags2Buf.setData(r,s,o)}setOffset(t,e){if(!this._finalized)throw"Not finalized";if(!this.model.scene.entityOffsetsEnabled)return void this.model.error("Entity#offset not enabled for this Viewer");const i=2*t,s=3*this._portions[i],o=3*this._portions[i+1],r=this._scratchMemory.getFloat32Array(o),a=e[0],n=e[1],l=e[2];for(let h=0;h<o;h+=3)r[h+0]=a,r[h+1]=n,r[h+2]=l;this._state.offsetsBuf.setData(r,s,o)}drawColorOpaque(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._numTransparentLayerPortions!==this._numPortions&&this._numXRayedLayerPortions!==this._numPortions&&(this._updateBackfaceCull(t,e),e.withSAO&&this.model.saoEnabled?e.pbrEnabled&&this.model.pbrEnabled?this._batchingRenderers.colorQualityRendererWithSAO&&this._batchingRenderers.colorQualityRendererWithSAO.drawLayer(e,this,f):this._batchingRenderers.colorRendererWithSAO&&this._batchingRenderers.colorRendererWithSAO.drawLayer(e,this,f):e.pbrEnabled&&this.model.pbrEnabled?this._batchingRenderers.colorQualityRenderer&&this._batchingRenderers.colorQualityRenderer.drawLayer(e,this,f):this._batchingRenderers.colorRenderer&&this._batchingRenderers.colorRenderer.drawLayer(e,this,f))}_updateBackfaceCull(t,e){const i=this.model.backfaces||!this.solid||t.sectioned;if(e.backfaces!==i){const t=e.gl;i?t.disable(t.CULL_FACE):t.enable(t.CULL_FACE),e.backfaces=i}}drawColorTransparent(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numTransparentLayerPortions&&this._numXRayedLayerPortions!==this._numPortions&&(this._updateBackfaceCull(t,e),e.pbrEnabled&&this.model.pbrEnabled?this._batchingRenderers.colorQualityRenderer&&this._batchingRenderers.colorQualityRenderer.drawLayer(e,this,_):this._batchingRenderers.colorRenderer&&this._batchingRenderers.colorRenderer.drawLayer(e,this,_))}drawDepth(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._numTransparentLayerPortions!==this._numPortions&&this._numXRayedLayerPortions!==this._numPortions&&(this._updateBackfaceCull(t,e),this._batchingRenderers.depthRenderer&&this._batchingRenderers.depthRenderer.drawLayer(e,this,f))}drawNormals(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._numTransparentLayerPortions!==this._numPortions&&this._numXRayedLayerPortions!==this._numPortions&&(this._updateBackfaceCull(t,e),this._batchingRenderers.normalsRenderer&&this._batchingRenderers.normalsRenderer.drawLayer(e,this,f))}drawSilhouetteXRayed(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numXRayedLayerPortions&&(this._updateBackfaceCull(t,e),this._batchingRenderers.silhouetteRenderer&&this._batchingRenderers.silhouetteRenderer.drawLayer(e,this,P))}drawSilhouetteHighlighted(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numHighlightedLayerPortions&&(this._updateBackfaceCull(t,e),this._batchingRenderers.silhouetteRenderer&&this._batchingRenderers.silhouetteRenderer.drawLayer(e,this,g))}drawSilhouetteSelected(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numSelectedLayerPortions&&(this._updateBackfaceCull(t,e),this._batchingRenderers.silhouetteRenderer&&this._batchingRenderers.silhouetteRenderer.drawLayer(e,this,m))}drawEdgesColorOpaque(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numEdgesLayerPortions&&this._batchingRenderers.edgesColorRenderer&&this._batchingRenderers.edgesColorRenderer.drawLayer(e,this,v)}drawEdgesColorTransparent(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numEdgesLayerPortions&&0!==this._numTransparentLayerPortions&&this._batchingRenderers.edgesColorRenderer&&this._batchingRenderers.edgesColorRenderer.drawLayer(e,this,x)}drawEdgesHighlighted(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numHighlightedLayerPortions&&this._batchingRenderers.edgesRenderer&&this._batchingRenderers.edgesRenderer.drawLayer(e,this,b)}drawEdgesSelected(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numSelectedLayerPortions&&this._batchingRenderers.edgesRenderer&&this._batchingRenderers.edgesRenderer.drawLayer(e,this,y)}drawEdgesXRayed(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numXRayedLayerPortions&&this._batchingRenderers.edgesRenderer&&this._batchingRenderers.edgesRenderer.drawLayer(e,this,M)}drawOcclusion(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&(this._updateBackfaceCull(t,e),this._batchingRenderers.occlusionRenderer&&this._batchingRenderers.occlusionRenderer.drawLayer(e,this,f))}drawShadow(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&(this._updateBackfaceCull(t,e),this._batchingRenderers.shadowRenderer&&this._batchingRenderers.shadowRenderer.drawLayer(e,this,f))}drawPickMesh(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&(this._updateBackfaceCull(t,e),this._batchingRenderers.pickMeshRenderer&&this._batchingRenderers.pickMeshRenderer.drawLayer(e,this,E))}drawPickDepths(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&(this._updateBackfaceCull(t,e),this._batchingRenderers.pickDepthRenderer&&this._batchingRenderers.pickDepthRenderer.drawLayer(e,this,E))}drawPickNormals(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&(this._updateBackfaceCull(t,e),this._batchingRenderers.pickNormalsRenderer&&this._batchingRenderers.pickNormalsRenderer.drawLayer(e,this,E))}destroy(){const t=this._state;t.positionsBuf&&(t.positionsBuf.destroy(),t.positionsBuf=null),t.offsetsBuf&&(t.offsetsBuf.destroy(),t.offsetsBuf=null),t.normalsBuf&&(t.normalsBuf.destroy(),t.normalsBuf=null),t.colorsBuf&&(t.colorsBuf.destroy(),t.colorsBuf=null),t.metallicRoughnessBuf&&(t.metallicRoughnessBuf.destroy(),t.metallicRoughnessBuf=null),t.flagsBuf&&(t.flagsBuf.destroy(),t.flagsBuf=null),t.flags2Buf&&(t.flags2Buf.destroy(),t.flags2Buf=null),t.pickColorsBuf&&(t.pickColorsBuf.destroy(),t.pickColorsBuf=null),t.indicesBuf&&(t.indicesBuf.destroy(),t.indicessBuf=null),t.edgeIndicesBuf&&(t.edgeIndicesBuf.destroy(),t.edgeIndicessBuf=null),t.destroy()}}const Et=r.a.vec4(),At=r.a.vec3();class Lt{constructor(t,e){this._scene=t,this._withSAO=e,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){const t=this._scene;return[t._lightsState.getHash(),t._sectionPlanesState.getHash(),this._withSAO?"sao":"nosao"].join(";")}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t)),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,h?Object(C.a)(r.viewMatrix,h):r.viewMatrix),a.uniformMatrix4fv(this._uViewNormalMatrix,!1,r.viewNormalMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.uniformMatrix4fv(this._uWorldNormalMatrix,!1,s.worldNormalMatrix);const u=o._sectionPlanesState.sectionPlanes.length;if(u>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*u,r=s.renderFlags;for(let e=0;e<u;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,At);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aModelNormalMatrixCol0.bindArrayBuffer(n.modelNormalMatrixCol0Buf),this._aModelNormalMatrixCol1.bindArrayBuffer(n.modelNormalMatrixCol1Buf),this._aModelNormalMatrixCol2.bindArrayBuffer(n.modelNormalMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location,1),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aNormal.bindArrayBuffer(n.normalsBuf),this._aColor.bindArrayBuffer(n.colorsBuf),l.vertexAttribDivisorANGLE(this._aColor.location,1),this._aFlags.bindArrayBuffer(n.flagsBuf),l.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),n.indicesBuf.bind(),l.drawElementsInstancedANGLE(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aColor.location,0),l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._lightsState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uWorldNormalMatrix=s.getLocation("worldNormalMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uViewNormalMatrix=s.getLocation("viewNormalMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uLightAmbient=s.getLocation("lightAmbient"),this._uLightColor=[],this._uLightDir=[],this._uLightPos=[],this._uLightAttenuation=[];const o=i.lights;let r;for(let a=0,n=o.length;a<n;a++)switch(r=o[a],r.type){case"dir":this._uLightColor[a]=s.getLocation("lightColor"+a),this._uLightPos[a]=null,this._uLightDir[a]=s.getLocation("lightDir"+a);break;case"point":this._uLightColor[a]=s.getLocation("lightColor"+a),this._uLightPos[a]=s.getLocation("lightPos"+a),this._uLightDir[a]=null,this._uLightAttenuation[a]=s.getLocation("lightAttenuation"+a);break;case"spot":this._uLightColor[a]=s.getLocation("lightColor"+a),this._uLightPos[a]=s.getLocation("lightPos"+a),this._uLightDir[a]=s.getLocation("lightDir"+a),this._uLightAttenuation[a]=s.getLocation("lightAttenuation"+a)}this._uSectionPlanes=[];for(let a=0,n=t._sectionPlanesState.sectionPlanes.length;a<n;a++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+a),pos:s.getLocation("sectionPlanePos"+a),dir:s.getLocation("sectionPlaneDir"+a)});this._aPosition=s.getAttribute("position"),this._aNormal=s.getAttribute("normal"),this._aColor=s.getAttribute("color"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aOffset=s.getAttribute("offset"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),this._aModelNormalMatrixCol0=s.getAttribute("modelNormalMatrixCol0"),this._aModelNormalMatrixCol1=s.getAttribute("modelNormalMatrixCol1"),this._aModelNormalMatrixCol2=s.getAttribute("modelNormalMatrixCol2"),this._uOcclusionTexture="uOcclusionTexture",this._uSAOParams=s.getLocation("uSAOParams"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(t){const e=this._scene,i=e.canvas.gl,s=e._lightsState.lights,o=e.camera.project;if(this._program.bind(),i.uniformMatrix4fv(this._uProjMatrix,!1,o.matrix),this._uLightAmbient){const t=e._lightsState.getAmbientColor();i.uniform4f(this._uLightAmbient,t[0],t[1],t[2],1)}for(let r=0,a=s.length;r<a;r++){const t=s[r];this._uLightColor[r]&&i.uniform4f(this._uLightColor[r],t.color[0],t.color[1],t.color[2],t.intensity),this._uLightPos[r]&&(i.uniform3fv(this._uLightPos[r],t.pos),this._uLightAttenuation[r]&&i.uniform1f(this._uLightAttenuation[r],t.attenuation)),this._uLightDir[r]&&i.uniform3fv(this._uLightDir[r],t.dir)}if(this._withSAO){const s=e.sao;if(s.possible){const e=i.drawingBufferWidth,o=i.drawingBufferHeight;Et[0]=e,Et[1]=o,Et[2]=s.blendCutoff,Et[3]=s.blendFactor,i.uniform4fv(this._uSAOParams,Et),this._program.bindTexture(this._uOcclusionTexture,t.occlusionTexture,0)}}if(e.logarithmicDepthBufferEnabled){const t=2/(Math.log(o.far+1)/Math.LN2);i.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState,i=t._lightsState,s=e.sectionPlanes.length>0;let o,r,a;const l=[];for(l.push("// Instancing geometry drawing vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&l.push("#extension GL_EXT_frag_depth : enable"),l.push("uniform int renderPass;"),l.push("attribute vec3 position;"),l.push("attribute vec2 normal;"),l.push("attribute vec4 color;"),l.push("attribute vec4 flags;"),l.push("attribute vec4 flags2;"),t.entityOffsetsEnabled&&l.push("attribute vec3 offset;"),l.push("attribute vec4 modelMatrixCol0;"),l.push("attribute vec4 modelMatrixCol1;"),l.push("attribute vec4 modelMatrixCol2;"),l.push("attribute vec4 modelNormalMatrixCol0;"),l.push("attribute vec4 modelNormalMatrixCol1;"),l.push("attribute vec4 modelNormalMatrixCol2;"),l.push("uniform mat4 worldMatrix;"),l.push("uniform mat4 worldNormalMatrix;"),l.push("uniform mat4 viewMatrix;"),l.push("uniform mat4 viewNormalMatrix;"),l.push("uniform mat4 projMatrix;"),l.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(l.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&l.push("varying float vFragDepth;")),l.push("uniform vec4 lightAmbient;"),o=0,r=i.lights.length;o<r;o++)a=i.lights[o],"ambient"!==a.type&&(l.push("uniform vec4 lightColor"+o+";"),"dir"===a.type&&l.push("uniform vec3 lightDir"+o+";"),"point"===a.type&&l.push("uniform vec3 lightPos"+o+";"),"spot"===a.type&&(l.push("uniform vec3 lightPos"+o+";"),l.push("uniform vec3 lightDir"+o+";")));for(l.push("vec3 octDecode(vec2 oct) {"),l.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"),l.push("    if (v.z < 0.0) {"),l.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"),l.push("    }"),l.push("    return normalize(v);"),l.push("}"),s&&(l.push("varying vec4 vWorldPosition;"),l.push("varying vec4 vFlags2;")),l.push("varying vec4 vColor;"),l.push("void main(void) {"),l.push("if (int(flags.x) != renderPass) {"),l.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),l.push("} else {"),l.push("vec4 worldPosition =  positionsDecodeMatrix * vec4(position, 1.0); "),l.push("worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&l.push("      worldPosition.xyz = worldPosition.xyz + offset;"),l.push("vec4 viewPosition  = viewMatrix * worldPosition; "),l.push("vec4 modelNormal = vec4(octDecode(normal.xy), 0.0); "),l.push("vec4 worldNormal = worldNormalMatrix * vec4(dot(modelNormal, modelNormalMatrixCol0), dot(modelNormal, modelNormalMatrixCol1), dot(modelNormal, modelNormalMatrixCol2), 0.0);"),l.push("vec3 viewNormal = normalize(vec4(viewNormalMatrix * worldNormal).xyz);"),l.push("vec3 reflectedColor = vec3(0.0, 0.0, 0.0);"),l.push("vec3 viewLightDir = vec3(0.0, 0.0, -1.0);"),l.push("float lambertian = 1.0;"),o=0,r=i.lights.length;o<r;o++)if(a=i.lights[o],"ambient"!==a.type){if("dir"===a.type)"view"===a.space?l.push("viewLightDir = normalize(lightDir"+o+");"):l.push("viewLightDir = normalize((viewMatrix * vec4(lightDir"+o+", 0.0)).xyz);");else if("point"===a.type)"view"===a.space?l.push("viewLightDir = -normalize(lightPos"+o+" - viewPosition.xyz);"):l.push("viewLightDir = -normalize((viewMatrix * vec4(lightPos"+o+", 0.0)).xyz);");else{if("spot"!==a.type)continue;"view"===a.space?l.push("viewLightDir = normalize(lightDir"+o+");"):l.push("viewLightDir = normalize((viewMatrix * vec4(lightDir"+o+", 0.0)).xyz);")}l.push("lambertian = max(dot(-viewNormal, viewLightDir), 0.0);"),l.push("reflectedColor += lambertian * (lightColor"+o+".rgb * lightColor"+o+".a);")}return l.push("vec3 rgb = (vec3(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0));"),l.push("vColor =  vec4((lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedColor * rgb), float(color.a) / 255.0);"),l.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?l.push("vFragDepth = 1.0 + clipPos.w;"):(l.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),l.push("clipPos.z *= clipPos.w;"))),s&&(l.push("vWorldPosition = worldPosition;"),l.push("vFlags2 = flags2;")),l.push("gl_Position = clipPos;"),l.push("}"),l.push("}"),l}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState;const i=e.sectionPlanes.length>0,s=[];if(s.push("// Instancing geometry drawing fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),this._withSAO&&(s.push("uniform sampler2D uOcclusionTexture;"),s.push("uniform vec4      uSAOParams;"),s.push("const float       packUpscale = 256. / 255.;"),s.push("const float       unpackDownScale = 255. / 256.;"),s.push("const vec3        packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );"),s.push("const vec4        unPackFactors = unpackDownScale / vec4( packFactors, 1. );"),s.push("float unpackRGBToFloat( const in vec4 v ) {"),s.push("    return dot( v, unPackFactors );"),s.push("}")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vColor;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("  if (dist > 0.0) { "),s.push("      discard;"),s.push("  }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),this._withSAO?(s.push("   float viewportWidth     = uSAOParams[0];"),s.push("   float viewportHeight    = uSAOParams[1];"),s.push("   float blendCutoff       = uSAOParams[2];"),s.push("   float blendFactor       = uSAOParams[3];"),s.push("   vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);"),s.push("   float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBToFloat(texture2D(uOcclusionTexture, uv))) * blendFactor;"),s.push("   gl_FragColor            = vec4(vColor.rgb * ambient, 1.0);")):s.push("    gl_FragColor           = vColor;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const wt=r.a.vec3();class Dt{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,a=o.camera,n=o.canvas.gl,l=e._state,h=this._instanceExt,u=e._state.rtcCenter;if(!this._program&&(this._allocate(e.model.scene),this.errors))return;if(t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),n.uniform1i(this._uRenderPass,i),i===P){const t=o.xrayMaterial._state,e=t.fillColor,i=t.fillAlpha;n.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===g){const t=o.highlightMaterial._state,e=t.fillColor,i=t.fillAlpha;n.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===m){const t=o.selectedMaterial._state,e=t.fillColor,i=t.fillAlpha;n.uniform4f(this._uColor,e[0],e[1],e[2],i)}else n.uniform4fv(this._uColor,r.a.vec3([1,1,1]));n.uniformMatrix4fv(this._uViewMatrix,!1,u?Object(C.a)(a.viewMatrix,u):a.viewMatrix),n.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const c=o._sectionPlanesState.sectionPlanes.length;if(c>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*c,r=s.renderFlags;for(let e=0;e<c;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(n.uniform1i(s.active,o?1:0),o){const i=t[e];if(u){const t=Object(C.b)(i.dist,i.dir,u,wt);n.uniform3fv(s.pos,t)}else n.uniform3fv(s.pos,i.pos);n.uniform3fv(s.dir,i.dir)}}}n.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(l.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(l.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(l.modelMatrixCol2Buf),h.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),h.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),h.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPosition.bindArrayBuffer(l.positionsBuf),this._aFlags.bindArrayBuffer(l.flagsBuf,n.UNSIGNED_BYTE,!0),h.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(l.flags2Buf,n.UNSIGNED_BYTE,!0),h.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(l.offsetsBuf),h.vertexAttribDivisorANGLE(this._aOffset.location,1)),l.indicesBuf.bind(),h.drawElementsInstancedANGLE(n.TRIANGLES,l.indicesBuf.numItems,l.indicesBuf.itemType,0,l.numInstances),h.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),h.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),h.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),h.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&h.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&h.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uColor=s.getLocation("color"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Instancing fill vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),i.push("uniform vec4 color;"),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("void main(void) {"),i.push("if (int(flags.y) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),i.push("worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("vWorldPosition = worldPosition;"),i.push("vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Instancing fill fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("uniform vec4 color;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("gl_FragColor = color;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Ct=r.a.vec3(),St=new Float32Array([0,0,0,1]);class Bt{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter;if(!this._program&&(this._allocate(e),this.errors))return;if(t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),i===M){const t=o.xrayMaterial._state,e=t.edgeColor,i=t.edgeAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===b){const t=o.highlightMaterial._state,e=t.edgeColor,i=t.edgeAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===y){const t=o.selectedMaterial._state,e=t.edgeColor,i=t.edgeAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else a.uniform4fv(this._uColor,St);a.uniformMatrix4fv(this._uViewMatrix,!1,h?Object(C.a)(r.viewMatrix,h):r.viewMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const u=o._sectionPlanesState.sectionPlanes.length;if(u>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*u,r=s.renderFlags;for(let e=0;e<u;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,Ct);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aFlags&&(this._aFlags.bindArrayBuffer(n.flagsBuf,a.UNSIGNED_BYTE,!0),l.vertexAttribDivisorANGLE(this._aFlags.location,1)),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf,a.UNSIGNED_BYTE,!0),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),n.edgeIndicesBuf.bind(),l.drawElementsInstancedANGLE(a.LINES,n.edgeIndicesBuf.numItems,n.edgeIndicesBuf.itemType,0,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0),this._aFlags&&l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uColor=s.getLocation("color"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Triangles instancing edges vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("uniform vec4 color;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec4 vColor;"),i.push("void main(void) {"),i.push("if (int(flags.z) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),i.push("worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("vWorldPosition = worldPosition;"),i.push("vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("vColor = vec4(color.r, color.g, color.b, color.a);"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Batched geometry edges drawing fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vColor;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("  if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("gl_FragColor = vColor;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Rt=r.a.vec3();class Nt{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter;if(!this._program&&(this._allocate(e),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,h?Object(C.a)(r.viewMatrix,h):r.viewMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const u=o._sectionPlanesState.sectionPlanes.length;if(u>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*u,r=s.renderFlags;for(let e=0;e<u;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,Rt);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aColor.bindArrayBuffer(n.colorsBuf),l.vertexAttribDivisorANGLE(this._aColor.location,1),this._aFlags&&(this._aFlags.bindArrayBuffer(n.flagsBuf,a.UNSIGNED_BYTE,!0),l.vertexAttribDivisorANGLE(this._aFlags.location,1)),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf,a.UNSIGNED_BYTE,!0),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),n.edgeIndicesBuf.bind(),l.drawElementsInstancedANGLE(a.LINES,n.edgeIndicesBuf.numItems,n.edgeIndicesBuf.itemType,0,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aColor.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0),this._aFlags&&l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._aPosition=s.getAttribute("position"),this._aColor=s.getAttribute("color"),this._aOffset=s.getAttribute("offset"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Triangles instancing edges vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),i.push("attribute vec4 color;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec4 vColor;"),i.push("void main(void) {"),i.push("if (int(flags.z) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),i.push("worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("vWorldPosition = worldPosition;"),i.push("vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("vColor = vec4(float(color.r*0.5) / 255.0, float(color.g*0.5) / 255.0, float(color.b*0.5) / 255.0, float(color.a) / 255.0);"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Batched geometry edges drawing fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vColor;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("  if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("gl_FragColor = vColor;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Ft=r.a.vec3();class Tt{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t)),a.uniform1i(this._uRenderPass,i);const u=t.pickViewMatrix||r.viewMatrix,c=h?Object(C.a)(u,h):u;if(a.uniformMatrix4fv(this._uViewMatrix,!1,c),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.uniformMatrix4fv(this._uProjMatrix,!1,t.pickProjMatrix),o.logarithmicDepthBufferEnabled){const t=2/(Math.log(r.project.far+1)/Math.LN2);a.uniform1f(this._uLogDepthBufFC,t)}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPickColor.bindArrayBuffer(n.pickColorsBuf),l.vertexAttribDivisorANGLE(this._aPickColor.location,1),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aFlags.bindArrayBuffer(n.flagsBuf),l.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),n.indicesBuf.bind();const d=o._sectionPlanesState.sectionPlanes.length;if(d>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*d,r=s.renderFlags;for(let e=0;e<d;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,Ft);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}l.drawElementsInstancedANGLE(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aPickColor.location,0),l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uPickInvisible=s.getLocation("pickInvisible"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._uRenderPass=s.getLocation("renderPass"),this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aPickColor=s.getAttribute("pickColor"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(t){const e=this._scene.canvas.gl;this._program.bind(),e.uniform1i(this._uPickInvisible,t.pickInvisible)}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Instancing geometry picking vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 pickColor;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("uniform bool pickInvisible;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec4 vPickColor;"),i.push("void main(void) {"),i.push("if (int(flags.w) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),i.push("  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "),i.push("  vPickColor = vec4(float(pickColor.r) / 255.0, float(pickColor.g) / 255.0, float(pickColor.b) / 255.0, float(pickColor.a) / 255.0);"),e&&(i.push("  vWorldPosition = worldPosition;"),i.push("  vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Batched geometry picking fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vPickColor;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("gl_FragColor = vPickColor; "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const It=r.a.vec3();class Ot{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.canvas.gl,a=e._state,n=this._instanceExt,l=e._state.rtcCenter;if(!this._program&&(this._allocate(e),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram());const h=o.camera;r.uniform1i(this._uRenderPass,i),r.uniform1i(this._uPickInvisible,t.pickInvisible);const u=t.pickViewMatrix||h.viewMatrix,c=l?Object(C.a)(u,l):u;if(r.uniformMatrix4fv(this._uViewMatrix,!1,c),r.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),r.uniformMatrix4fv(this._uProjMatrix,!1,t.pickProjMatrix),r.uniform1f(this._uPickZNear,t.pickZNear),r.uniform1f(this._uPickZFar,t.pickZFar),o.logarithmicDepthBufferEnabled){const e=2/(Math.log(t.pickZFar+1)/Math.LN2);r.uniform1f(this._uLogDepthBufFC,e)}const d=o._sectionPlanesState.sectionPlanes.length;if(d>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*d,a=s.renderFlags;for(let e=0;e<d;e++){const s=this._uSectionPlanes[e],o=a.sectionPlanesActivePerLayer[i+e];if(r.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,It);r.uniform3fv(s.pos,t)}else r.uniform3fv(s.pos,i.pos);r.uniform3fv(s.dir,i.dir)}}}r.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(a.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(a.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(a.modelMatrixCol2Buf),n.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),n.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),n.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPosition.bindArrayBuffer(a.positionsBuf),this._aFlags.bindArrayBuffer(a.flagsBuf),n.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(a.flags2Buf),n.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(a.offsetsBuf),n.vertexAttribDivisorANGLE(this._aOffset.location,1)),a.indicesBuf.bind(),n.drawElementsInstancedANGLE(r.TRIANGLES,a.indicesBuf.numItems,a.indicesBuf.itemType,0,a.numInstances),n.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),n.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),n.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),n.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&n.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&n.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPickInvisible=i.getLocation("pickInvisible"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),this._aModelMatrixCol0=i.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=i.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=i.getAttribute("modelMatrixCol2"),this._uPickZNear=i.getLocation("pickZNear"),this._uPickZFar=i.getLocation("pickZFar"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){this._program.bind()}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Instancing geometry depth vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("uniform bool pickInvisible;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec4 vViewPosition;"),i.push("void main(void) {"),i.push("if (int(flags.w) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),i.push("  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("  vWorldPosition = worldPosition;"),i.push("  vFlags2 = flags2;")),i.push("  vViewPosition = viewPosition;"),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Batched geometry depth fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),s.push("uniform float pickZNear;"),s.push("uniform float pickZFar;"),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vViewPosition;"),s.push("vec4 packDepth(const in float depth) {"),s.push("  const vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);"),s.push("  const vec4 bitMask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);"),s.push("  vec4 res = fract(depth * bitShift);"),s.push("  res -= res.xxyz * bitMask;"),s.push("  return res;"),s.push("}"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("    float zNormalizedDepth = abs((pickZNear + vViewPosition.z) / (pickZFar - pickZNear));"),s.push("    gl_FragColor = packDepth(zNormalizedDepth); "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const zt=r.a.vec3();class Gt{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter;if(!this._program&&(this._allocate(e),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniform1i(this._uPickInvisible,t.pickInvisible);const u=t.pickViewMatrix||r.viewMatrix,c=h?Object(C.a)(u,h):u;if(a.uniformMatrix4fv(this._uViewMatrix,!1,c),a.uniformMatrix4fv(this._uProjMatrix,!1,t.pickProjMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.uniformMatrix4fv(this._uWorldNormalMatrix,!1,s.worldNormalMatrix),o.logarithmicDepthBufferEnabled){const t=2/(Math.log(r.project.far+1)/Math.LN2);a.uniform1f(this._uLogDepthBufFC,t)}const d=o._sectionPlanesState.sectionPlanes.length;if(d>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*d,r=s.renderFlags;for(let e=0;e<d;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,zt);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aModelNormalMatrixCol0.bindArrayBuffer(n.modelNormalMatrixCol0Buf),this._aModelNormalMatrixCol1.bindArrayBuffer(n.modelNormalMatrixCol1Buf),this._aModelNormalMatrixCol2.bindArrayBuffer(n.modelNormalMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location,1),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aNormal.bindArrayBuffer(n.normalsBuf),this._aFlags.bindArrayBuffer(n.flagsBuf),l.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),n.indicesBuf.bind(),l.drawElementsInstancedANGLE(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uPickInvisible=s.getLocation("pickInvisible"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uWorldNormalMatrix=s.getLocation("worldNormalMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uViewNormalMatrix=s.getLocation("viewNormalMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aNormal=s.getAttribute("normal"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),this._aModelNormalMatrixCol0=s.getAttribute("modelNormalMatrixCol0"),this._aModelNormalMatrixCol1=s.getAttribute("modelNormalMatrixCol1"),this._aModelNormalMatrixCol2=s.getAttribute("modelNormalMatrixCol2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(){this._program.bind()}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Instancing geometry normals vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec2 normal;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("attribute vec4 modelNormalMatrixCol0;"),i.push("attribute vec4 modelNormalMatrixCol1;"),i.push("attribute vec4 modelNormalMatrixCol2;"),i.push("uniform bool pickInvisible;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),i.push("vec3 octDecode(vec2 oct) {"),i.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"),i.push("    if (v.z < 0.0) {"),i.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"),i.push("    }"),i.push("    return normalize(v);"),i.push("}"),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec3 vWorldNormal;"),i.push("void main(void) {"),i.push("if (int(flags.w) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),i.push("  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "),i.push("  vec4 modelNormal = vec4(octDecode(normal.xy), 0.0); "),i.push("  vec3 worldNormal = vec3(dot(modelNormal, modelNormalMatrixCol0), dot(modelNormal, modelNormalMatrixCol1), dot(modelNormal, modelNormalMatrixCol2));"),i.push("  vWorldNormal = worldNormal;"),e&&i.push("  vWorldPosition = worldPosition;"),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Batched geometry normals fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec3 vWorldNormal;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(var o=0;o<e.sectionPlanes.length;o++)s.push("if (sectionPlaneActive"+o+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+o+".xyz, vWorldPosition.xyz - sectionPlanePos"+o+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("    gl_FragColor = vec4((vWorldNormal * 0.5) + 0.5, 1.0);"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Xt=r.a.vec3();class kt{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,h?Object(C.a)(r.viewMatrix,h):r.viewMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const u=o._sectionPlanesState.sectionPlanes.length;if(u>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*u,r=s.renderFlags;for(let e=0;e<u;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,Xt);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aColor&&(this._aColor.bindArrayBuffer(n.colorsBuf),l.vertexAttribDivisorANGLE(this._aColor.location,1)),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),this._aFlags.bindArrayBuffer(n.flagsBuf),l.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),n.indicesBuf.bind(),l.drawElementsInstancedANGLE(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),this._aColor&&l.vertexAttribDivisorANGLE(this._aColor.location,0),l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aColor=s.getAttribute("color"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Instancing occlusion vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 color;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("void main(void) {"),i.push("if (int(flags.x) != renderPass) {"),i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),i.push("  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "),e&&i.push("  vWorldPosition = worldPosition;"),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Instancing occlusion fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return s.push("   gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); "),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Ut=r.a.vec3();class Vt{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.uniformMatrix4fv(this._uViewMatrix,!1,h?Object(C.a)(r.viewMatrix,h):r.viewMatrix);const u=o._sectionPlanesState.sectionPlanes.length;if(u>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*u,r=s.renderFlags;for(let e=0;e<u;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,Ut);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),this._aFlags.bindArrayBuffer(n.flagsBuf),l.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),n.indicesBuf.bind(),l.drawElementsInstancedANGLE(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),this._aModelMatrixCol0=i.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=i.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=i.getAttribute("modelMatrixCol2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Instancing geometry depth drawing vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("void main(void) {"),i.push("if (int(flags.x) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),i.push("  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("vWorldPosition = worldPosition;"),i.push("vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState;let i,s;const o=e.sectionPlanes.length>0,r=[];if(r.push("// Instancing geometry depth drawing fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("#extension GL_EXT_frag_depth : enable"),r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),r.push("precision highp float;"),r.push("precision highp int;"),r.push("#else"),r.push("precision mediump float;"),r.push("precision mediump int;"),r.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(r.push("uniform float logDepthBufFC;"),r.push("varying float vFragDepth;")),o)for(r.push("varying vec4 vWorldPosition;"),r.push("varying vec4 vFlags2;"),i=0,s=e.sectionPlanes.length;i<s;i++)r.push("uniform bool sectionPlaneActive"+i+";"),r.push("uniform vec3 sectionPlanePos"+i+";"),r.push("uniform vec3 sectionPlaneDir"+i+";");if(r.push("const float   packUpScale = 256. / 255.;"),r.push("const float   unpackDownscale = 255. / 256.;"),r.push("const vec3    packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );"),r.push("const vec4    unpackFactors = unpackDownscale / vec4( packFactors, 1. );"),r.push("const float   shiftRight8 = 1.0 / 256.;"),r.push("vec4 packDepthToRGBA( const in float v ) {"),r.push("    vec4 r = vec4( fract( v * packFactors ), v );"),r.push("    r.yzw -= r.xyz * shiftRight8;"),r.push("    return r * packUpScale;"),r.push("}"),r.push("void main(void) {"),o){for(r.push("  bool clippable = (float(vFlags2.x) > 0.0);"),r.push("  if (clippable) {"),r.push("  float dist = 0.0;"),i=0,s=e.sectionPlanes.length;i<s;i++)r.push("if (sectionPlaneActive"+i+") {"),r.push("   dist += clamp(dot(-sectionPlaneDir"+i+".xyz, vWorldPosition.xyz - sectionPlanePos"+i+".xyz), 0.0, 1000.0);"),r.push("}");r.push("if (dist > 0.0) { discard; }"),r.push("}")}return r.push("    gl_FragColor = packDepthToRGBA( gl_FragCoord.z); "),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),r.push("}"),r}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Ht=r.a.vec3();class jt{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter;if(!this._program&&(this._allocate(e),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,h?Object(C.a)(r.viewMatrix,h):r.viewMatrix),a.uniformMatrix4fv(this._uViewNormalMatrix,!1,r.viewNormalMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.uniformMatrix4fv(this._uWorldNormalMatrix,!1,s.worldNormalMatrix);const u=o._sectionPlanesState.sectionPlanes.length;if(u>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*u,r=s.renderFlags;for(let e=0;e<u;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,Ht);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aNormal.bindArrayBuffer(n.normalsBuf),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),this._aColor.bindArrayBuffer(n.colorsBuf),l.vertexAttribDivisorANGLE(this._aColor.location,1),this._aFlags.bindArrayBuffer(n.flagsBuf),l.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),n.indicesBuf.bind(),l.drawElementsInstancedANGLE(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aColor.location,0),l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uWorldNormalMatrix=s.getLocation("worldNormalMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uViewNormalMatrix=s.getLocation("viewNormalMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aNormal=s.getAttribute("normal"),this._aColor=s.getAttribute("color"),this._aFlags=s.getAttribute("flags"),this._aFlags2&&(this._aFlags2=s.getAttribute("flags2")),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Instancing geometry normals drawing vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec3 normal;"),i.push("attribute vec4 color;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 worldNormalMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 viewNormalMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),i.push("vec3 octDecode(vec2 oct) {"),i.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"),i.push("    if (v.z < 0.0) {"),i.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"),i.push("    }"),i.push("    return normalize(v);"),i.push("}"),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec3 vViewNormal;"),i.push("void main(void) {"),i.push("if (int(flags.x) != renderPass) {"),i.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),i.push("  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("  vec4 viewPosition  = viewMatrix * worldPosition; "),i.push("  vec4 worldNormal    = worldNormalMatrix * vec4(octDecode(normal.xy), 0.0); "),i.push("  vec3 viewNormal     = normalize((viewNormalMatrix * worldNormal).xyz);"),e&&(i.push("vWorldPosition = worldPosition;"),i.push("vFlags2 = flags2;")),i.push("  vViewNormal = viewNormal;"),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Instancing geometry depth drawing fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec3 vViewNormal;"),s.push("vec3 packNormalToRGB( const in vec3 normal ) {"),s.push("    return normalize( normal ) * 0.5 + 0.5;"),s.push("}"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("    gl_FragColor = vec4(packNormalToRGB(vViewNormal), 1.0); "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Wt=r.a.vec3();class Yt{constructor(t){this._scene=t,this._hash=this._getHash(),this._lastLightId=null,this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e){const i=e.model,s=i.scene,o=s.canvas.gl,r=e._state,a=this._instanceExt;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t,e)),o.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(r.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(r.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(r.modelMatrixCol2Buf),a.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),a.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),a.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPosition.bindArrayBuffer(r.positionsBuf),this._aOffset&&(this._aOffset.bindArrayBuffer(r.offsetsBuf),a.vertexAttribDivisorANGLE(this._aOffset.location,1)),this._aColor.bindArrayBuffer(r.colorsBuf),a.vertexAttribDivisorANGLE(this._aColor.location,1),this._aFlags.bindArrayBuffer(r.flagsBuf),a.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(r.flags2Buf),a.vertexAttribDivisorANGLE(this._aFlags2.location,1));const n=s._sectionPlanesState.sectionPlanes.length;if(n>0){const t=s._sectionPlanesState.sectionPlanes,r=e.layerIndex*n,a=i.renderFlags,l=e._state.rtcCenter;for(let e=0;e<n;e++){const i=this._uSectionPlanes[e],s=a.sectionPlanesActivePerLayer[r+e];if(o.uniform1i(i.active,s?1:0),s){const s=t[e];if(l){const t=Object(C.b)(s.dist,s.dir,l,Wt);o.uniform3fv(i.pos,t)}else o.uniform3fv(i.pos,s.pos);o.uniform3fv(i.dir,s.dir)}}}r.indicesBuf.bind(),a.drawElementsInstancedANGLE(o.TRIANGLES,r.indicesBuf.numItems,r.indicesBuf.itemType,0,r.numInstances),a.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),a.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),a.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),a.vertexAttribDivisorANGLE(this._aColor.location,0),a.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&a.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&a.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uShadowViewMatrix=s.getLocation("shadowViewMatrix"),this._uShadowProjMatrix=s.getLocation("shadowProjMatrix"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aColor=s.getAttribute("color"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2")}_bindProgram(t,e){const i=this._scene.canvas.gl;this._program.bind(),i.uniformMatrix4fv(this._uShadowViewMatrix,!1,t.shadowViewMatrix),i.uniformMatrix4fv(this._uShadowProjMatrix,!1,t.shadowProjMatrix),this._lastLightId=null}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Instancing geometry shadow drawing vertex shader"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 color;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("uniform mat4 shadowViewMatrix;"),i.push("uniform mat4 shadowProjMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("void main(void) {"),i.push("bool visible      = (float(flags.x) > 0.0);"),i.push("bool transparent  = ((float(color.a) / 255.0) < 1.0);"),i.push("if (!visible || transparent) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),i.push("  worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("  vec4 viewPosition  = shadowViewMatrix * worldPosition; "),e&&(i.push("vWorldPosition = worldPosition;"),i.push("vFlags2 = flags2;")),i.push("  gl_Position = shadowProjMatrix * viewPosition;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Instancing geometry depth drawing fragment shader"),t.logarithmicDepthBufferEnabled&&WEBGL_INFO.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&WEBGL_INFO.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec3 vViewNormal;"),s.push("vec3 packNormalToRGB( const in vec3 normal ) {"),s.push("    return normalize( normal ) * 0.5 + 0.5;"),s.push("}"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&WEBGL_INFO.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("    gl_FragColor = vec4(packNormalToRGB(vViewNormal), 1.0); "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Zt=r.a.vec4(),Qt=r.a.vec3(),qt={linear:"linearToLinear",sRGB:"sRGBToLinear",gamma:"gammaToLinear"};class Kt{constructor(t,e){this._scene=t,this._withSAO=e,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){const t=this._scene;return[t.gammaOutput,t._lightsState.getHash(),t._sectionPlanesState.getHash(),this._withSAO?"sao":"nosao"].join(";")}drawLayer(t,e,i){const s=e.model,o=this._scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t)),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,h?Object(C.a)(r.viewMatrix,h):r.viewMatrix),a.uniformMatrix4fv(this._uViewNormalMatrix,!1,r.viewNormalMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.uniformMatrix4fv(this._uWorldNormalMatrix,!1,s.worldNormalMatrix);const u=o._sectionPlanesState.sectionPlanes.length;if(u>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*u,r=s.renderFlags;for(let e=0;e<u;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,Qt);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aModelNormalMatrixCol0.bindArrayBuffer(n.modelNormalMatrixCol0Buf),this._aModelNormalMatrixCol1.bindArrayBuffer(n.modelNormalMatrixCol1Buf),this._aModelNormalMatrixCol2.bindArrayBuffer(n.modelNormalMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location,1),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aNormal.bindArrayBuffer(n.normalsBuf),this._aColor.bindArrayBuffer(n.colorsBuf),l.vertexAttribDivisorANGLE(this._aColor.location,1),this._aMetallicRoughness.bindArrayBuffer(n.metallicRoughnessBuf),l.vertexAttribDivisorANGLE(this._aMetallicRoughness.location,1),this._aFlags.bindArrayBuffer(n.flagsBuf),l.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),n.indicesBuf.bind(),l.drawElementsInstancedANGLE(a.TRIANGLES,n.indicesBuf.numItems,n.indicesBuf.itemType,0,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aColor.location,0),l.vertexAttribDivisorANGLE(this._aMetallicRoughness.location,0),l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._lightsState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uWorldNormalMatrix=s.getLocation("worldNormalMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uViewNormalMatrix=s.getLocation("viewNormalMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uGammaFactor=s.getLocation("gammaFactor"),this._uLightAmbient=s.getLocation("lightAmbient"),this._uLightColor=[],this._uLightDir=[],this._uLightPos=[],this._uLightAttenuation=[];const o=i.lights;let r;for(var a=0,n=o.length;a<n;a++)switch(r=o[a],r.type){case"dir":this._uLightColor[a]=s.getLocation("lightColor"+a),this._uLightPos[a]=null,this._uLightDir[a]=s.getLocation("lightDir"+a);break;case"point":this._uLightColor[a]=s.getLocation("lightColor"+a),this._uLightPos[a]=s.getLocation("lightPos"+a),this._uLightDir[a]=null,this._uLightAttenuation[a]=s.getLocation("lightAttenuation"+a);break;case"spot":this._uLightColor[a]=s.getLocation("lightColor"+a),this._uLightPos[a]=s.getLocation("lightPos"+a),this._uLightDir[a]=s.getLocation("lightDir"+a),this._uLightAttenuation[a]=s.getLocation("lightAttenuation"+a)}i.reflectionMaps.length>0&&(this._uReflectionMap="reflectionMap"),i.lightMaps.length>0&&(this._uLightMap="lightMap"),this._uSectionPlanes=[];for(let l=0,h=t._sectionPlanesState.sectionPlanes.length;l<h;l++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+l),pos:s.getLocation("sectionPlanePos"+l),dir:s.getLocation("sectionPlaneDir"+l)});this._aPosition=s.getAttribute("position"),this._aNormal=s.getAttribute("normal"),this._aColor=s.getAttribute("color"),this._aMetallicRoughness=s.getAttribute("metallicRoughness"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aOffset=s.getAttribute("offset"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),this._aModelNormalMatrixCol0=s.getAttribute("modelNormalMatrixCol0"),this._aModelNormalMatrixCol1=s.getAttribute("modelNormalMatrixCol1"),this._aModelNormalMatrixCol2=s.getAttribute("modelNormalMatrixCol2"),this._uOcclusionTexture="uOcclusionTexture",this._uSAOParams=s.getLocation("uSAOParams"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(t){const e=n.a.MAX_TEXTURE_UNITS,i=this._scene,s=i.canvas.gl,o=i._lightsState,r=o.lights,a=i.camera.project;if(this._program.bind(),s.uniformMatrix4fv(this._uProjMatrix,!1,a.matrix),this._uLightAmbient){const t=i._lightsState.getAmbientColor();s.uniform4f(this._uLightAmbient,t[0],t[1],t[2],1)}for(let n=0,l=r.length;n<l;n++){const t=r[n];this._uLightColor[n]&&s.uniform4f(this._uLightColor[n],t.color[0],t.color[1],t.color[2],t.intensity),this._uLightPos[n]&&(s.uniform3fv(this._uLightPos[n],t.pos),this._uLightAttenuation[n]&&s.uniform1f(this._uLightAttenuation[n],t.attenuation)),this._uLightDir[n]&&s.uniform3fv(this._uLightDir[n],t.dir)}if(o.reflectionMaps.length>0&&o.reflectionMaps[0].texture&&this._uReflectionMap&&(this._program.bindTexture(this._uReflectionMap,o.reflectionMaps[0].texture,t.textureUnit),t.textureUnit=(t.textureUnit+1)%e,t.bindTexture++),o.lightMaps.length>0&&o.lightMaps[0].texture&&this._uLightMap&&(this._program.bindTexture(this._uLightMap,o.lightMaps[0].texture,t.textureUnit),t.textureUnit=(t.textureUnit+1)%e,t.bindTexture++),this._withSAO){const o=i.sao;if(o.possible){const i=s.drawingBufferWidth,r=s.drawingBufferHeight;Zt[0]=i,Zt[1]=r,Zt[2]=o.blendCutoff,Zt[3]=o.blendFactor,s.uniform4fv(this._uSAOParams,Zt),this._program.bindTexture(this._uOcclusionTexture,t.occlusionTexture,t.textureUnit),t.textureUnit=(t.textureUnit+1)%e,t.bindTexture++}}if(i.logarithmicDepthBufferEnabled){const t=2/(Math.log(a.far+1)/Math.LN2);s.uniform1f(this._uLogDepthBufFC,t)}this._uGammaFactor&&s.uniform1f(this._uGammaFactor,i.gammaFactor)}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState,i=t._lightsState,s=e.sectionPlanes.length>0,o=e.clippingCaps,r=[];return r.push("// Instancing geometry quality drawing vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("#extension GL_EXT_frag_depth : enable"),r.push("uniform int renderPass;"),r.push("attribute vec3 position;"),r.push("attribute vec2 normal;"),r.push("attribute vec4 color;"),r.push("attribute vec2 metallicRoughness;"),r.push("attribute vec4 flags;"),r.push("attribute vec4 flags2;"),t.entityOffsetsEnabled&&r.push("attribute vec3 offset;"),r.push("attribute vec4 modelMatrixCol0;"),r.push("attribute vec4 modelMatrixCol1;"),r.push("attribute vec4 modelMatrixCol2;"),r.push("attribute vec4 modelNormalMatrixCol0;"),r.push("attribute vec4 modelNormalMatrixCol1;"),r.push("attribute vec4 modelNormalMatrixCol2;"),r.push("uniform mat4 worldMatrix;"),r.push("uniform mat4 worldNormalMatrix;"),r.push("uniform mat4 viewMatrix;"),r.push("uniform mat4 viewNormalMatrix;"),r.push("uniform mat4 projMatrix;"),r.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(r.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("varying float vFragDepth;")),r.push("vec3 octDecode(vec2 oct) {"),r.push("    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));"),r.push("    if (v.z < 0.0) {"),r.push("        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);"),r.push("    }"),r.push("    return normalize(v);"),r.push("}"),r.push("varying vec4 vViewPosition;"),r.push("varying vec3 vViewNormal;"),r.push("varying vec4 vColor;"),r.push("varying vec2 vMetallicRoughness;"),i.lightMaps.length>0&&r.push("varying vec3 vWorldNormal;"),s&&(r.push("varying vec4 vWorldPosition;"),r.push("varying vec4 vFlags2;"),o&&r.push("varying vec4 vClipPosition;")),r.push("void main(void) {"),r.push("if (int(flags.x) != renderPass) {"),r.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),r.push("} else {"),r.push("vec4 worldPosition =  positionsDecodeMatrix * vec4(position, 1.0); "),r.push("worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&r.push("      worldPosition.xyz = worldPosition.xyz + offset;"),r.push("vec4 viewPosition  = viewMatrix * worldPosition; "),r.push("vec4 modelNormal = vec4(octDecode(normal.xy), 0.0); "),r.push("vec4 worldNormal = worldNormalMatrix * vec4(dot(modelNormal, modelNormalMatrixCol0), dot(modelNormal, modelNormalMatrixCol1), dot(modelNormal, modelNormalMatrixCol2), 0.0);"),r.push("vec3 viewNormal = vec4(viewNormalMatrix * worldNormal).xyz;"),r.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?r.push("vFragDepth = 1.0 + clipPos.w;"):(r.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),r.push("clipPos.z *= clipPos.w;"))),s&&(r.push("vWorldPosition = worldPosition;"),r.push("vFlags2 = flags2;"),o&&r.push("vClipPosition = clipPos;")),r.push("vViewPosition = viewPosition;"),r.push("vViewNormal = viewNormal;"),r.push("vColor = color;"),r.push("vMetallicRoughness = metallicRoughness;"),i.lightMaps.length>0&&r.push("vWorldNormal = worldNormal.xyz;"),r.push("gl_Position = clipPos;"),r.push("}"),r.push("}"),r}_buildFragmentShader(){const t=this._scene,e=t.gammaOutput,i=t._sectionPlanesState,s=t._lightsState,o=i.sectionPlanes.length>0,r=i.clippingCaps,a=[];a.push("// Instancing geometry quality drawing fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&a.push("#extension GL_EXT_frag_depth : enable"),a.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),a.push("precision highp float;"),a.push("precision highp int;"),a.push("#else"),a.push("precision mediump float;"),a.push("precision mediump int;"),a.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(a.push("uniform float logDepthBufFC;"),a.push("varying float vFragDepth;")),this._withSAO&&(a.push("uniform sampler2D uOcclusionTexture;"),a.push("uniform vec4      uSAOParams;"),a.push("const float       packUpscale = 256. / 255.;"),a.push("const float       unpackDownScale = 255. / 256.;"),a.push("const vec3        packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );"),a.push("const vec4        unPackFactors = unpackDownScale / vec4( packFactors, 1. );"),a.push("float unpackRGBAToDepth( const in vec4 v ) {"),a.push("    return dot( v, unPackFactors );"),a.push("}")),s.reflectionMaps.length>0&&a.push("uniform samplerCube reflectionMap;"),s.lightMaps.length>0&&a.push("uniform samplerCube lightMap;"),a.push("uniform vec4 lightAmbient;");for(let n=0,l=s.lights.length;n<l;n++){const t=s.lights[n];"ambient"!==t.type&&(a.push("uniform vec4 lightColor"+n+";"),"dir"===t.type&&a.push("uniform vec3 lightDir"+n+";"),"point"===t.type&&a.push("uniform vec3 lightPos"+n+";"),"spot"===t.type&&(a.push("uniform vec3 lightPos"+n+";"),a.push("uniform vec3 lightDir"+n+";")))}if(a.push("uniform float gammaFactor;"),a.push("vec4 linearToLinear( in vec4 value ) {"),a.push("  return value;"),a.push("}"),a.push("vec4 sRGBToLinear( in vec4 value ) {"),a.push("  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );"),a.push("}"),a.push("vec4 gammaToLinear( in vec4 value) {"),a.push("  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );"),a.push("}"),e&&(a.push("vec4 linearToGamma( in vec4 value, in float gammaFactor ) {"),a.push("  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );"),a.push("}")),o){a.push("varying vec4 vWorldPosition;"),a.push("varying vec4 vFlags2;"),r&&a.push("varying vec4 vClipPosition;");for(let t=0,e=i.sectionPlanes.length;t<e;t++)a.push("uniform bool sectionPlaneActive"+t+";"),a.push("uniform vec3 sectionPlanePos"+t+";"),a.push("uniform vec3 sectionPlaneDir"+t+";")}if(a.push("varying vec4 vViewPosition;"),a.push("varying vec3 vViewNormal;"),a.push("varying vec4 vColor;"),a.push("varying vec2 vMetallicRoughness;"),s.lightMaps.length>0&&a.push("varying vec3 vWorldNormal;"),a.push("uniform mat4 viewMatrix;"),a.push("#define PI 3.14159265359"),a.push("#define RECIPROCAL_PI 0.31830988618"),a.push("#define RECIPROCAL_PI2 0.15915494"),a.push("#define EPSILON 1e-6"),a.push("#define saturate(a) clamp( a, 0.0, 1.0 )"),a.push("vec3 inverseTransformDirection(in vec3 dir, in mat4 matrix) {"),a.push("   return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );"),a.push("}"),a.push("struct IncidentLight {"),a.push("   vec3 color;"),a.push("   vec3 direction;"),a.push("};"),a.push("struct ReflectedLight {"),a.push("   vec3 diffuse;"),a.push("   vec3 specular;"),a.push("};"),a.push("struct Geometry {"),a.push("   vec3 position;"),a.push("   vec3 viewNormal;"),a.push("   vec3 worldNormal;"),a.push("   vec3 viewEyeDir;"),a.push("};"),a.push("struct Material {"),a.push("   vec3    diffuseColor;"),a.push("   float   specularRoughness;"),a.push("   vec3    specularColor;"),a.push("   float   shine;"),a.push("};"),a.push("float GGXRoughnessToBlinnExponent(const in float ggxRoughness) {"),a.push("   float r = ggxRoughness + 0.0001;"),a.push("   return (2.0 / (r * r) - 2.0);"),a.push("}"),a.push("float getSpecularMIPLevel(const in float blinnShininessExponent, const in int maxMIPLevel) {"),a.push("   float maxMIPLevelScalar = float( maxMIPLevel );"),a.push("   float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( ( blinnShininessExponent * blinnShininessExponent ) + 1.0 );"),a.push("   return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );"),a.push("}"),s.reflectionMaps.length>0&&(a.push("vec3 getLightProbeIndirectRadiance(const in vec3 reflectVec, const in float blinnShininessExponent, const in int maxMIPLevel) {"),a.push("   float mipLevel = 0.5 * getSpecularMIPLevel(blinnShininessExponent, maxMIPLevel);"),a.push("   vec3 envMapColor = "+qt[s.reflectionMaps[0].encoding]+"(textureCube(reflectionMap, reflectVec, mipLevel)).rgb;"),a.push("  return envMapColor;"),a.push("}")),a.push("vec3 F_Schlick(const in vec3 specularColor, const in float dotLH) {"),a.push("   float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );"),a.push("   return ( 1.0 - specularColor ) * fresnel + specularColor;"),a.push("}"),a.push("float G_GGX_Smith(const in float alpha, const in float dotNL, const in float dotNV) {"),a.push("   float a2 = ( alpha * alpha );"),a.push("   float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * ( dotNL * dotNL ) );"),a.push("   float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * ( dotNV * dotNV ) );"),a.push("   return 1.0 / ( gl * gv );"),a.push("}"),a.push("float G_GGX_SmithCorrelated(const in float alpha, const in float dotNL, const in float dotNV) {"),a.push("   float a2 = ( alpha * alpha );"),a.push("   float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * ( dotNV * dotNV ) );"),a.push("   float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * ( dotNL * dotNL ) );"),a.push("   return 0.5 / max( gv + gl, EPSILON );"),a.push("}"),a.push("float D_GGX(const in float alpha, const in float dotNH) {"),a.push("   float a2 = ( alpha * alpha );"),a.push("   float denom = ( dotNH * dotNH) * ( a2 - 1.0 ) + 1.0;"),a.push("   return RECIPROCAL_PI * a2 / ( denom * denom);"),a.push("}"),a.push("vec3 BRDF_Specular_GGX(const in IncidentLight incidentLight, const in Geometry geometry, const in vec3 specularColor, const in float roughness) {"),a.push("   float alpha = ( roughness * roughness );"),a.push("   vec3 halfDir = normalize( incidentLight.direction + geometry.viewEyeDir );"),a.push("   float dotNL = saturate( dot( geometry.viewNormal, incidentLight.direction ) );"),a.push("   float dotNV = saturate( dot( geometry.viewNormal, geometry.viewEyeDir ) );"),a.push("   float dotNH = saturate( dot( geometry.viewNormal, halfDir ) );"),a.push("   float dotLH = saturate( dot( incidentLight.direction, halfDir ) );"),a.push("   vec3  F = F_Schlick( specularColor, dotLH );"),a.push("   float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );"),a.push("   float D = D_GGX( alpha, dotNH );"),a.push("   return F * (G * D);"),a.push("}"),a.push("vec3 BRDF_Specular_GGX_Environment(const in Geometry geometry, const in vec3 specularColor, const in float roughness) {"),a.push("   float dotNV = saturate(dot(geometry.viewNormal, geometry.viewEyeDir));"),a.push("   const vec4 c0 = vec4( -1, -0.0275, -0.572,  0.022);"),a.push("   const vec4 c1 = vec4(  1,  0.0425,   1.04, -0.04);"),a.push("   vec4 r = roughness * c0 + c1;"),a.push("   float a004 = min(r.x * r.x, exp2(-9.28 * dotNV)) * r.x + r.y;"),a.push("   vec2 AB    = vec2(-1.04, 1.04) * a004 + r.zw;"),a.push("   return specularColor * AB.x + AB.y;"),a.push("}"),(s.lightMaps.length>0||s.reflectionMaps.length>0)&&(a.push("void computePBRLightMapping(const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {"),s.lightMaps.length>0&&(a.push("   vec3 irradiance = "+qt[s.lightMaps[0].encoding]+"(textureCube(lightMap, geometry.worldNormal)).rgb;"),a.push("   irradiance *= PI;"),a.push("   vec3 diffuseBRDFContrib = (RECIPROCAL_PI * material.diffuseColor);"),a.push("   reflectedLight.diffuse += irradiance * diffuseBRDFContrib;")),s.reflectionMaps.length>0&&(a.push("   vec3 reflectVec             = reflect(geometry.viewEyeDir, geometry.viewNormal);"),a.push("   reflectVec                  = inverseTransformDirection(reflectVec, viewMatrix);"),a.push("   float blinnExpFromRoughness = GGXRoughnessToBlinnExponent(material.specularRoughness);"),a.push("   vec3 radiance               = getLightProbeIndirectRadiance(reflectVec, blinnExpFromRoughness, 8);"),a.push("   vec3 specularBRDFContrib    = BRDF_Specular_GGX_Environment(geometry, material.specularColor, material.specularRoughness);"),a.push("   reflectedLight.specular     += radiance * specularBRDFContrib;")),a.push("}")),a.push("void computePBRLighting(const in IncidentLight incidentLight, const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {"),a.push("   float dotNL     = saturate(dot(geometry.viewNormal, incidentLight.direction));"),a.push("   vec3 irradiance = dotNL * incidentLight.color * PI;"),a.push("   reflectedLight.diffuse  += irradiance * (RECIPROCAL_PI * material.diffuseColor);"),a.push("   reflectedLight.specular += irradiance * BRDF_Specular_GGX(incidentLight, geometry, material.specularColor, material.specularRoughness);"),a.push("}"),a.push("void main(void) {"),o){a.push("  bool clippable = (float(vFlags2.x) > 0.0);"),a.push("  if (clippable) {"),a.push("  float dist = 0.0;");for(let t=0,e=i.sectionPlanes.length;t<e;t++)a.push("if (sectionPlaneActive"+t+") {"),a.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),a.push("}");r?(a.push("  if (dist > (0.002 * vClipPosition.w)) {"),a.push("      discard;"),a.push("  }"),a.push("  if (dist > 0.0) { "),a.push("      gl_FragColor=vec4(1.0, 0.0, 0.0, 1.0);"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&a.push("  gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),a.push("  return;"),a.push("}")):(a.push("  if (dist > 0.0) { "),a.push("      discard;"),a.push("  }")),a.push("}")}a.push("IncidentLight  light;"),a.push("Material       material;"),a.push("Geometry       geometry;"),a.push("ReflectedLight reflectedLight = ReflectedLight(vec3(0.0,0.0,0.0), vec3(0.0,0.0,0.0));"),a.push("vec3 rgb = (vec3(float(vColor.r) / 255.0, float(vColor.g) / 255.0, float(vColor.b) / 255.0));"),a.push("float alpha = float(vColor.a) / 255.0;"),a.push("vec3  diffuseColor = rgb;"),a.push("float specularF0 = 1.0;"),a.push("float metallic = float(vMetallicRoughness.r) / 255.0;"),a.push("float roughness = float(vMetallicRoughness.g) / 255.0;"),a.push("float dielectricSpecular = 0.16 * specularF0 * specularF0;"),a.push("material.diffuseColor      = diffuseColor * (1.0 - dielectricSpecular) * (1.0 - metallic);"),a.push("material.specularRoughness = clamp(roughness, 0.04, 1.0);"),a.push("material.specularColor     = mix(vec3(dielectricSpecular), diffuseColor, metallic);"),a.push("geometry.position      = vViewPosition.xyz;"),a.push("geometry.viewNormal    = -normalize(vViewNormal);"),a.push("geometry.viewEyeDir    = normalize(vViewPosition.xyz);"),s.lightMaps.length>0&&a.push("geometry.worldNormal   = normalize(vWorldNormal);"),(s.lightMaps.length>0||s.reflectionMaps.length>0)&&a.push("computePBRLightMapping(geometry, material, reflectedLight);");for(let n=0,l=s.lights.length;n<l;n++){const t=s.lights[n];if("ambient"!==t.type){if("dir"===t.type)"view"===t.space?a.push("light.direction = normalize(lightDir"+n+");"):a.push("light.direction = normalize((viewMatrix * vec4(lightDir"+n+", 0.0)).xyz);");else if("point"===t.type)"view"===t.space?a.push("light.direction = normalize(lightPos"+n+" - vViewPosition.xyz);"):a.push("light.direction = normalize((viewMatrix * vec4(lightPos"+n+", 0.0)).xyz);");else{if("spot"!==t.type)continue;"view"===t.space?a.push("light.direction = normalize(lightDir"+n+");"):a.push("light.direction = normalize((viewMatrix * vec4(lightDir"+n+", 0.0)).xyz);")}a.push("light.color =  lightColor"+n+".rgb * lightColor"+n+".a;"),a.push("computePBRLighting(light, geometry, material, reflectedLight);")}}return a.push("vec3 outgoingLight = (lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedLight.diffuse) + (reflectedLight.specular);"),a.push("vec4 fragColor;"),this._withSAO?(a.push("   float viewportWidth     = uSAOParams[0];"),a.push("   float viewportHeight    = uSAOParams[1];"),a.push("   float blendCutoff       = uSAOParams[2];"),a.push("   float blendFactor       = uSAOParams[3];"),a.push("   vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);"),a.push("   float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBAToDepth(texture2D(uOcclusionTexture, uv))) * blendFactor;"),a.push("   fragColor            = vec4(outgoingLight.rgb * ambient, alpha);")):a.push("   fragColor            = vec4(outgoingLight.rgb, alpha);"),e&&a.push("fragColor = linearToGamma(fragColor, gammaFactor);"),a.push("gl_FragColor = fragColor;"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&a.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),a.push("}"),a}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}class Jt{constructor(t){this._scene=t}_compile(){this._colorRenderer&&!this._colorRenderer.getValid()&&(this._colorRenderer.destroy(),this._colorRenderer=null),this._colorRendererWithSAO&&!this._colorRendererWithSAO.getValid()&&(this._colorRendererWithSAO.destroy(),this._colorRendererWithSAO=null),this._colorQualityRenderer&&!this._colorQualityRenderer.getValid()&&(this._colorQualityRenderer.destroy(),this._colorQualityRenderer=null),this._colorQualityRendererWithSAO&&!this._colorQualityRendererWithSAO.getValid()&&(this._colorQualityRendererWithSAO.destroy(),this._colorQualityRendererWithSAO=null),this._depthRenderer&&!this._depthRenderer.getValid()&&(this._depthRenderer.destroy(),this._depthRenderer=null),this._normalsRenderer&&!this._normalsRenderer.getValid()&&(this._normalsRenderer.destroy(),this._normalsRenderer=null),this._silhouetteRenderer&&!this._silhouetteRenderer.getValid()&&(this._silhouetteRenderer.destroy(),this._silhouetteRenderer=null),this._edgesRenderer&&!this._edgesRenderer.getValid()&&(this._edgesRenderer.destroy(),this._edgesRenderer=null),this._edgesColorRenderer&&!this._edgesColorRenderer.getValid()&&(this._edgesColorRenderer.destroy(),this._edgesColorRenderer=null),this._pickMeshRenderer&&!this._pickMeshRenderer.getValid()&&(this._pickMeshRenderer.destroy(),this._pickMeshRenderer=null),this._pickDepthRenderer&&!this._pickDepthRenderer.getValid()&&(this._pickDepthRenderer.destroy(),this._pickDepthRenderer=null),this._pickNormalsRenderer&&!1===this._pickNormalsRenderer.getValid()&&(this._pickNormalsRenderer.destroy(),this._pickNormalsRenderer=null),this._occlusionRenderer&&!1===this._occlusionRenderer.getValid()&&(this._occlusionRenderer.destroy(),this._occlusionRenderer=null),this._shadowRenderer&&!this._shadowRenderer.getValid()&&(this._shadowRenderer.destroy(),this._shadowRenderer=null)}get colorRenderer(){return this._colorRenderer||(this._colorRenderer=new Lt(this._scene,!1)),this._colorRenderer}get colorRendererWithSAO(){return this._colorRendererWithSAO||(this._colorRendererWithSAO=new Lt(this._scene,!0)),this._colorRendererWithSAO}get colorQualityRenderer(){return this._colorQualityRenderer||(this._colorQualityRenderer=new Kt(this._scene,!1)),this._colorQualityRenderer}get colorQualityRendererWithSAO(){return this._colorQualityRendererWithSAO||(this._colorQualityRendererWithSAO=new Kt(this._scene,!0)),this._colorQualityRendererWithSAO}get silhouetteRenderer(){return this._silhouetteRenderer||(this._silhouetteRenderer=new Dt(this._scene)),this._silhouetteRenderer}get depthRenderer(){return this._depthRenderer||(this._depthRenderer=new Vt(this._scene)),this._depthRenderer}get normalsRenderer(){return this._normalsRenderer||(this._normalsRenderer=new jt(this._scene)),this._normalsRenderer}get edgesRenderer(){return this._edgesRenderer||(this._edgesRenderer=new Bt(this._scene)),this._edgesRenderer}get edgesColorRenderer(){return this._edgesColorRenderer||(this._edgesColorRenderer=new Nt(this._scene)),this._edgesColorRenderer}get pickMeshRenderer(){return this._pickMeshRenderer||(this._pickMeshRenderer=new Tt(this._scene)),this._pickMeshRenderer}get pickNormalsRenderer(){return this._pickNormalsRenderer||(this._pickNormalsRenderer=new Gt(this._scene)),this._pickNormalsRenderer}get pickDepthRenderer(){return this._pickDepthRenderer||(this._pickDepthRenderer=new Ot(this._scene)),this._pickDepthRenderer}get occlusionRenderer(){return this._occlusionRenderer||(this._occlusionRenderer=new kt(this._scene)),this._occlusionRenderer}get shadowRenderer(){return this._shadowRenderer||(this._shadowRenderer=new Yt(this._scene)),this._shadowRenderer}_destroy(){this._colorRenderer&&this._colorRenderer.destroy(),this._colorRendererWithSAO&&this._colorRendererWithSAO.destroy(),this._colorQualityRenderer&&this._colorQualityRenderer.destroy(),this._colorQualityRendererWithSAO&&this._colorQualityRendererWithSAO.destroy(),this._depthRenderer&&this._depthRenderer.destroy(),this._normalsRenderer&&this._normalsRenderer.destroy(),this._silhouetteRenderer&&this._silhouetteRenderer.destroy(),this._edgesRenderer&&this._edgesRenderer.destroy(),this._edgesColorRenderer&&this._edgesColorRenderer.destroy(),this._pickMeshRenderer&&this._pickMeshRenderer.destroy(),this._pickDepthRenderer&&this._pickDepthRenderer.destroy(),this._pickNormalsRenderer&&this._pickNormalsRenderer.destroy(),this._occlusionRenderer&&this._occlusionRenderer.destroy(),this._shadowRenderer&&this._shadowRenderer.destroy()}}const $t={};const te=n.a.SUPPORTED_EXTENSIONS.OES_element_index_uint,ee=new Uint8Array(4),ie=r.a.vec4([0,0,0,1]),se=r.a.vec4([0,0,0,1]),oe=r.a.vec4([0,0,0,1]),re=new Float32Array(3);class ae{constructor(t,e){this.sortId="-solid",this.layerIndex=e.layerIndex,this._instancingRenderers=function(t){const e=t.id;let i=$t[e];return i||(i=new Jt(t),$t[e]=i,i._compile(),t.on("compile",(()=>{i._compile()})),t.on("destroyed",(()=>{delete $t[e],i._destroy()}))),i}(t.scene),this.model=t,this._aabb=r.a.collapseAABB3();const i={positionsDecodeMatrix:r.a.mat4(),numInstances:0,obb:r.a.OBB3(),rtcCenter:null},s=!!e.positionsDecodeMatrix,o=this.model.scene.canvas.gl;if(e.positions)if(s){let t=!1;i.positionsBuf=new L.a(o,o.ARRAY_BUFFER,e.positions,e.positions.length,3,o.STATIC_DRAW,t),i.positionsDecodeMatrix.set(e.positionsDecodeMatrix);let s=r.a.collapseAABB3();r.a.expandAABB3Points3(s,e.positions),w.a.decompressAABB(s,i.positionsDecodeMatrix),r.a.AABB3ToOBB3(s,i.obb)}else{let t=e.positions.length,s=r.a.collapseAABB3();r.a.expandAABB3Points3(s,e.positions),r.a.AABB3ToOBB3(s,i.obb);const a=dt(e.positions,s,i.positionsDecodeMatrix);let n=!1;i.positionsBuf=new L.a(o,o.ARRAY_BUFFER,a,t,3,o.STATIC_DRAW,n)}if(e.normals)if(s){const t=!0;i.normalsBuf=new L.a(o,o.ARRAY_BUFFER,e.normals,e.normals.length,3,o.STATIC_DRAW,t)}else{const t=function(t){const e=t.length,i=new Int8Array(e);let s,o,r,a,n;for(let l=0;l<e;l+=3)r=s=ft(t,l,"floor","floor"),o=_t(s),a=n=gt(t,l),s=ft(t,l,"ceil","floor"),o=_t(s),a=gt(t,l),a>n&&(r=s,n=a),s=ft(t,l,"floor","ceil"),o=_t(s),a=gt(t,l),a>n&&(r=s,n=a),s=ft(t,l,"ceil","ceil"),o=_t(s),a=gt(t,l),a>n&&(r=s,n=a),i[l+0]=r[0],i[l+1]=r[1],i[l+2]=0;return new Int8Array(i)}(e.normals),s=!0;i.normalsBuf=new L.a(o,o.ARRAY_BUFFER,t,t.length,3,o.STATIC_DRAW,s)}e.indices&&(i.indicesBuf=new L.a(o,o.ELEMENT_ARRAY_BUFFER,te?new Uint32Array(e.indices):new Uint16Array(e.indices),e.indices.length,1,o.STATIC_DRAW));let n=e.edgeIndices;n||(n=Object(a.a)(e.positions,e.indices,null,e.edgeThreshold||10)),i.edgeIndicesBuf=new L.a(o,o.ELEMENT_ARRAY_BUFFER,te?new Uint32Array(n):new Uint16Array(n),n.length,1,o.STATIC_DRAW),this._state=new A.a(i),this._numPortions=0,this._numVisibleLayerPortions=0,this._numTransparentLayerPortions=0,this._numXRayedLayerPortions=0,this._numHighlightedLayerPortions=0,this._numSelectedLayerPortions=0,this._numClippableLayerPortions=0,this._numEdgesLayerPortions=0,this._numPickableLayerPortions=0,this._numCulledLayerPortions=0,this.numIndices=e.indices?e.indices.length/3:0,this._colors=[],this._metallicRoughness=[],this._pickColors=[],this._offsets=[],this._modelMatrixCol0=[],this._modelMatrixCol1=[],this._modelMatrixCol2=[],this._modelNormalMatrixCol0=[],this._modelNormalMatrixCol1=[],this._modelNormalMatrixCol2=[],this._portions=[],e.rtcCenter&&(this._state.rtcCenter=r.a.vec3(e.rtcCenter)),this._finalized=!1,this.aabb=r.a.collapseAABB3(),this.solid=!!e.solid}createPortion(t){const e=t.color,i=t.metallic,s=t.roughness,o=t.opacity,a=t.meshMatrix,n=t.worldMatrix,l=t.aabb,h=t.pickColor;if(this._finalized)throw"Already finalized";const u=e[0],c=e[1],d=e[2];e[3];this._colors.push(u),this._colors.push(c),this._colors.push(d),this._colors.push(o),this._metallicRoughness.push(null!==i&&void 0!==i?i:0),this._metallicRoughness.push(null!==s&&void 0!==s?s:255),this.model.scene.entityOffsetsEnabled&&(this._offsets.push(0),this._offsets.push(0),this._offsets.push(0)),this._modelMatrixCol0.push(a[0]),this._modelMatrixCol0.push(a[4]),this._modelMatrixCol0.push(a[8]),this._modelMatrixCol0.push(a[12]),this._modelMatrixCol1.push(a[1]),this._modelMatrixCol1.push(a[5]),this._modelMatrixCol1.push(a[9]),this._modelMatrixCol1.push(a[13]),this._modelMatrixCol2.push(a[2]),this._modelMatrixCol2.push(a[6]),this._modelMatrixCol2.push(a[10]),this._modelMatrixCol2.push(a[14]);let p=r.a.transposeMat4(a,r.a.mat4()),f=r.a.inverseMat4(p);this._modelNormalMatrixCol0.push(f[0]),this._modelNormalMatrixCol0.push(f[4]),this._modelNormalMatrixCol0.push(f[8]),this._modelNormalMatrixCol0.push(f[12]),this._modelNormalMatrixCol1.push(f[1]),this._modelNormalMatrixCol1.push(f[5]),this._modelNormalMatrixCol1.push(f[9]),this._modelNormalMatrixCol1.push(f[13]),this._modelNormalMatrixCol2.push(f[2]),this._modelNormalMatrixCol2.push(f[6]),this._modelNormalMatrixCol2.push(f[10]),this._modelNormalMatrixCol2.push(f[14]),this._pickColors.push(h[0]),this._pickColors.push(h[1]),this._pickColors.push(h[2]),this._pickColors.push(h[3]),r.a.collapseAABB3(l);const _=this._state.obb,g=_.length;for(let P=0;P<g;P+=4)ie[0]=_[P+0],ie[1]=_[P+1],ie[2]=_[P+2],r.a.transformPoint4(a,ie,se),n?(r.a.transformPoint4(n,se,oe),r.a.expandAABB3Point3(l,oe)):r.a.expandAABB3Point3(l,se);if(this._state.rtcCenter){const t=this._state.rtcCenter;l[0]+=t[0],l[1]+=t[1],l[2]+=t[2],l[3]+=t[0],l[4]+=t[1],l[5]+=t[2]}r.a.expandAABB3(this.aabb,l),this._state.numInstances++;const m=this._portions.length;return this._portions.push({}),this._numPortions++,this.model.numPortions++,m}finalize(){if(this._finalized)throw"Already finalized";const t=this.model.scene.canvas.gl,e=this._colors.length,i=e;if(e>0){let e=!1;this._state.colorsBuf=new L.a(t,t.ARRAY_BUFFER,new Uint8Array(this._colors),this._colors.length,4,t.DYNAMIC_DRAW,e),this._colors=[]}if(this._metallicRoughness.length>0){const e=new Uint8Array(this._metallicRoughness);let i=!1;this._state.metallicRoughnessBuf=new L.a(t,t.ARRAY_BUFFER,e,this._metallicRoughness.length,2,t.STATIC_DRAW,i)}if(i>0){let e=!1,s=!0;this._state.flagsBuf=new L.a(t,t.ARRAY_BUFFER,new Uint8Array(i),i,4,t.DYNAMIC_DRAW,e),this._state.flags2Buf=new L.a(t,t.ARRAY_BUFFER,new Uint8Array(i),i,4,t.DYNAMIC_DRAW,s)}if(this.model.scene.entityOffsetsEnabled&&this._offsets.length>0){const e=!1;this._state.offsetsBuf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._offsets),this._offsets.length,3,t.DYNAMIC_DRAW,e),this._offsets=[]}if(this._modelMatrixCol0.length>0){const e=!1;this._state.modelMatrixCol0Buf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._modelMatrixCol0),this._modelMatrixCol0.length,4,t.STATIC_DRAW,e),this._state.modelMatrixCol1Buf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._modelMatrixCol1),this._modelMatrixCol1.length,4,t.STATIC_DRAW,e),this._state.modelMatrixCol2Buf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._modelMatrixCol2),this._modelMatrixCol2.length,4,t.STATIC_DRAW,e),this._modelMatrixCol0=[],this._modelMatrixCol1=[],this._modelMatrixCol2=[],this._state.modelNormalMatrixCol0Buf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._modelNormalMatrixCol0),this._modelNormalMatrixCol0.length,4,t.STATIC_DRAW,e),this._state.modelNormalMatrixCol1Buf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._modelNormalMatrixCol1),this._modelNormalMatrixCol1.length,4,t.STATIC_DRAW,e),this._state.modelNormalMatrixCol2Buf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._modelNormalMatrixCol2),this._modelNormalMatrixCol2.length,4,t.STATIC_DRAW,e),this._modelNormalMatrixCol0=[],this._modelNormalMatrixCol1=[],this._modelNormalMatrixCol2=[]}if(this._pickColors.length>0){const e=!1;this._state.pickColorsBuf=new L.a(t,t.ARRAY_BUFFER,new Uint8Array(this._pickColors),this._pickColors.length,4,t.STATIC_DRAW,e),this._pickColors=[]}this._finalized=!0}initFlags(t,e,i){e&d.a.VISIBLE&&(this._numVisibleLayerPortions++,this.model.numVisibleLayerPortions++),e&d.a.HIGHLIGHTED&&(this._numHighlightedLayerPortions++,this.model.numHighlightedLayerPortions++),e&d.a.XRAYED&&(this._numXRayedLayerPortions++,this.model.numXRayedLayerPortions++),e&d.a.SELECTED&&(this._numSelectedLayerPortions++,this.model.numSelectedLayerPortions++),e&d.a.CLIPPABLE&&(this._numClippableLayerPortions++,this.model.numClippableLayerPortions++),e&d.a.EDGES&&(this._numEdgesLayerPortions++,this.model.numEdgesLayerPortions++),e&d.a.PICKABLE&&(this._numPickableLayerPortions++,this.model.numPickableLayerPortions++),e&d.a.CULLED&&(this._numCulledLayerPortions++,this.model.numCulledLayerPortions++),i&&(this._numTransparentLayerPortions++,this.model.numTransparentLayerPortions++),this._setFlags(t,e,i),this._setFlags2(t,e)}setVisible(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.VISIBLE?(this._numVisibleLayerPortions++,this.model.numVisibleLayerPortions++):(this._numVisibleLayerPortions--,this.model.numVisibleLayerPortions--),this._setFlags(t,e,i)}setHighlighted(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.HIGHLIGHTED?(this._numHighlightedLayerPortions++,this.model.numHighlightedLayerPortions++):(this._numHighlightedLayerPortions--,this.model.numHighlightedLayerPortions--),this._setFlags(t,e,i)}setXRayed(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.XRAYED?(this._numXRayedLayerPortions++,this.model.numXRayedLayerPortions++):(this._numXRayedLayerPortions--,this.model.numXRayedLayerPortions--),this._setFlags(t,e,i)}setSelected(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.SELECTED?(this._numSelectedLayerPortions++,this.model.numSelectedLayerPortions++):(this._numSelectedLayerPortions--,this.model.numSelectedLayerPortions--),this._setFlags(t,e,i)}setEdges(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.EDGES?(this._numEdgesLayerPortions++,this.model.numEdgesLayerPortions++):(this._numEdgesLayerPortions--,this.model.numEdgesLayerPortions--),this._setFlags(t,e,i)}setClippable(t,e){if(!this._finalized)throw"Not finalized";e&d.a.CLIPPABLE?(this._numClippableLayerPortions++,this.model.numClippableLayerPortions++):(this._numClippableLayerPortions--,this.model.numClippableLayerPortions--),this._setFlags2(t,e)}setCollidable(t,e){if(!this._finalized)throw"Not finalized"}setPickable(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.PICKABLE?(this._numPickableLayerPortions++,this.model.numPickableLayerPortions++):(this._numPickableLayerPortions--,this.model.numPickableLayerPortions--),this._setFlags2(t,e,i)}setCulled(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.CULLED?(this._numCulledLayerPortions++,this.model.numCulledLayerPortions++):(this._numCulledLayerPortions--,this.model.numCulledLayerPortions--),this._setFlags(t,e,i)}setColor(t,e){if(!this._finalized)throw"Not finalized";ee[0]=e[0],ee[1]=e[1],ee[2]=e[2],ee[3]=e[3],this._state.colorsBuf.setData(ee,4*t,4)}setTransparent(t,e,i){i?(this._numTransparentLayerPortions++,this.model.numTransparentLayerPortions++):(this._numTransparentLayerPortions--,this.model.numTransparentLayerPortions--),this._setFlags(t,e,i)}_setFlags(t,e,i){if(!this._finalized)throw"Not finalized";const s=!!(e&d.a.VISIBLE),o=!!(e&d.a.XRAYED),r=!!(e&d.a.HIGHLIGHTED),a=!!(e&d.a.SELECTED),n=!!(e&d.a.EDGES),l=!!(e&d.a.PICKABLE),h=!!(e&d.a.CULLED);let u,c;u=!s||h||o?p:i?_:f,c=!s||h?p:a?m:r?g:o?P:p;let A=0;A=!s||h?p:a?y:r?b:o?M:n?i?x:v:p;let L=s&&!h&&l?E:p;ee[0]=u,ee[1]=c,ee[2]=A,ee[3]=L,this._state.flagsBuf.setData(ee,4*t,4)}_setFlags2(t,e){if(!this._finalized)throw"Not finalized";const i=e&d.a.CLIPPABLE?255:0;ee[0]=i,this._state.flags2Buf.setData(ee,4*t,4)}setOffset(t,e){if(!this._finalized)throw"Not finalized";this.model.scene.entityOffsetsEnabled?(re[0]=e[0],re[1]=e[1],re[2]=e[2],this._state.offsetsBuf.setData(re,3*t,3)):this.model.error("Entity#offset not enabled for this Viewer")}drawColorOpaque(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._numTransparentLayerPortions!==this._numPortions&&this._numXRayedLayerPortions!==this._numPortions&&(this._updateBackfaceCull(t,e),e.withSAO&&this.model.saoEnabled?e.pbrEnabled&&this.model.pbrEnabled?this._instancingRenderers.colorQualityRendererWithSAO&&this._instancingRenderers.colorQualityRendererWithSAO.drawLayer(e,this,f):this._instancingRenderers.colorRendererWithSAO&&this._instancingRenderers.colorRendererWithSAO.drawLayer(e,this,f):e.pbrEnabled&&this.model.pbrEnabled?this._instancingRenderers.colorQualityRenderer&&this._instancingRenderers.colorQualityRenderer.drawLayer(e,this,f):this._instancingRenderers.colorRenderer&&this._instancingRenderers.colorRenderer.drawLayer(e,this,f))}_updateBackfaceCull(t,e){const i=this.model.backfaces||!this.solid||t.sectioned;if(e.backfaces!==i){const t=e.gl;i?t.disable(t.CULL_FACE):t.enable(t.CULL_FACE),e.backfaces=i}}drawColorTransparent(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numTransparentLayerPortions&&this._numXRayedLayerPortions!==this._numPortions&&(this._updateBackfaceCull(t,e),e.pbrEnabled&&this.model.pbrEnabled?this._instancingRenderers.colorQualityRenderer&&this._instancingRenderers.colorQualityRenderer.drawLayer(e,this,_):this._instancingRenderers.colorRenderer&&this._instancingRenderers.colorRenderer.drawLayer(e,this,_))}drawDepth(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._numTransparentLayerPortions!==this._numPortions&&this._numXRayedLayerPortions!==this._numPortions&&(this._updateBackfaceCull(t,e),this._instancingRenderers.depthRenderer&&this._instancingRenderers.depthRenderer.drawLayer(e,this,f))}drawNormals(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._numTransparentLayerPortions!==this._numPortions&&this._numXRayedLayerPortions!==this._numPortions&&(this._updateBackfaceCull(t,e),this._instancingRenderers.normalsRenderer&&this._instancingRenderers.normalsRenderer.drawLayer(e,this,f))}drawSilhouetteXRayed(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numXRayedLayerPortions&&(this._updateBackfaceCull(t,e),this._instancingRenderers.silhouetteRenderer&&this._instancingRenderers.silhouetteRenderer.drawLayer(e,this,P))}drawSilhouetteHighlighted(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numHighlightedLayerPortions&&(this._updateBackfaceCull(t,e),this._instancingRenderers.silhouetteRenderer&&this._instancingRenderers.silhouetteRenderer.drawLayer(e,this,g))}drawSilhouetteSelected(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numSelectedLayerPortions&&(this._updateBackfaceCull(t,e),this._instancingRenderers.silhouetteRenderer&&this._instancingRenderers.silhouetteRenderer.drawLayer(e,this,m))}drawEdgesColorOpaque(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numEdgesLayerPortions&&this._instancingRenderers.edgesColorRenderer&&this._instancingRenderers.edgesColorRenderer.drawLayer(e,this,v)}drawEdgesColorTransparent(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numEdgesLayerPortions&&this._instancingRenderers.edgesColorRenderer&&this._instancingRenderers.edgesColorRenderer.drawLayer(e,this,x)}drawEdgesXRayed(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numXRayedLayerPortions&&this._instancingRenderers.edgesRenderer&&this._instancingRenderers.edgesRenderer.drawLayer(e,this,M)}drawEdgesHighlighted(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numHighlightedLayerPortions&&this._instancingRenderers.edgesRenderer&&this._instancingRenderers.edgesRenderer.drawLayer(e,this,b)}drawEdgesSelected(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numSelectedLayerPortions&&this._instancingRenderers.edgesRenderer&&this._instancingRenderers.edgesRenderer.drawLayer(e,this,y)}drawOcclusion(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&(this._updateBackfaceCull(t,e),this._instancingRenderers.occlusionRenderer&&this._instancingRenderers.occlusionRenderer.drawLayer(e,this,f))}drawShadow(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&(this._updateBackfaceCull(t,e),this._instancingRenderers.shadowRenderer&&this._instancingRenderers.shadowRenderer.drawLayer(e,this,f))}drawPickMesh(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&(this._updateBackfaceCull(t,e),this._instancingRenderers.pickMeshRenderer&&this._instancingRenderers.pickMeshRenderer.drawLayer(e,this,E))}drawPickDepths(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&(this._updateBackfaceCull(t,e),this._instancingRenderers.pickDepthRenderer&&this._instancingRenderers.pickDepthRenderer.drawLayer(e,this,E))}drawPickNormals(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&(this._updateBackfaceCull(t,e),this._instancingRenderers.pickNormalsRenderer&&this._instancingRenderers.pickNormalsRenderer.drawLayer(e,this,E))}destroy(){const t=this._state;t.positionsBuf&&(t.positionsBuf.destroy(),t.positionsBuf=null),t.normalsBuf&&(t.normalsBuf.destroy(),t.normalsBuf=null),t.colorsBuf&&(t.colorsBuf.destroy(),t.colorsBuf=null),t.metallicRoughnessBuf&&(t.metallicRoughnessBuf.destroy(),t.metallicRoughnessBuf=null),t.flagsBuf&&(t.flagsBuf.destroy(),t.flagsBuf=null),t.flags2Buf&&(t.flags2Buf.destroy(),t.flags2Buf=null),t.offsetsBuf&&(t.offsetsBuf.destroy(),t.offsetsBuf=null),t.modelMatrixCol0Buf&&(t.modelMatrixCol0Buf.destroy(),t.modelMatrixCol0Buf=null),t.modelMatrixCol1Buf&&(t.modelMatrixCol1Buf.destroy(),t.modelMatrixCol1Buf=null),t.modelMatrixCol2Buf&&(t.modelMatrixCol2Buf.destroy(),t.modelMatrixCol2Buf=null),t.modelNormalMatrixCol0Buf&&(t.modelNormalMatrixCol0Buf.destroy(),t.modelNormalMatrixCol0Buf=null),t.modelNormalMatrixCol1Buf&&(t.modelNormalMatrixCol1Buf.destroy(),t.modelNormalMatrixCol1Buf=null),t.modelNormalMatrixCol2Buf&&(t.modelNormalMatrixCol2Buf.destroy(),t.modelNormalMatrixCol2Buf=null),t.indicesBuf&&(t.indicesBuf.destroy(),t.indicessBuf=null),t.edgeIndicesBuf&&(t.edgeIndicesBuf.destroy(),t.edgeIndicessBuf=null),t.pickColorsBuf&&(t.pickColorsBuf.destroy(),t.pickColorsBuf=null),t.destroy()}}const ne=r.a.vec3();class le{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=this._scene,o=s.camera,r=e.model,a=s.canvas.gl,n=e._state,l=e._state.rtcCenter;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t)),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,l?Object(C.a)(o.viewMatrix,l):o.viewMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,r.worldMatrix),a.lineWidth(s.linesMaterial.lineWidth);const h=s._sectionPlanesState.sectionPlanes.length;if(h>0){const t=s._sectionPlanesState.sectionPlanes,i=e.layerIndex*h,o=r.renderFlags;for(let e=0;e<h;e++){const s=this._uSectionPlanes[e],r=o.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,r?1:0),r){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,ne);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aColor&&this._aColor.bindArrayBuffer(n.colorsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),n.indicesBuf.bind(),a.drawElements(a.LINES,n.indicesBuf.numItems,n.indicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aColor=i.getAttribute("color"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(t){const e=this._scene,i=e.canvas.gl,s=this._program,o=e.camera.project;if(s.bind(),i.uniformMatrix4fv(this._uProjMatrix,!1,o.matrix),e.logarithmicDepthBufferEnabled){const t=2/(Math.log(o.far+1)/Math.LN2);i.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Lines batching color vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),i.push("attribute vec4 color;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec4 vColor;"),i.push("void main(void) {"),i.push("if (int(flags.x) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&i.push("worldPosition.xyz = worldPosition.xyz + offset;"),i.push("vec4 viewPosition  = viewMatrix * worldPosition; "),i.push("vColor = vec4(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0, float(color.a) / 255.0);"),e&&(i.push("vWorldPosition = worldPosition;"),i.push("vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Lines batching color fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vColor;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("  if (dist > 0.0) { discard; }"),s.push("}")}return s.push("   gl_FragColor            = vColor;"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const he=new Float32Array([1,1,1]),ue=r.a.vec3();class ce{constructor(t,e){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=e._state.rtcCenter;if(!this._program&&(this._allocate(),this.errors))return;if(t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),i===P){const t=o.xrayMaterial._state,e=t.fillColor,i=t.fillAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===g){const t=o.highlightMaterial._state,e=t.fillColor,i=t.fillAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===m){const t=o.selectedMaterial._state,e=t.fillColor,i=t.fillAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else a.uniform4fv(this._uColor,he);const h=l?Object(C.a)(r.viewMatrix,l):r.viewMatrix;a.uniformMatrix4fv(this._uViewMatrix,!1,h),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.lineWidth(o.linesMaterial.lineWidth);const u=o._sectionPlanesState.sectionPlanes.length;if(u>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*u,r=s.renderFlags;for(let e=0;e<u;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,ue);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),n.indicesBuf.bind(),a.drawElements(a.LINES,n.indicesBuf.numItems,n.indicesBuf.itemType,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uColor=i.getLocation("color"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Lines batching silhouette vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),i.push("uniform vec4 color;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("void main(void) {"),i.push("if (int(flags.y) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("vWorldPosition = worldPosition;"),i.push("vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Lines batching silhouette fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("uniform vec4 color;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("  if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("gl_FragColor = color;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}class de{constructor(t){this._scene=t}_compile(){this._colorRenderer&&!this._colorRenderer.getValid()&&(this._colorRenderer.destroy(),this._colorRenderer=null),this._silhouetteRenderer&&!this._silhouetteRenderer.getValid()&&(this._silhouetteRenderer.destroy(),this._silhouetteRenderer=null)}get colorRenderer(){return this._colorRenderer||(this._colorRenderer=new le(this._scene,!1)),this._colorRenderer}get silhouetteRenderer(){return this._silhouetteRenderer||(this._silhouetteRenderer=new ce(this._scene)),this._silhouetteRenderer}_destroy(){this._colorRenderer&&this._colorRenderer.destroy(),this._silhouetteRenderer&&this._silhouetteRenderer.destroy()}}const pe={};const fe=n.a.SUPPORTED_EXTENSIONS.OES_element_index_uint;class _e{constructor(t=5e6){fe?t>5e6&&(t=5e6):t>65530&&(t=65530),this.maxVerts=t,this.maxIndices=3*t,this.positions=[],this.colors=[],this.flags=[],this.flags2=[],this.offsets=[],this.indices=[]}}const ge=r.a.vec4([0,0,0,1]),me=r.a.vec4([0,0,0,1]),Pe=r.a.vec4([0,0,0,1]),ve=r.a.OBB3();class xe{constructor(t,e){this.layerIndex=e.layerIndex,this._batchingRenderers=function(t){const e=t.id;let i=pe[e];return i||(i=new de(t),pe[e]=i,i._compile(),t.on("compile",(()=>{i._compile()})),t.on("destroyed",(()=>{delete pe[e],i._destroy()}))),i}(t.scene),this.model=t,this._buffer=new _e(e.maxGeometryBatchSize),this._scratchMemory=e.scratchMemory,this._state=new A.a({positionsBuf:null,offsetsBuf:null,colorsBuf:null,flagsBuf:null,flags2Buf:null,indicesBuf:null,positionsDecodeMatrix:r.a.mat4(),rtcCenter:null}),this._numPortions=0,this._numVisibleLayerPortions=0,this._numTransparentLayerPortions=0,this._numXRayedLayerPortions=0,this._numSelectedLayerPortions=0,this._numHighlightedLayerPortions=0,this._numClippableLayerPortions=0,this._numEdgesLayerPortions=0,this._numPickableLayerPortions=0,this._numCulledLayerPortions=0,this._modelAABB=r.a.collapseAABB3(),this._portions=[],this._finalized=!1,this._positionsDecodeMatrix=e.positionsDecodeMatrix,this._preCompressed=!!this._positionsDecodeMatrix,e.rtcCenter&&(this._state.rtcCenter=r.a.vec3(e.rtcCenter)),this.aabb=r.a.collapseAABB3()}canCreatePortion(t,e){if(this._finalized)throw"Already finalized";return this._buffer.positions.length+t<3*this._buffer.maxVerts&&this._buffer.indices.length+e<this._buffer.maxIndices}createPortion(t){if(this._finalized)throw"Already finalized";const e=t.positions,i=t.indices,s=t.color,o=t.opacity,a=t.meshMatrix,n=t.worldMatrix,l=t.worldAABB,h=(t.pickColor,this._buffer),u=h.positions.length/3,c=e.length/3,d=e.length;if(this._preCompressed){for(let o=0,r=e.length;o<r;o++)h.positions.push(e[o]);const t=w.a.getPositionsBounds(e),i=w.a.decompressPosition(t.min,this._positionsDecodeMatrix,[]),s=w.a.decompressPosition(t.max,this._positionsDecodeMatrix,[]);l[0]=i[0],l[1]=i[1],l[2]=i[2],l[3]=s[0],l[4]=s[1],l[5]=s[2],n&&(r.a.AABB3ToOBB3(l,ve),r.a.transformOBB3(n,ve),r.a.OBB3ToAABB3(ve,l))}else{const t=h.positions.length;for(let i=0,s=e.length;i<s;i++)h.positions.push(e[i]);if(a)for(let e=t,i=t+d;e<i;e+=3)ge[0]=h.positions[e+0],ge[1]=h.positions[e+1],ge[2]=h.positions[e+2],r.a.transformPoint4(a,ge,me),h.positions[e+0]=me[0],h.positions[e+1]=me[1],h.positions[e+2]=me[2],r.a.expandAABB3Point3(this._modelAABB,me),n?(r.a.transformPoint4(n,me,Pe),r.a.expandAABB3Point3(l,Pe)):r.a.expandAABB3Point3(l,me);else for(let e=t,i=t+d;e<i;e+=3)ge[0]=h.positions[e+0],ge[1]=h.positions[e+1],ge[2]=h.positions[e+2],r.a.expandAABB3Point3(this._modelAABB,ge),n?(r.a.transformPoint4(n,ge,me),r.a.expandAABB3Point3(l,me)):r.a.expandAABB3Point3(l,ge)}if(this._state.rtcCenter){const t=this._state.rtcCenter;l[0]+=t[0],l[1]+=t[1],l[2]+=t[2],l[3]+=t[0],l[4]+=t[1],l[5]+=t[2]}if(r.a.expandAABB3(this.aabb,l),s){const t=s[0],e=s[1],i=s[2],r=o;for(let s=0;s<c;s++)h.colors.push(t),h.colors.push(e),h.colors.push(i),h.colors.push(r)}if(i)for(let r=0,f=i.length;r<f;r++)h.indices.push(i[r]+u);if(this.model.scene.entityOffsetsEnabled)for(let r=0;r<c;r++)h.offsets.push(0),h.offsets.push(0),h.offsets.push(0);const p=this._portions.length/2;return this._portions.push(u),this._portions.push(c),this._numPortions++,this.model.numPortions++,p}finalize(){if(this._finalized)return void this.model.error("Already finalized");const t=this._state,e=this.model.scene.canvas.gl,i=this._buffer;if(i.positions.length>0)if(this._preCompressed){t.positionsDecodeMatrix=this._positionsDecodeMatrix;const s=new Uint16Array(i.positions);t.positionsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.positions.length,3,e.STATIC_DRAW)}else{const s=dt(new Float32Array(i.positions),this._modelAABB,t.positionsDecodeMatrix);t.positionsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.positions.length,3,e.STATIC_DRAW)}if(i.colors.length>0){const s=new Uint8Array(i.colors);let o=!1;t.colorsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.colors.length,4,e.DYNAMIC_DRAW,o)}if(i.colors.length>0){const s=i.colors.length,o=new Uint8Array(s),r=new Uint8Array(s);let a=!1,n=!0;t.flagsBuf=new L.a(e,e.ARRAY_BUFFER,o,o.length,4,e.DYNAMIC_DRAW,a),t.flags2Buf=new L.a(e,e.ARRAY_BUFFER,r,r.length,4,e.DYNAMIC_DRAW,n)}if(this.model.scene.entityOffsetsEnabled&&i.offsets.length>0){const s=new Float32Array(i.offsets);t.offsetsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.offsets.length,3,e.DYNAMIC_DRAW)}const s=n.a.SUPPORTED_EXTENSIONS.OES_element_index_uint;if(i.indices.length>0){const o=s?new Uint32Array(i.indices):new Uint16Array(i.indices);t.indicesBuf=new L.a(e,e.ELEMENT_ARRAY_BUFFER,o,i.indices.length,1,e.STATIC_DRAW)}this._buffer=null,this._finalized=!0}initFlags(t,e,i){e&d.a.VISIBLE&&(this._numVisibleLayerPortions++,this.model.numVisibleLayerPortions++),e&d.a.HIGHLIGHTED&&(this._numHighlightedLayerPortions++,this.model.numHighlightedLayerPortions++),e&d.a.XRAYED&&(this._numXRayedLayerPortions++,this.model.numXRayedLayerPortions++),e&d.a.SELECTED&&(this._numSelectedLayerPortions++,this.model.numSelectedLayerPortions++),e&d.a.CLIPPABLE&&(this._numClippableLayerPortions++,this.model.numClippableLayerPortions++),e&d.a.EDGES&&(this._numEdgesLayerPortions++,this.model.numEdgesLayerPortions++),e&d.a.PICKABLE&&(this._numPickableLayerPortions++,this.model.numPickableLayerPortions++),e&d.a.CULLED&&(this._numCulledLayerPortions++,this.model.numCulledLayerPortions++),i&&(this._numTransparentLayerPortions++,this.model.numTransparentLayerPortions++),this._setFlags(t,e,i),this._setFlags2(t,e)}setVisible(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.VISIBLE?(this._numVisibleLayerPortions++,this.model.numVisibleLayerPortions++):(this._numVisibleLayerPortions--,this.model.numVisibleLayerPortions--),this._setFlags(t,e,i)}setHighlighted(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.HIGHLIGHTED?(this._numHighlightedLayerPortions++,this.model.numHighlightedLayerPortions++):(this._numHighlightedLayerPortions--,this.model.numHighlightedLayerPortions--),this._setFlags(t,e,i)}setXRayed(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.XRAYED?(this._numXRayedLayerPortions++,this.model.numXRayedLayerPortions++):(this._numXRayedLayerPortions--,this.model.numXRayedLayerPortions--),this._setFlags(t,e,i)}setSelected(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.SELECTED?(this._numSelectedLayerPortions++,this.model.numSelectedLayerPortions++):(this._numSelectedLayerPortions--,this.model.numSelectedLayerPortions--),this._setFlags(t,e,i)}setEdges(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.EDGES?(this._numEdgesLayerPortions++,this.model.numEdgesLayerPortions++):(this._numEdgesLayerPortions--,this.model.numEdgesLayerPortions--),this._setFlags(t,e,i)}setClippable(t,e){if(!this._finalized)throw"Not finalized";e&d.a.CLIPPABLE?(this._numClippableLayerPortions++,this.model.numClippableLayerPortions++):(this._numClippableLayerPortions--,this.model.numClippableLayerPortions--),this._setFlags2(t,e)}setCulled(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.CULLED?(this._numCulledLayerPortions++,this.model.numCulledLayerPortions++):(this._numCulledLayerPortions--,this.model.numCulledLayerPortions--),this._setFlags(t,e,i)}setCollidable(t,e){if(!this._finalized)throw"Not finalized"}setPickable(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.PICKABLE?(this._numPickableLayerPortions++,this.model.numPickableLayerPortions++):(this._numPickableLayerPortions--,this.model.numPickableLayerPortions--),this._setFlags(t,e,i)}setColor(t,e){if(!this._finalized)throw"Not finalized";const i=2*t,s=4*this._portions[i],o=4*this._portions[i+1],r=this._scratchMemory.getUInt8Array(o),a=e[0],n=e[1],l=e[2],h=e[3];for(let u=0;u<o;u+=4)r[u+0]=a,r[u+1]=n,r[u+2]=l,r[u+3]=h;this._state.colorsBuf.setData(r,s,o)}setTransparent(t,e,i){i?(this._numTransparentLayerPortions++,this.model.numTransparentLayerPortions++):(this._numTransparentLayerPortions--,this.model.numTransparentLayerPortions--),this._setFlags(t,e,i)}_setFlags(t,e,i){if(!this._finalized)throw"Not finalized";const s=2*t,o=4*this._portions[s],r=4*this._portions[s+1],a=this._scratchMemory.getUInt8Array(r),n=!!(e&d.a.VISIBLE),l=!!(e&d.a.XRAYED),h=!!(e&d.a.HIGHLIGHTED),u=!!(e&d.a.SELECTED),c=(d.a.EDGES,!!(e&d.a.PICKABLE)),v=!!(e&d.a.CULLED);let x,b;x=!n||v||l?p:i?_:f,b=!n||v?p:u?m:h?g:l?P:p;let y=n&&!v&&c?E:p;for(let d=0;d<r;d+=4)a[d+0]=x,a[d+1]=b,a[d+2]=0,a[d+3]=y;this._state.flagsBuf.setData(a,o,r)}_setFlags2(t,e){if(!this._finalized)throw"Not finalized";const i=2*t,s=4*this._portions[i],o=4*this._portions[i+1],r=this._scratchMemory.getUInt8Array(o),a=e&d.a.CLIPPABLE?255:0;for(let n=0;n<o;n+=4)r[n+0]=a;this._state.flags2Buf.setData(r,s,o)}setOffset(t,e){if(!this._finalized)throw"Not finalized";if(!this.model.scene.entityOffsetsEnabled)return void this.model.error("Entity#offset not enabled for this Viewer");const i=2*t,s=3*this._portions[i],o=3*this._portions[i+1],r=this._scratchMemory.getFloat32Array(o),a=e[0],n=e[1],l=e[2];for(let h=0;h<o;h+=3)r[h+0]=a,r[h+1]=n,r[h+2]=l;this._state.offsetsBuf.setData(r,s,o)}drawColorOpaque(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._numTransparentLayerPortions!==this._numPortions&&this._numXRayedLayerPortions!==this._numPortions&&this._batchingRenderers.colorRenderer&&this._batchingRenderers.colorRenderer.drawLayer(e,this,f)}drawColorTransparent(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numTransparentLayerPortions&&this._numXRayedLayerPortions!==this._numPortions&&this._batchingRenderers.colorRenderer&&this._batchingRenderers.colorRenderer.drawLayer(e,this,_)}drawDepth(t,e){}drawNormals(t,e){}drawSilhouetteXRayed(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numXRayedLayerPortions&&this._batchingRenderers.silhouetteRenderer&&this._batchingRenderers.silhouetteRenderer.drawLayer(e,this,P)}drawSilhouetteHighlighted(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numHighlightedLayerPortions&&this._batchingRenderers.silhouetteRenderer&&this._batchingRenderers.silhouetteRenderer.drawLayer(e,this,g)}drawSilhouetteSelected(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numSelectedLayerPortions&&this._batchingRenderers.silhouetteRenderer&&this._batchingRenderers.silhouetteRenderer.drawLayer(e,this,m)}drawEdgesColorOpaque(t,e){}drawEdgesColorTransparent(t,e){}drawEdgesHighlighted(t,e){}drawEdgesSelected(t,e){}drawEdgesXRayed(t,e){}drawPickMesh(t){}drawPickDepths(t){}drawPickNormals(t){}drawOcclusion(t){}drawShadow(t){}destroy(){const t=this._state;t.positionsBuf&&(t.positionsBuf.destroy(),t.positionsBuf=null),t.offsetsBuf&&(t.offsetsBuf.destroy(),t.offsetsBuf=null),t.colorsBuf&&(t.colorsBuf.destroy(),t.colorsBuf=null),t.flagsBuf&&(t.flagsBuf.destroy(),t.flagsBuf=null),t.flags2Buf&&(t.flags2Buf.destroy(),t.flags2Buf=null),t.indicesBuf&&(t.indicesBuf.destroy(),t.indicessBuf=null),t.destroy()}}const be=r.a.vec3();class ye{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t)),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,h?Object(C.a)(r.viewMatrix,h):r.viewMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.lineWidth(o.linesMaterial.lineWidth);const u=o._sectionPlanesState.sectionPlanes.length;if(u>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*u,r=s.renderFlags;for(let e=0;e<u;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,be);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aColor.bindArrayBuffer(n.colorsBuf),l.vertexAttribDivisorANGLE(this._aColor.location,1),this._aFlags.bindArrayBuffer(n.flagsBuf),l.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),n.indicesBuf.bind(),l.drawElementsInstancedANGLE(a.LINES,n.indicesBuf.numItems,n.indicesBuf.itemType,0,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aColor.location,0),l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aColor=i.getAttribute("color"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),this._aOffset=i.getAttribute("offset"),this._aModelMatrixCol0=i.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=i.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=i.getAttribute("modelMatrixCol2"),this._uOcclusionTexture="uOcclusionTexture",t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Lines instancing color vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),i.push("attribute vec4 color;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),i.push("uniform vec4 lightAmbient;"),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("varying vec4 vColor;"),i.push("void main(void) {"),i.push("if (int(flags.x) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("vec4 worldPosition =  positionsDecodeMatrix * vec4(position, 1.0); "),i.push("worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("vec4 viewPosition  = viewMatrix * worldPosition; "),i.push("vColor = vec4(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0,  float(color.a) / 255.0);"),e&&(i.push("vWorldPosition = worldPosition;"),i.push("vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState;let i,s;const o=e.sectionPlanes.length>0,r=[];if(r.push("// Lines instancing color fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("#extension GL_EXT_frag_depth : enable"),r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),r.push("precision highp float;"),r.push("precision highp int;"),r.push("#else"),r.push("precision mediump float;"),r.push("precision mediump int;"),r.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(r.push("uniform float logDepthBufFC;"),r.push("varying float vFragDepth;")),o)for(r.push("varying vec4 vWorldPosition;"),r.push("varying vec4 vFlags2;"),i=0,s=e.sectionPlanes.length;i<s;i++)r.push("uniform bool sectionPlaneActive"+i+";"),r.push("uniform vec3 sectionPlanePos"+i+";"),r.push("uniform vec3 sectionPlaneDir"+i+";");if(r.push("varying vec4 vColor;"),r.push("void main(void) {"),o){for(r.push("  bool clippable = (float(vFlags2.x) > 0.0);"),r.push("  if (clippable) {"),r.push("  float dist = 0.0;"),i=0,s=e.sectionPlanes.length;i<s;i++)r.push("if (sectionPlaneActive"+i+") {"),r.push("   dist += clamp(dot(-sectionPlaneDir"+i+".xyz, vWorldPosition.xyz - sectionPlanePos"+i+".xyz), 0.0, 1000.0);"),r.push("}");r.push("if (dist > 0.0) { discard; }"),r.push("}")}return this._withSAO?(r.push("   float viewportWidth     = uSAOParams[0];"),r.push("   float viewportHeight    = uSAOParams[1];"),r.push("   float blendCutoff       = uSAOParams[2];"),r.push("   float blendFactor       = uSAOParams[3];"),r.push("   vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);"),r.push("   float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBAToDepth(texture2D(uOcclusionTexture, uv))) * blendFactor;"),r.push("   gl_FragColor            = vec4(vColor.rgb * ambient, vColor.a);")):r.push("    gl_FragColor           = vColor;"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),r.push("}"),r}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Me=r.a.vec3();class Ee{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e,i){const s=e.model,o=s.scene,a=o.camera,n=o.canvas.gl,l=e._state,h=this._instanceExt,u=e._state.rtcCenter;if(!this._program&&(this._allocate(e.model.scene),this.errors))return;if(t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),n.uniform1i(this._uRenderPass,i),i===P){const t=o.xrayMaterial._state,e=t.fillColor,i=t.fillAlpha;n.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===g){const t=o.highlightMaterial._state,e=t.fillColor,i=t.fillAlpha;n.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===m){const t=o.selectedMaterial._state,e=t.fillColor,i=t.fillAlpha;n.uniform4f(this._uColor,e[0],e[1],e[2],i)}else n.uniform4fv(this._uColor,r.a.vec3([1,1,1]));n.uniformMatrix4fv(this._uViewMatrix,!1,u?Object(C.a)(a.viewMatrix,u):a.viewMatrix),n.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),n.lineWidth(o.linesMaterial.lineWidth);const c=o._sectionPlanesState.sectionPlanes.length;if(c>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*c,r=s.renderFlags;for(let e=0;e<c;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(n.uniform1i(s.active,o?1:0),o){const i=t[e];if(u){const t=Object(C.b)(i.dist,i.dir,u,Me);n.uniform3fv(s.pos,t)}else n.uniform3fv(s.pos,i.pos);n.uniform3fv(s.dir,i.dir)}}}n.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(l.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(l.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(l.modelMatrixCol2Buf),h.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),h.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),h.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPosition.bindArrayBuffer(l.positionsBuf),this._aFlags.bindArrayBuffer(l.flagsBuf,n.UNSIGNED_BYTE,!0),h.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(l.flags2Buf,n.UNSIGNED_BYTE,!0),h.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(l.offsetsBuf),h.vertexAttribDivisorANGLE(this._aOffset.location,1)),l.indicesBuf.bind(),h.drawElementsInstancedANGLE(n.LINES,l.indicesBuf.numItems,l.indicesBuf.itemType,0,l.numInstances),h.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),h.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),h.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),h.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&h.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&h.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uColor=s.getLocation("color"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Lines instancing silhouette vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("#extension GL_EXT_frag_depth : enable"),i.push("uniform int renderPass;"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("uniform mat4 worldMatrix;"),i.push("uniform mat4 viewMatrix;"),i.push("uniform mat4 projMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),t.logarithmicDepthBufferEnabled&&(i.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&i.push("varying float vFragDepth;")),i.push("uniform vec4 color;"),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("void main(void) {"),i.push("if (int(flags.y) != renderPass) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),i.push("worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(i.push("vWorldPosition = worldPosition;"),i.push("vFlags2 = flags2;")),i.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?i.push("vFragDepth = 1.0 + clipPos.w;"):(i.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),i.push("clipPos.z *= clipPos.w;"))),i.push("gl_Position = clipPos;"),i.push("}"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Lines instancing silhouette fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("uniform vec4 color;"),s.push("void main(void) {"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("gl_FragColor = color;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}class Ae{constructor(t){this._scene=t}_compile(){this._colorRenderer&&!this._colorRenderer.getValid()&&(this._colorRenderer.destroy(),this._colorRenderer=null),this._silhouetteRenderer&&!this._silhouetteRenderer.getValid()&&(this._silhouetteRenderer.destroy(),this._silhouetteRenderer=null)}get colorRenderer(){return this._colorRenderer||(this._colorRenderer=new ye(this._scene)),this._colorRenderer}get silhouetteRenderer(){return this._silhouetteRenderer||(this._silhouetteRenderer=new Ee(this._scene)),this._silhouetteRenderer}_destroy(){this._colorRenderer&&this._colorRenderer.destroy(),this._silhouetteRenderer&&this._silhouetteRenderer.destroy()}}const Le={};const we=n.a.SUPPORTED_EXTENSIONS.OES_element_index_uint,De=new Uint8Array(4),Ce=r.a.vec4([0,0,0,1]),Se=r.a.vec4([0,0,0,1]),Be=r.a.vec4([0,0,0,1]),Re=new Float32Array(3);class Ne{constructor(t,e){this.sortId="LinesInstancingLayer",this.layerIndex=e.layerIndex,this._linesInstancingRenderers=function(t){const e=t.id;let i=Le[e];return i||(i=new Ae(t),Le[e]=i,i._compile(),t.on("compile",(()=>{i._compile()})),t.on("destroyed",(()=>{delete Le[e],i._destroy()}))),i}(t.scene),this.model=t,this._aabb=r.a.collapseAABB3();const i=t.scene.canvas.gl,s={positionsDecodeMatrix:r.a.mat4(),numInstances:0,obb:r.a.OBB3(),rtcCenter:null},o=!!e.positionsDecodeMatrix;if(e.positions)if(o){let t=!1;s.positionsBuf=new L.a(i,i.ARRAY_BUFFER,e.positions,e.positions.length,3,i.STATIC_DRAW,t),s.positionsDecodeMatrix.set(e.positionsDecodeMatrix);let o=r.a.collapseAABB3();r.a.expandAABB3Points3(o,e.positions),w.a.decompressAABB(o,s.positionsDecodeMatrix),r.a.AABB3ToOBB3(o,s.obb)}else{let t=e.positions.length,o=r.a.collapseAABB3();r.a.expandAABB3Points3(o,e.positions),r.a.AABB3ToOBB3(o,s.obb);const a=dt(e.positions,o,s.positionsDecodeMatrix);let n=!1;s.positionsBuf=new L.a(i,i.ARRAY_BUFFER,a,t,3,i.STATIC_DRAW,n)}e.indices&&(s.indicesBuf=new L.a(i,i.ELEMENT_ARRAY_BUFFER,we?new Uint32Array(e.indices):new Uint16Array(e.indices),e.indices.length,1,i.STATIC_DRAW)),this._state=new A.a(s),this._numPortions=0,this._numVisibleLayerPortions=0,this._numTransparentLayerPortions=0,this._numXRayedLayerPortions=0,this._numHighlightedLayerPortions=0,this._numSelectedLayerPortions=0,this._numClippableLayerPortions=0,this._numEdgesLayerPortions=0,this._numPickableLayerPortions=0,this._numCulledLayerPortions=0,this.numIndices=e.indices?e.indices.length/3:0,this._colors=[],this._offsets=[],this._modelMatrixCol0=[],this._modelMatrixCol1=[],this._modelMatrixCol2=[],this._portions=[],e.rtcCenter&&(this._state.rtcCenter=r.a.vec3(e.rtcCenter)),this._finalized=!1,this.aabb=r.a.collapseAABB3()}createPortion(t){const e=t.color,i=t.opacity,s=t.meshMatrix,o=t.worldMatrix,a=t.aabb;if(this._finalized)throw"Already finalized";const n=e[0],l=e[1],h=e[2];e[3];this._colors.push(n),this._colors.push(l),this._colors.push(h),this._colors.push(i),this.model.scene.entityOffsetsEnabled&&(this._offsets.push(0),this._offsets.push(0),this._offsets.push(0)),this._modelMatrixCol0.push(s[0]),this._modelMatrixCol0.push(s[4]),this._modelMatrixCol0.push(s[8]),this._modelMatrixCol0.push(s[12]),this._modelMatrixCol1.push(s[1]),this._modelMatrixCol1.push(s[5]),this._modelMatrixCol1.push(s[9]),this._modelMatrixCol1.push(s[13]),this._modelMatrixCol2.push(s[2]),this._modelMatrixCol2.push(s[6]),this._modelMatrixCol2.push(s[10]),this._modelMatrixCol2.push(s[14]),r.a.collapseAABB3(a);const u=this._state.obb,c=u.length;for(let p=0;p<c;p+=4)Ce[0]=u[p+0],Ce[1]=u[p+1],Ce[2]=u[p+2],r.a.transformPoint4(s,Ce,Se),o?(r.a.transformPoint4(o,Se,Be),r.a.expandAABB3Point3(a,Be)):r.a.expandAABB3Point3(a,Se);if(this._state.rtcCenter){const t=this._state.rtcCenter;a[0]+=t[0],a[1]+=t[1],a[2]+=t[2],a[3]+=t[0],a[4]+=t[1],a[5]+=t[2]}r.a.expandAABB3(this.aabb,a),this._state.numInstances++;const d=this._portions.length;return this._portions.push({}),this._numPortions++,this.model.numPortions++,d}finalize(){if(this._finalized)throw"Already finalized";const t=this.model.scene.canvas.gl,e=this._colors.length,i=e;if(e>0){let e=!1;this._state.colorsBuf=new L.a(t,t.ARRAY_BUFFER,new Uint8Array(this._colors),this._colors.length,4,t.DYNAMIC_DRAW,e),this._colors=[]}if(i>0){let e=!1,s=!0;this._state.flagsBuf=new L.a(t,t.ARRAY_BUFFER,new Uint8Array(i),i,4,t.DYNAMIC_DRAW,e),this._state.flags2Buf=new L.a(t,t.ARRAY_BUFFER,new Uint8Array(i),i,4,t.DYNAMIC_DRAW,s)}if(this.model.scene.entityOffsetsEnabled&&this._offsets.length>0){const e=!1;this._state.offsetsBuf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._offsets),this._offsets.length,3,t.DYNAMIC_DRAW,e),this._offsets=[]}if(this._modelMatrixCol0.length>0){const e=!1;this._state.modelMatrixCol0Buf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._modelMatrixCol0),this._modelMatrixCol0.length,4,t.STATIC_DRAW,e),this._state.modelMatrixCol1Buf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._modelMatrixCol1),this._modelMatrixCol1.length,4,t.STATIC_DRAW,e),this._state.modelMatrixCol2Buf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._modelMatrixCol2),this._modelMatrixCol2.length,4,t.STATIC_DRAW,e),this._modelMatrixCol0=[],this._modelMatrixCol1=[],this._modelMatrixCol2=[]}this._finalized=!0}initFlags(t,e,i){e&d.a.VISIBLE&&(this._numVisibleLayerPortions++,this.model.numVisibleLayerPortions++),e&d.a.HIGHLIGHTED&&(this._numHighlightedLayerPortions++,this.model.numHighlightedLayerPortions++),e&d.a.XRAYED&&(this._numXRayedLayerPortions++,this.model.numXRayedLayerPortions++),e&d.a.SELECTED&&(this._numSelectedLayerPortions++,this.model.numSelectedLayerPortions++),e&d.a.CLIPPABLE&&(this._numClippableLayerPortions++,this.model.numClippableLayerPortions++),e&d.a.EDGES&&(this._numEdgesLayerPortions++,this.model.numEdgesLayerPortions++),e&d.a.PICKABLE&&(this._numPickableLayerPortions++,this.model.numPickableLayerPortions++),e&d.a.CULLED&&(this._numCulledLayerPortions++,this.model.numCulledLayerPortions++),i&&(this._numTransparentLayerPortions++,this.model.numTransparentLayerPortions++),this._setFlags(t,e,i),this._setFlags2(t,e)}setVisible(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.VISIBLE?(this._numVisibleLayerPortions++,this.model.numVisibleLayerPortions++):(this._numVisibleLayerPortions--,this.model.numVisibleLayerPortions--),this._setFlags(t,e,i)}setHighlighted(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.HIGHLIGHTED?(this._numHighlightedLayerPortions++,this.model.numHighlightedLayerPortions++):(this._numHighlightedLayerPortions--,this.model.numHighlightedLayerPortions--),this._setFlags(t,e,i)}setXRayed(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.XRAYED?(this._numXRayedLayerPortions++,this.model.numXRayedLayerPortions++):(this._numXRayedLayerPortions--,this.model.numXRayedLayerPortions--),this._setFlags(t,e,i)}setSelected(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.SELECTED?(this._numSelectedLayerPortions++,this.model.numSelectedLayerPortions++):(this._numSelectedLayerPortions--,this.model.numSelectedLayerPortions--),this._setFlags(t,e,i)}setEdges(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.EDGES?(this._numEdgesLayerPortions++,this.model.numEdgesLayerPortions++):(this._numEdgesLayerPortions--,this.model.numEdgesLayerPortions--),this._setFlags(t,e,i)}setClippable(t,e){if(!this._finalized)throw"Not finalized";e&d.a.CLIPPABLE?(this._numClippableLayerPortions++,this.model.numClippableLayerPortions++):(this._numClippableLayerPortions--,this.model.numClippableLayerPortions--),this._setFlags2(t,e)}setCollidable(t,e){if(!this._finalized)throw"Not finalized"}setPickable(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.PICKABLE?(this._numPickableLayerPortions++,this.model.numPickableLayerPortions++):(this._numPickableLayerPortions--,this.model.numPickableLayerPortions--),this._setFlags2(t,e,i)}setCulled(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.CULLED?(this._numCulledLayerPortions++,this.model.numCulledLayerPortions++):(this._numCulledLayerPortions--,this.model.numCulledLayerPortions--),this._setFlags(t,e,i)}setColor(t,e){if(!this._finalized)throw"Not finalized";De[0]=e[0],De[1]=e[1],De[2]=e[2],De[3]=e[3],this._state.colorsBuf.setData(De,4*t,4)}setTransparent(t,e,i){i?(this._numTransparentLayerPortions++,this.model.numTransparentLayerPortions++):(this._numTransparentLayerPortions--,this.model.numTransparentLayerPortions--),this._setFlags(t,e,i)}_setFlags(t,e,i){if(!this._finalized)throw"Not finalized";const s=!!(e&d.a.VISIBLE),o=!!(e&d.a.XRAYED),r=!!(e&d.a.HIGHLIGHTED),a=!!(e&d.a.SELECTED),n=!!(e&d.a.EDGES),l=!!(e&d.a.PICKABLE),h=!!(e&d.a.CULLED);let u,c;u=!s||h||o?p:i?_:f,c=!s||h?p:a?m:r?g:o?P:p;let A=0;A=!s||h?p:a?y:r?b:o?M:n?i?x:v:p;let L=s&&!h&&l?E:p;De[0]=u,De[1]=c,De[2]=A,De[3]=L,this._state.flagsBuf.setData(De,4*t,4)}_setFlags2(t,e){if(!this._finalized)throw"Not finalized";const i=e&d.a.CLIPPABLE?255:0;De[0]=i,this._state.flags2Buf.setData(De,4*t,4)}setOffset(t,e){if(!this._finalized)throw"Not finalized";this.model.scene.entityOffsetsEnabled?(Re[0]=e[0],Re[1]=e[1],Re[2]=e[2],this._state.offsetsBuf.setData(Re,3*t,3)):this.model.error("Entity#offset not enabled for this Viewer")}drawColorOpaque(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._numTransparentLayerPortions!==this._numPortions&&this._numXRayedLayerPortions!==this._numPortions&&this._linesInstancingRenderers.colorRenderer&&this._linesInstancingRenderers.colorRenderer.drawLayer(e,this,f)}drawColorTransparent(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numTransparentLayerPortions&&this._numXRayedLayerPortions!==this._numPortions&&this._linesInstancingRenderers.colorRenderer&&this._linesInstancingRenderers.colorRenderer.drawLayer(e,this,_)}drawDepth(t,e){}drawNormals(t,e){}drawSilhouetteXRayed(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numXRayedLayerPortions&&this._linesInstancingRenderers.silhouetteRenderer&&this._linesInstancingRenderers.silhouetteRenderer.drawLayer(e,this,P)}drawSilhouetteHighlighted(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numHighlightedLayerPortions&&this._linesInstancingRenderers.silhouetteRenderer&&this._linesInstancingRenderers.silhouetteRenderer.drawLayer(e,this,g)}drawSilhouetteSelected(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numSelectedLayerPortions&&this._linesInstancingRenderers.silhouetteRenderer&&this._linesInstancingRenderers.silhouetteRenderer.drawLayer(e,this,m)}drawEdgesColorOpaque(t,e){}drawEdgesColorTransparent(t,e){}drawEdgesXRayed(t,e){}drawEdgesHighlighted(t,e){}drawEdgesSelected(t,e){}drawOcclusion(t,e){}drawShadow(t,e){}drawPickMesh(t,e){}drawPickDepths(t,e){}drawPickNormals(t,e){}destroy(){const t=this._state;t.positionsBuf&&(t.positionsBuf.destroy(),t.positionsBuf=null),t.colorsBuf&&(t.colorsBuf.destroy(),t.colorsBuf=null),t.flagsBuf&&(t.flagsBuf.destroy(),t.flagsBuf=null),t.flags2Buf&&(t.flags2Buf.destroy(),t.flags2Buf=null),t.offsetsBuf&&(t.offsetsBuf.destroy(),t.offsetsBuf=null),t.modelMatrixCol0Buf&&(t.modelMatrixCol0Buf.destroy(),t.modelMatrixCol0Buf=null),t.modelMatrixCol1Buf&&(t.modelMatrixCol1Buf.destroy(),t.modelMatrixCol1Buf=null),t.modelMatrixCol2Buf&&(t.modelMatrixCol2Buf.destroy(),t.modelMatrixCol2Buf=null),t.indicesBuf&&(t.indicesBuf.destroy(),t.indicessBuf=null),t.destroy()}}const Fe=r.a.vec3();class Te{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()+this._scene.pointsMaterial.hash}drawLayer(t,e,i){const s=this._scene,o=s.camera,r=e.model,a=s.canvas.gl,n=e._state,l=e._state.rtcCenter,h=s.pointsMaterial;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,l?Object(C.a)(o.viewMatrix,l):o.viewMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,r.worldMatrix);const u=s._sectionPlanesState.sectionPlanes.length;if(u>0){const t=s._sectionPlanesState.sectionPlanes,i=e.layerIndex*u,o=r.renderFlags;for(let e=0;e<u;e++){const s=this._uSectionPlanes[e],r=o.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,r?1:0),r){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,Fe);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aColor&&this._aColor.bindArrayBuffer(n.colorsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),a.uniform1f(this._uPointSize,h.pointSize);const c="ortho"===s.camera.projection?1:a.drawingBufferHeight/(2*Math.tan(.5*s.camera.perspective.fov*Math.PI/180));a.uniform1f(this._uNearPlaneHeight,c),a.drawArrays(a.POINTS,0,n.positionsBuf.numItems)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader(t)),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aColor=i.getAttribute("color"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),this._uPointSize=i.getLocation("pointSize"),this._uNearPlaneHeight=i.getLocation("nearPlaneHeight"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=this._program,s=t.camera.project;if(i.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,s.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(s.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=t.pointsMaterial,s=[];return s.push("// Points batching color vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("uniform int renderPass;"),s.push("attribute vec3 position;"),s.push("attribute vec4 color;"),s.push("attribute vec4 flags;"),s.push("attribute vec4 flags2;"),t.entityOffsetsEnabled&&s.push("attribute vec3 offset;"),s.push("uniform mat4 worldMatrix;"),s.push("uniform mat4 viewMatrix;"),s.push("uniform mat4 projMatrix;"),s.push("uniform mat4 positionsDecodeMatrix;"),s.push("uniform float pointSize;"),i.perspectivePoints&&s.push("uniform float nearPlaneHeight;"),t.logarithmicDepthBufferEnabled&&(s.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("varying float vFragDepth;")),e&&(s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;")),s.push("varying vec4 vColor;"),s.push("void main(void) {"),s.push("if (int(flags.x) != renderPass) {"),s.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),s.push("} else {"),s.push("vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&s.push("worldPosition.xyz = worldPosition.xyz + offset;"),s.push("vec4 viewPosition  = viewMatrix * worldPosition; "),s.push("vColor = vec4(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0, float(color.a) / 255.0);"),e&&(s.push("vWorldPosition = worldPosition;"),s.push("vFlags2 = flags2;")),s.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?s.push("vFragDepth = 1.0 + clipPos.w;"):(s.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),s.push("clipPos.z *= clipPos.w;"))),s.push("gl_Position = clipPos;"),i.perspectivePoints?(s.push("gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;"),s.push("gl_PointSize = max(gl_PointSize, "+Math.floor(i.minPerspectivePointSize)+".0);"),s.push("gl_PointSize = min(gl_PointSize, "+Math.floor(i.maxPerspectivePointSize)+".0);")):s.push("gl_PointSize = pointSize;"),s.push("}"),s.push("}"),s}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Points batching color fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vColor;"),s.push("void main(void) {"),t.pointsMaterial.roundPoints&&(s.push("  vec2 cxy = 2.0 * gl_PointCoord - 1.0;"),s.push("  float r = dot(cxy, cxy);"),s.push("  if (r > 1.0) {"),s.push("       discard;"),s.push("  }")),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("  if (dist > 0.0) { discard; }"),s.push("}")}return s.push("   gl_FragColor = vColor;"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Ie=new Float32Array([1,1,1]),Oe=r.a.vec3();class ze{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()+this._scene.pointsMaterial.hash}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=e._state.rtcCenter,h=o.pointsMaterial._state;if(!this._program&&(this._allocate(),this.errors))return;if(t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),i===P){const t=o.xrayMaterial._state,e=t.fillColor,i=t.fillAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===g){const t=o.highlightMaterial._state,e=t.fillColor,i=t.fillAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===m){const t=o.selectedMaterial._state,e=t.fillColor,i=t.fillAlpha;a.uniform4f(this._uColor,e[0],e[1],e[2],i)}else a.uniform4fv(this._uColor,Ie);const u=l?Object(C.a)(r.viewMatrix,l):r.viewMatrix;a.uniformMatrix4fv(this._uViewMatrix,!1,u),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const c=o._sectionPlanesState.sectionPlanes.length;if(c>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*c,r=s.renderFlags;for(let e=0;e<c;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,Oe);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),a.uniform1f(this._uPointSize,h.pointSize);const d="ortho"===o.camera.projection?1:a.drawingBufferHeight/(2*Math.tan(.5*o.camera.perspective.fov*Math.PI/180));a.uniform1f(this._uNearPlaneHeight,d),a.drawArrays(a.POINTS,0,n.positionsBuf.numItems)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uColor=i.getLocation("color"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),this._uPointSize=i.getLocation("pointSize"),this._uNearPlaneHeight=i.getLocation("nearPlaneHeight"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=t.pointsMaterial._state,s=[];return s.push("// Points batching silhouette vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("uniform int renderPass;"),s.push("attribute vec3 position;"),t.entityOffsetsEnabled&&s.push("attribute vec3 offset;"),s.push("attribute vec4 flags;"),s.push("attribute vec4 flags2;"),s.push("uniform mat4 worldMatrix;"),s.push("uniform mat4 viewMatrix;"),s.push("uniform mat4 projMatrix;"),s.push("uniform mat4 positionsDecodeMatrix;"),s.push("uniform vec4 color;"),s.push("uniform float pointSize;"),i.perspectivePoints&&s.push("uniform float nearPlaneHeight;"),t.logarithmicDepthBufferEnabled&&(s.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("varying float vFragDepth;")),e&&(s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;")),s.push("void main(void) {"),s.push("if (int(flags.y) != renderPass) {"),s.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),s.push("} else {"),s.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&s.push("      worldPosition.xyz = worldPosition.xyz + offset;"),s.push("vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(s.push("vWorldPosition = worldPosition;"),s.push("vFlags2 = flags2;")),s.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?s.push("vFragDepth = 1.0 + clipPos.w;"):(s.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),s.push("clipPos.z *= clipPos.w;"))),s.push("gl_Position = clipPos;"),i.perspectivePoints?(s.push("gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;"),s.push("gl_PointSize = max(gl_PointSize, "+Math.floor(i.minPerspectivePointSize)+".0);"),s.push("gl_PointSize = min(gl_PointSize, "+Math.floor(i.maxPerspectivePointSize)+".0);")):s.push("gl_PointSize = pointSize;"),s.push("}"),s.push("}"),s}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState;let i,s;const o=e.sectionPlanes.length>0,r=[];if(r.push("// Points batching silhouette vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("#extension GL_EXT_frag_depth : enable"),r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),r.push("precision highp float;"),r.push("precision highp int;"),r.push("#else"),r.push("precision mediump float;"),r.push("precision mediump int;"),r.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(r.push("uniform float logDepthBufFC;"),r.push("varying float vFragDepth;")),o)for(r.push("varying vec4 vWorldPosition;"),r.push("varying vec4 vFlags2;"),i=0,s=e.sectionPlanes.length;i<s;i++)r.push("uniform bool sectionPlaneActive"+i+";"),r.push("uniform vec3 sectionPlanePos"+i+";"),r.push("uniform vec3 sectionPlaneDir"+i+";");if(r.push("uniform vec4 color;"),r.push("void main(void) {"),t.pointsMaterial.roundPoints&&(r.push("  vec2 cxy = 2.0 * gl_PointCoord - 1.0;"),r.push("  float r = dot(cxy, cxy);"),r.push("  if (r > 1.0) {"),r.push("       discard;"),r.push("  }")),o){for(r.push("  bool clippable = (float(vFlags2.x) > 0.0);"),r.push("  if (clippable) {"),r.push("  float dist = 0.0;"),i=0,s=e.sectionPlanes.length;i<s;i++)r.push("if (sectionPlaneActive"+i+") {"),r.push("   dist += clamp(dot(-sectionPlaneDir"+i+".xyz, vWorldPosition.xyz - sectionPlanePos"+i+".xyz), 0.0, 1000.0);"),r.push("}");r.push("  if (dist > 0.0) { discard; }"),r.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),r.push("gl_FragColor = color;"),r.push("}"),r}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Ge=r.a.vec3();class Xe{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()+this._scene.pointsMaterial.hash}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=e._state.rtcCenter,h=o.pointsMaterial._state;this._program||this._allocate(e),t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t)),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const u=t.pickViewMatrix||r.viewMatrix,c=l?Object(C.a)(u,l):u;if(a.uniformMatrix4fv(this._uProjMatrix,!1,t.pickProjMatrix),a.uniformMatrix4fv(this._uViewMatrix,!1,c),o.logarithmicDepthBufferEnabled){const t=2/(Math.log(r.project.far+1)/Math.LN2);a.uniform1f(this._uLogDepthBufFC,t)}const d=o._sectionPlanesState.sectionPlanes.length;if(d>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*d,r=s.renderFlags;for(let e=0;e<d;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,Ge);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),this._aPickColor&&this._aPickColor.bindArrayBuffer(n.pickColorsBuf),a.uniform1f(this._uPointSize,h.pointSize);const p="ortho"===o.camera.projection?1:a.drawingBufferHeight/(2*Math.tan(.5*o.camera.perspective.fov*Math.PI/180));a.uniform1f(this._uNearPlaneHeight,p),a.drawArrays(a.POINTS,0,n.positionsBuf.numItems)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPickInvisible=i.getLocation("pickInvisible"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aPickColor=i.getAttribute("pickColor"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),this._uPointSize=i.getLocation("pointSize"),this._uNearPlaneHeight=i.getLocation("nearPlaneHeight"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(t){const e=this._scene.canvas.gl;this._program.bind(),e.uniform1i(this._uPickInvisible,t.pickInvisible)}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=t.pointsMaterial._state,s=[];return s.push("// Points batching pick mesh vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("uniform int renderPass;"),s.push("attribute vec3 position;"),t.entityOffsetsEnabled&&s.push("attribute vec3 offset;"),s.push("attribute vec4 flags;"),s.push("attribute vec4 flags2;"),s.push("attribute vec4 pickColor;"),s.push("uniform bool pickInvisible;"),s.push("uniform mat4 worldMatrix;"),s.push("uniform mat4 viewMatrix;"),s.push("uniform mat4 projMatrix;"),s.push("uniform mat4 positionsDecodeMatrix;"),s.push("uniform float pointSize;"),i.perspectivePoints&&s.push("uniform float nearPlaneHeight;"),t.logarithmicDepthBufferEnabled&&(s.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("varying float vFragDepth;")),e&&(s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;")),s.push("varying vec4 vPickColor;"),s.push("void main(void) {"),s.push("if (int(flags.w) != renderPass) {"),s.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),s.push("  } else {"),s.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&s.push("      worldPosition.xyz = worldPosition.xyz + offset;"),s.push("      vec4 viewPosition  = viewMatrix * worldPosition; "),s.push("      vPickColor = vec4(float(pickColor.r) / 255.0, float(pickColor.g) / 255.0, float(pickColor.b) / 255.0, float(pickColor.a) / 255.0);"),e&&(s.push("      vWorldPosition = worldPosition;"),s.push("      vFlags2 = flags2;")),s.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?s.push("vFragDepth = 1.0 + clipPos.w;"):(s.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),s.push("clipPos.z *= clipPos.w;"))),s.push("gl_Position = clipPos;"),i.perspectivePoints?(s.push("gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;"),s.push("gl_PointSize = max(gl_PointSize, "+Math.floor(i.minPerspectivePointSize)+".0);"),s.push("gl_PointSize = min(gl_PointSize, "+Math.floor(i.maxPerspectivePointSize)+".0);")):s.push("gl_PointSize = pointSize;"),s.push("gl_PointSize += 10.0;"),s.push("  }"),s.push("}"),s}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Points batching pick mesh vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(var o=0;o<e.sectionPlanes.length;o++)s.push("uniform bool sectionPlaneActive"+o+";"),s.push("uniform vec3 sectionPlanePos"+o+";"),s.push("uniform vec3 sectionPlaneDir"+o+";")}if(s.push("varying vec4 vPickColor;"),s.push("void main(void) {"),t.pointsMaterial.roundPoints&&(s.push("  vec2 cxy = 2.0 * gl_PointCoord - 1.0;"),s.push("  float r = dot(cxy, cxy);"),s.push("  if (r > 1.0) {"),s.push("       discard;"),s.push("  }")),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("      float dist = 0.0;");for(o=0;o<e.sectionPlanes.length;o++)s.push("      if (sectionPlaneActive"+o+") {"),s.push("          dist += clamp(dot(-sectionPlaneDir"+o+".xyz, vWorldPosition.xyz - sectionPlanePos"+o+".xyz), 0.0, 1000.0);"),s.push("      }");s.push("      if (dist > 0.0) { discard; }"),s.push("  }")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("   gl_FragColor = vPickColor; "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const ke=r.a.vec3();class Ue{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()+this._scene.pointsMaterial.hash}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=e._state.rtcCenter,h=o.pointsMaterial._state;this._program||this._allocate(),t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniform1i(this._uPickInvisible,t.pickInvisible);const u=t.pickViewMatrix||r.viewMatrix,c=l?Object(C.a)(u,l):u;if(a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.uniformMatrix4fv(this._uViewMatrix,!1,c),a.uniformMatrix4fv(this._uProjMatrix,!1,t.pickProjMatrix),a.uniform1f(this._uPickZNear,t.pickZNear),a.uniform1f(this._uPickZFar,t.pickZFar),o.logarithmicDepthBufferEnabled){const e=2/(Math.log(t.pickZFar+1)/Math.LN2);a.uniform1f(this._uLogDepthBufFC,e)}const d=o._sectionPlanesState.sectionPlanes.length;if(d>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*d,r=s.renderFlags;for(let e=0;e<d;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,ke);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(n.offsetsBuf),this._aFlags&&this._aFlags.bindArrayBuffer(n.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(n.flags2Buf),a.uniform1f(this._uPointSize,h.pointSize);const p="ortho"===o.camera.projection?1:a.drawingBufferHeight/(2*Math.tan(.5*o.camera.perspective.fov*Math.PI/180));a.uniform1f(this._uNearPlaneHeight,p),a.drawArrays(a.POINTS,0,n.positionsBuf.numItems)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPickInvisible=i.getLocation("pickInvisible"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),this._uPickZNear=i.getLocation("pickZNear"),this._uPickZFar=i.getLocation("pickZFar"),this._uPointSize=i.getLocation("pointSize"),this._uNearPlaneHeight=i.getLocation("nearPlaneHeight"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){this._program.bind()}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=t.pointsMaterial._state,s=[];return s.push("// Points batched pick depth vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("uniform int renderPass;"),s.push("attribute vec3 position;"),t.entityOffsetsEnabled&&s.push("attribute vec3 offset;"),s.push("attribute vec4 flags;"),s.push("attribute vec4 flags2;"),s.push("uniform bool pickInvisible;"),s.push("uniform mat4 worldMatrix;"),s.push("uniform mat4 viewMatrix;"),s.push("uniform mat4 projMatrix;"),s.push("uniform mat4 positionsDecodeMatrix;"),s.push("uniform float pointSize;"),i.perspectivePoints&&s.push("uniform float nearPlaneHeight;"),t.logarithmicDepthBufferEnabled&&(s.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("varying float vFragDepth;")),e&&(s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;")),s.push("varying vec4 vViewPosition;"),s.push("void main(void) {"),s.push("if (int(flags.w) != renderPass) {"),s.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),s.push("  } else {"),s.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&s.push("      worldPosition.xyz = worldPosition.xyz + offset;"),s.push("      vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(s.push("      vWorldPosition = worldPosition;"),s.push("      vFlags2 = flags2;")),s.push("vViewPosition = viewPosition;"),s.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?s.push("vFragDepth = 1.0 + clipPos.w;"):(s.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),s.push("clipPos.z *= clipPos.w;"))),s.push("gl_Position = clipPos;"),i.perspectivePoints?(s.push("gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;"),s.push("gl_PointSize = max(gl_PointSize, "+Math.floor(i.minPerspectivePointSize)+".0);"),s.push("gl_PointSize = min(gl_PointSize, "+Math.floor(i.maxPerspectivePointSize)+".0);")):s.push("gl_PointSize = pointSize;"),s.push("gl_PointSize += 10.0;"),s.push("  }"),s.push("}"),s}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Points batched pick depth fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),s.push("uniform float pickZNear;"),s.push("uniform float pickZFar;"),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vViewPosition;"),s.push("vec4 packDepth(const in float depth) {"),s.push("  const vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);"),s.push("  const vec4 bitMask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);"),s.push("  vec4 res = fract(depth * bitShift);"),s.push("  res -= res.xxyz * bitMask;"),s.push("  return res;"),s.push("}"),s.push("void main(void) {"),t.pointsMaterial.roundPoints&&(s.push("  vec2 cxy = 2.0 * gl_PointCoord - 1.0;"),s.push("  float r = dot(cxy, cxy);"),s.push("  if (r > 1.0) {"),s.push("       discard;"),s.push("  }")),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("      float dist = 0.0;");for(var o=0;o<e.sectionPlanes.length;o++)s.push("      if (sectionPlaneActive"+o+") {"),s.push("          dist += clamp(dot(-sectionPlaneDir"+o+".xyz, vWorldPosition.xyz - sectionPlanePos"+o+".xyz), 0.0, 1000.0);"),s.push("      }");s.push("      if (dist > 0.0) { discard; }"),s.push("  }")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("    float zNormalizedDepth = abs((pickZNear + vViewPosition.z) / (pickZFar - pickZNear));"),s.push("    gl_FragColor = packDepth(zNormalizedDepth); "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const Ve=r.a.vec3();class He{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()+this._scene.pointsMaterial.hash}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.canvas.gl,a=e._state,n=o.camera,l=e._state.rtcCenter,h=o.pointsMaterial._state;if(!this._program&&(this._allocate(e),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),r.uniform1i(this._uRenderPass,i),r.uniformMatrix4fv(this._uViewMatrix,!1,l?Object(C.a)(n.viewMatrix,l):n.viewMatrix),r.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const u=o._sectionPlanesState.sectionPlanes.length;if(u>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*u,a=s.renderFlags;for(let e=0;e<u;e++){const s=this._uSectionPlanes[e],o=a.sectionPlanesActivePerLayer[i+e];if(r.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,Ve);r.uniform3fv(s.pos,t)}else r.uniform3fv(s.pos,i.pos);r.uniform3fv(s.dir,i.dir)}}}r.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(a.positionsBuf),this._aOffset&&this._aOffset.bindArrayBuffer(a.offsetsBuf),this._aFlags.bindArrayBuffer(a.flagsBuf),this._aFlags2&&this._aFlags2.bindArrayBuffer(a.flags2Buf),r.uniform1f(this._uPointSize,h.pointSize);const c="ortho"===o.camera.projection?1:r.drawingBufferHeight/(2*Math.tan(.5*o.camera.perspective.fov*Math.PI/180));r.uniform1f(this._uNearPlaneHeight,c),r.drawArrays(r.POINTS,0,a.positionsBuf.numItems)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),this._uPointSize=i.getLocation("pointSize"),this._uNearPlaneHeight=i.getLocation("nearPlaneHeight"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=t.pointsMaterial._state,s=[];return s.push("// Points batching occlusion vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("uniform int renderPass;"),s.push("attribute vec3 position;"),t.entityOffsetsEnabled&&s.push("attribute vec3 offset;"),s.push("attribute vec4 flags;"),s.push("attribute vec4 flags2;"),s.push("uniform mat4 worldMatrix;"),s.push("uniform mat4 viewMatrix;"),s.push("uniform mat4 projMatrix;"),s.push("uniform mat4 positionsDecodeMatrix;"),s.push("uniform float pointSize;"),i.perspectivePoints&&s.push("uniform float nearPlaneHeight;"),t.logarithmicDepthBufferEnabled&&(s.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("varying float vFragDepth;")),e&&(s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;")),s.push("void main(void) {"),s.push("if (int(flags.x) != renderPass) {"),s.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),s.push("  } else {"),s.push("      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); "),t.entityOffsetsEnabled&&s.push("      worldPosition.xyz = worldPosition.xyz + offset;"),s.push("      vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(s.push("      vWorldPosition = worldPosition;"),s.push("      vFlags2 = flags2;")),s.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?s.push("vFragDepth = 1.0 + clipPos.w;"):(s.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),s.push("clipPos.z *= clipPos.w;"))),s.push("  gl_Position = clipPos;"),i.perspectivePoints?(s.push("gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;"),s.push("gl_PointSize = max(gl_PointSize, "+Math.floor(i.minPerspectivePointSize)+".0);"),s.push("gl_PointSize = min(gl_PointSize, "+Math.floor(i.maxPerspectivePointSize)+".0);")):s.push("gl_PointSize = pointSize;"),s.push("  }"),s.push("}"),s}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Points batching occlusion fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("void main(void) {"),t.pointsMaterial.roundPoints&&(s.push("  vec2 cxy = 2.0 * gl_PointCoord - 1.0;"),s.push("  float r = dot(cxy, cxy);"),s.push("  if (r > 1.0) {"),s.push("       discard;"),s.push("  }")),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("      float dist = 0.0;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("      if (sectionPlaneActive"+t+") {"),s.push("          dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("      }");s.push("      if (dist > 0.0) { discard; }"),s.push("  }")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("   gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}class je{constructor(t){this._scene=t}_compile(){this._colorRenderer&&!this._colorRenderer.getValid()&&(this._colorRenderer.destroy(),this._colorRenderer=null),this._silhouetteRenderer&&!this._silhouetteRenderer.getValid()&&(this._silhouetteRenderer.destroy(),this._silhouetteRenderer=null),this._pickMeshRenderer&&!this._pickMeshRenderer.getValid()&&(this._pickMeshRenderer.destroy(),this._pickMeshRenderer=null),this._pickDepthRenderer&&!this._pickDepthRenderer.getValid()&&(this._pickDepthRenderer.destroy(),this._pickDepthRenderer=null),this._occlusionRenderer&&!1===this._occlusionRenderer.getValid()&&(this._occlusionRenderer.destroy(),this._occlusionRenderer=null)}get colorRenderer(){return this._colorRenderer||(this._colorRenderer=new Te(this._scene)),this._colorRenderer}get silhouetteRenderer(){return this._silhouetteRenderer||(this._silhouetteRenderer=new ze(this._scene)),this._silhouetteRenderer}get pickMeshRenderer(){return this._pickMeshRenderer||(this._pickMeshRenderer=new Xe(this._scene)),this._pickMeshRenderer}get pickDepthRenderer(){return this._pickDepthRenderer||(this._pickDepthRenderer=new Ue(this._scene)),this._pickDepthRenderer}get occlusionRenderer(){return this._occlusionRenderer||(this._occlusionRenderer=new He(this._scene)),this._occlusionRenderer}_destroy(){this._colorRenderer&&this._colorRenderer.destroy(),this._silhouetteRenderer&&this._silhouetteRenderer.destroy(),this._pickMeshRenderer&&this._pickMeshRenderer.destroy(),this._pickDepthRenderer&&this._pickDepthRenderer.destroy(),this._occlusionRenderer&&this._occlusionRenderer.destroy()}}const We={};const Ye=n.a.SUPPORTED_EXTENSIONS.OES_element_index_uint;class Ze{constructor(t=5e6){Ye?t>5e6&&(t=5e6):t>65530&&(t=65530),this.maxVerts=t,this.maxIndices=3*t,this.positions=[],this.colors=[],this.pickColors=[],this.flags=[],this.flags2=[],this.offsets=[]}}const Qe=r.a.vec4(),qe=r.a.vec4(),Ke=r.a.vec4([0,0,0,1]),Je=r.a.vec4([0,0,0,1]),$e=r.a.vec4([0,0,0,1]),ti=r.a.OBB3();class ei{constructor(t,e){this.sortId="PointsBatchingLayer",this.layerIndex=e.layerIndex,this._pointsBatchingRenderers=function(t){const e=t.id;let i=We[e];return i||(i=new je(t),We[e]=i,i._compile(),t.on("compile",(()=>{i._compile()})),t.on("destroyed",(()=>{delete We[e],i._destroy()}))),i}(t.scene),this.model=t,this._buffer=new Ze(e.maxGeometryBatchSize),this._scratchMemory=e.scratchMemory,this._state=new A.a({positionsBuf:null,offsetsBuf:null,colorsBuf:null,flagsBuf:null,flags2Buf:null,positionsDecodeMatrix:r.a.mat4(),rtcCenter:null}),this._numPortions=0,this._numVisibleLayerPortions=0,this._numTransparentLayerPortions=0,this._numXRayedLayerPortions=0,this._numSelectedLayerPortions=0,this._numHighlightedLayerPortions=0,this._numClippableLayerPortions=0,this._numPickableLayerPortions=0,this._numCulledLayerPortions=0,this._modelAABB=r.a.collapseAABB3(),this._portions=[],this._finalized=!1,this._positionsDecodeMatrix=e.positionsDecodeMatrix,this._preCompressed=!!this._positionsDecodeMatrix,e.rtcCenter&&(this._state.rtcCenter=r.a.vec3(e.rtcCenter)),this.aabb=r.a.collapseAABB3()}canCreatePortion(t){if(this._finalized)throw"Already finalized";return this._buffer.positions.length+t<3*this._buffer.maxVerts}createPortion(t){if(this._finalized)throw"Already finalized";const e=t.positions,i=t.color,s=t.colors,o=t.opacity,a=t.meshMatrix,n=t.worldMatrix,l=t.worldAABB,h=t.pickColor,u=this._buffer,c=u.positions.length/3,d=e.length/3,p=e.length;if(this._preCompressed){for(let o=0,r=e.length;o<r;o++)u.positions.push(e[o]);const t=w.a.getPositionsBounds(e),i=w.a.decompressPosition(t.min,this._positionsDecodeMatrix,Qe),s=w.a.decompressPosition(t.max,this._positionsDecodeMatrix,qe);l[0]=i[0],l[1]=i[1],l[2]=i[2],l[3]=s[0],l[4]=s[1],l[5]=s[2],n&&(r.a.AABB3ToOBB3(l,ti),r.a.transformOBB3(n,ti),r.a.OBB3ToAABB3(ti,l))}else{const t=u.positions.length;for(let i=0,s=e.length;i<s;i++)u.positions.push(e[i]);if(a)for(let e=t,i=t+p;e<i;e+=3)Ke[0]=u.positions[e+0],Ke[1]=u.positions[e+1],Ke[2]=u.positions[e+2],r.a.transformPoint4(a,Ke,Je),u.positions[e+0]=Je[0],u.positions[e+1]=Je[1],u.positions[e+2]=Je[2],r.a.expandAABB3Point3(this._modelAABB,Je),n?(r.a.transformPoint4(n,Je,$e),r.a.expandAABB3Point3(l,$e)):r.a.expandAABB3Point3(l,Je);else for(let e=t,i=t+p;e<i;e+=3)Ke[0]=u.positions[e+0],Ke[1]=u.positions[e+1],Ke[2]=u.positions[e+2],r.a.expandAABB3Point3(this._modelAABB,Ke),n?(r.a.transformPoint4(n,Ke,Je),r.a.expandAABB3Point3(l,Je)):r.a.expandAABB3Point3(l,Ke)}if(this._state.rtcCenter){const t=this._state.rtcCenter;l[0]+=t[0],l[1]+=t[1],l[2]+=t[2],l[3]+=t[0],l[4]+=t[1],l[5]+=t[2]}if(r.a.expandAABB3(this.aabb,l),s)for(let r=0,_=s.length;r<_;r+=3)u.colors.push(255*s[r]),u.colors.push(255*s[r+1]),u.colors.push(255*s[r+2]),u.colors.push(255);else if(i){const t=i[0],e=i[1],s=i[2],r=o;for(let i=0;i<d;i++)u.colors.push(t),u.colors.push(e),u.colors.push(s),u.colors.push(r)}{const t=u.pickColors.length;for(let e=t,i=t+4*d;e<i;e+=4)u.pickColors.push(h[0]),u.pickColors.push(h[1]),u.pickColors.push(h[2]),u.pickColors.push(h[3])}if(this.model.scene.entityOffsetsEnabled)for(let r=0;r<d;r++)u.offsets.push(0),u.offsets.push(0),u.offsets.push(0);const f=this._portions.length/2;return this._portions.push(c),this._portions.push(d),this._numPortions++,this.model.numPortions++,f}finalize(){if(this._finalized)return void this.model.error("Already finalized");const t=this._state,e=this.model.scene.canvas.gl,i=this._buffer;if(i.positions.length>0)if(this._preCompressed){t.positionsDecodeMatrix=this._positionsDecodeMatrix;const s=new Uint16Array(i.positions);t.positionsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.positions.length,3,e.STATIC_DRAW)}else{const s=dt(new Float32Array(i.positions),this._modelAABB,t.positionsDecodeMatrix);t.positionsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.positions.length,3,e.STATIC_DRAW)}if(i.colors.length>0){const s=new Uint8Array(i.colors);let o=!1;t.colorsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.colors.length,4,e.DYNAMIC_DRAW,o)}if(i.colors.length>0){const s=i.colors.length,o=new Uint8Array(s),r=new Uint8Array(s);let a=!1,n=!0;t.flagsBuf=new L.a(e,e.ARRAY_BUFFER,o,o.length,4,e.DYNAMIC_DRAW,a),t.flags2Buf=new L.a(e,e.ARRAY_BUFFER,r,r.length,4,e.DYNAMIC_DRAW,n)}if(i.pickColors.length>0){const s=new Uint8Array(i.pickColors);let o=!1;t.pickColorsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.pickColors.length,4,e.STATIC_DRAW,o)}if(this.model.scene.entityOffsetsEnabled&&i.offsets.length>0){const s=new Float32Array(i.offsets);t.offsetsBuf=new L.a(e,e.ARRAY_BUFFER,s,i.offsets.length,3,e.DYNAMIC_DRAW)}this._buffer=null,this._finalized=!0}initFlags(t,e,i){e&d.a.VISIBLE&&(this._numVisibleLayerPortions++,this.model.numVisibleLayerPortions++),e&d.a.HIGHLIGHTED&&(this._numHighlightedLayerPortions++,this.model.numHighlightedLayerPortions++),e&d.a.XRAYED&&(this._numXRayedLayerPortions++,this.model.numXRayedLayerPortions++),e&d.a.SELECTED&&(this._numSelectedLayerPortions++,this.model.numSelectedLayerPortions++),e&d.a.CLIPPABLE&&(this._numClippableLayerPortions++,this.model.numClippableLayerPortions++),e&d.a.PICKABLE&&(this._numPickableLayerPortions++,this.model.numPickableLayerPortions++),e&d.a.CULLED&&(this._numCulledLayerPortions++,this.model.numCulledLayerPortions++),i&&(this._numTransparentLayerPortions++,this.model.numTransparentLayerPortions++),this._setFlags(t,e,i),this._setFlags2(t,e)}setVisible(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.VISIBLE?(this._numVisibleLayerPortions++,this.model.numVisibleLayerPortions++):(this._numVisibleLayerPortions--,this.model.numVisibleLayerPortions--),this._setFlags(t,e,i)}setHighlighted(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.HIGHLIGHTED?(this._numHighlightedLayerPortions++,this.model.numHighlightedLayerPortions++):(this._numHighlightedLayerPortions--,this.model.numHighlightedLayerPortions--),this._setFlags(t,e,i)}setXRayed(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.XRAYED?(this._numXRayedLayerPortions++,this.model.numXRayedLayerPortions++):(this._numXRayedLayerPortions--,this.model.numXRayedLayerPortions--),this._setFlags(t,e,i)}setSelected(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.SELECTED?(this._numSelectedLayerPortions++,this.model.numSelectedLayerPortions++):(this._numSelectedLayerPortions--,this.model.numSelectedLayerPortions--),this._setFlags(t,e,i)}setEdges(t,e,i){if(!this._finalized)throw"Not finalized"}setClippable(t,e){if(!this._finalized)throw"Not finalized";e&d.a.CLIPPABLE?(this._numClippableLayerPortions++,this.model.numClippableLayerPortions++):(this._numClippableLayerPortions--,this.model.numClippableLayerPortions--),this._setFlags2(t,e)}setCulled(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.CULLED?(this._numCulledLayerPortions++,this.model.numCulledLayerPortions++):(this._numCulledLayerPortions--,this.model.numCulledLayerPortions--),this._setFlags(t,e,i)}setCollidable(t,e){if(!this._finalized)throw"Not finalized"}setPickable(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.PICKABLE?(this._numPickableLayerPortions++,this.model.numPickableLayerPortions++):(this._numPickableLayerPortions--,this.model.numPickableLayerPortions--),this._setFlags(t,e,i)}setColor(t,e){if(!this._finalized)throw"Not finalized";const i=2*t,s=4*this._portions[i],o=4*this._portions[i+1],r=this._scratchMemory.getUInt8Array(o),a=e[0],n=e[1],l=e[2],h=e[3];for(let u=0;u<o;u+=4)r[u+0]=a,r[u+1]=n,r[u+2]=l,r[u+3]=h;this._state.colorsBuf.setData(r,s,o)}setTransparent(t,e,i){i?(this._numTransparentLayerPortions++,this.model.numTransparentLayerPortions++):(this._numTransparentLayerPortions--,this.model.numTransparentLayerPortions--),this._setFlags(t,e,i)}_setFlags(t,e,i){if(!this._finalized)throw"Not finalized";const s=2*t,o=4*this._portions[s],r=4*this._portions[s+1],a=this._scratchMemory.getUInt8Array(r),n=!!(e&d.a.VISIBLE),l=!!(e&d.a.XRAYED),h=!!(e&d.a.HIGHLIGHTED),u=!!(e&d.a.SELECTED),c=!!(e&d.a.PICKABLE),v=!!(e&d.a.CULLED);let x,b;x=!n||v||l?p:i?_:f,b=!n||v?p:u?m:h?g:l?P:p;let y=n&&!v&&c?E:p;for(let d=0;d<r;d+=4)a[d+0]=x,a[d+1]=b,a[d+2]=0,a[d+3]=y;this._state.flagsBuf.setData(a,o,r)}_setFlags2(t,e){if(!this._finalized)throw"Not finalized";const i=2*t,s=4*this._portions[i],o=4*this._portions[i+1],r=this._scratchMemory.getUInt8Array(o),a=e&d.a.CLIPPABLE?255:0;for(let n=0;n<o;n+=4)r[n+0]=a;this._state.flags2Buf.setData(r,s,o)}setOffset(t,e){if(!this._finalized)throw"Not finalized";if(!this.model.scene.entityOffsetsEnabled)return void this.model.error("Entity#offset not enabled for this Viewer");const i=2*t,s=3*this._portions[i],o=3*this._portions[i+1],r=this._scratchMemory.getFloat32Array(o),a=e[0],n=e[1],l=e[2];for(let h=0;h<o;h+=3)r[h+0]=a,r[h+1]=n,r[h+2]=l;this._state.offsetsBuf.setData(r,s,o)}drawColorOpaque(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._numTransparentLayerPortions!==this._numPortions&&this._numXRayedLayerPortions!==this._numPortions&&this._pointsBatchingRenderers.colorRenderer&&this._pointsBatchingRenderers.colorRenderer.drawLayer(e,this,f)}drawColorTransparent(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numTransparentLayerPortions&&this._numXRayedLayerPortions!==this._numPortions&&this._pointsBatchingRenderers.colorRenderer&&this._pointsBatchingRenderers.colorRenderer.drawLayer(e,this,_)}drawDepth(t,e){}drawNormals(t,e){}drawSilhouetteXRayed(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numXRayedLayerPortions&&this._pointsBatchingRenderers.silhouetteRenderer&&this._pointsBatchingRenderers.silhouetteRenderer.drawLayer(e,this,P)}drawSilhouetteHighlighted(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numHighlightedLayerPortions&&this._pointsBatchingRenderers.silhouetteRenderer&&this._pointsBatchingRenderers.silhouetteRenderer.drawLayer(e,this,g)}drawSilhouetteSelected(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numSelectedLayerPortions&&this._pointsBatchingRenderers.silhouetteRenderer&&this._pointsBatchingRenderers.silhouetteRenderer.drawLayer(e,this,m)}drawEdgesColorOpaque(t,e){}drawEdgesColorTransparent(t,e){}drawEdgesHighlighted(t,e){}drawEdgesSelected(t,e){}drawEdgesXRayed(t,e){}drawPickMesh(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._pointsBatchingRenderers.pickMeshRenderer&&this._pointsBatchingRenderers.pickMeshRenderer.drawLayer(e,this,E)}drawPickDepths(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._pointsBatchingRenderers.pickDepthRenderer&&this._pointsBatchingRenderers.pickDepthRenderer.drawLayer(e,this,E)}drawPickNormals(t,e){}drawOcclusion(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._pointsBatchingRenderers.occlusionRenderer&&this._pointsBatchingRenderers.occlusionRenderer.drawLayer(e,this,f)}drawShadow(t,e){}destroy(){const t=this._state;t.positionsBuf&&(t.positionsBuf.destroy(),t.positionsBuf=null),t.offsetsBuf&&(t.offsetsBuf.destroy(),t.offsetsBuf=null),t.colorsBuf&&(t.colorsBuf.destroy(),t.colorsBuf=null),t.flagsBuf&&(t.flagsBuf.destroy(),t.flagsBuf=null),t.flags2Buf&&(t.flags2Buf.destroy(),t.flags2Buf=null),t.pickColorsBuf&&(t.pickColorsBuf.destroy(),t.pickColorsBuf=null),t.destroy()}}const ii=r.a.vec3();class si{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()+this._scene.pointsMaterial.hash}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter,u=o.pointsMaterial._state;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t)),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,h?Object(C.a)(r.viewMatrix,h):r.viewMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aColor.bindArrayBuffer(n.colorsBuf);const c=o._sectionPlanesState.sectionPlanes.length;if(c>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*c,r=s.renderFlags;for(let e=0;e<c;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,ii);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aFlags.bindArrayBuffer(n.flagsBuf),l.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),a.uniform1f(this._uPointSize,u.pointSize);const d="ortho"===o.camera.projection?1:a.drawingBufferHeight/(2*Math.tan(.5*o.camera.perspective.fov*Math.PI/180));a.uniform1f(this._uNearPlaneHeight,d),l.drawArraysInstancedANGLE(a.POINTS,0,n.positionsBuf.numItems/3,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aColor=i.getAttribute("color"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),this._aOffset=i.getAttribute("offset"),this._aModelMatrixCol0=i.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=i.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=i.getAttribute("modelMatrixCol2"),this._uOcclusionTexture="uOcclusionTexture",this._uPointSize=i.getLocation("pointSize"),this._uNearPlaneHeight=i.getLocation("nearPlaneHeight"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(t){const e=this._scene,i=e.canvas.gl,s=e.camera.project;if(this._program.bind(),i.uniformMatrix4fv(this._uProjMatrix,!1,s.matrix),e.logarithmicDepthBufferEnabled){const t=2/(Math.log(s.far+1)/Math.LN2);i.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=t.pointsMaterial._state,s=[];return s.push("// Points instancing color vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("uniform int renderPass;"),s.push("attribute vec3 position;"),s.push("attribute vec4 color;"),s.push("attribute vec4 flags;"),s.push("attribute vec4 flags2;"),t.entityOffsetsEnabled&&s.push("attribute vec3 offset;"),s.push("attribute vec4 modelMatrixCol0;"),s.push("attribute vec4 modelMatrixCol1;"),s.push("attribute vec4 modelMatrixCol2;"),s.push("uniform mat4 worldMatrix;"),s.push("uniform mat4 viewMatrix;"),s.push("uniform mat4 projMatrix;"),s.push("uniform mat4 positionsDecodeMatrix;"),s.push("uniform float pointSize;"),i.perspectivePoints&&s.push("uniform float nearPlaneHeight;"),t.logarithmicDepthBufferEnabled&&(s.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("varying float vFragDepth;")),e&&(s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;")),s.push("varying vec4 vColor;"),s.push("void main(void) {"),s.push("if (int(flags.x) != renderPass) {"),s.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),s.push("} else {"),s.push("vec4 worldPosition =  positionsDecodeMatrix * vec4(position, 1.0); "),s.push("worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&s.push("      worldPosition.xyz = worldPosition.xyz + offset;"),s.push("vec4 viewPosition  = viewMatrix * worldPosition; "),s.push("vColor = vec4(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0, float(color.a) / 255.0);"),e&&(s.push("vWorldPosition = worldPosition;"),s.push("vFlags2 = flags2;")),s.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?s.push("vFragDepth = 1.0 + clipPos.w;"):(s.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),s.push("clipPos.z *= clipPos.w;"))),s.push("gl_Position = clipPos;"),i.perspectivePoints?(s.push("gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;"),s.push("gl_PointSize = max(gl_PointSize, "+Math.floor(i.minPerspectivePointSize)+".0);"),s.push("gl_PointSize = min(gl_PointSize, "+Math.floor(i.maxPerspectivePointSize)+".0);")):s.push("gl_PointSize = pointSize;"),s.push("}"),s.push("}"),s}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Points instancing color fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vColor;"),s.push("void main(void) {"),t.pointsMaterial.roundPoints&&(s.push("  vec2 cxy = 2.0 * gl_PointCoord - 1.0;"),s.push("  float r = dot(cxy, cxy);"),s.push("  if (r > 1.0) {"),s.push("       discard;"),s.push("  }")),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return s.push("   gl_FragColor = vColor;"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const oi=r.a.vec3();class ri{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()+this._scene.pointsMaterial.hash}drawLayer(t,e,i){const s=e.model,o=s.scene,a=o.camera,n=o.canvas.gl,l=e._state,h=this._instanceExt,u=e._state.rtcCenter,c=o.pointsMaterial._state;if(!this._program&&(this._allocate(e.model.scene),this.errors))return;if(t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),n.uniform1i(this._uRenderPass,i),i===P){const t=o.xrayMaterial._state,e=t.fillColor,i=t.fillAlpha;n.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===g){const t=o.highlightMaterial._state,e=t.fillColor,i=t.fillAlpha;n.uniform4f(this._uColor,e[0],e[1],e[2],i)}else if(i===m){const t=o.selectedMaterial._state,e=t.fillColor,i=t.fillAlpha;n.uniform4f(this._uColor,e[0],e[1],e[2],i)}else n.uniform4fv(this._uColor,r.a.vec3([1,1,1]));n.uniformMatrix4fv(this._uViewMatrix,!1,u?Object(C.a)(a.viewMatrix,u):a.viewMatrix),n.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const d=o._sectionPlanesState.sectionPlanes.length;if(d>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*d,r=s.renderFlags;for(let e=0;e<d;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(n.uniform1i(s.active,o?1:0),o){const i=t[e];if(u){const t=Object(C.b)(i.dist,i.dir,u,oi);n.uniform3fv(s.pos,t)}else n.uniform3fv(s.pos,i.pos);n.uniform3fv(s.dir,i.dir)}}}n.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(l.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(l.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(l.modelMatrixCol2Buf),h.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),h.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),h.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPosition.bindArrayBuffer(l.positionsBuf),this._aFlags.bindArrayBuffer(l.flagsBuf,n.UNSIGNED_BYTE,!0),h.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(l.flags2Buf,n.UNSIGNED_BYTE,!0),h.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(l.offsetsBuf),h.vertexAttribDivisorANGLE(this._aOffset.location,1)),n.uniform1f(this._uPointSize,c.pointSize);const p="ortho"===o.camera.projection?1:n.drawingBufferHeight/(2*Math.tan(.5*o.camera.perspective.fov*Math.PI/180));n.uniform1f(this._uNearPlaneHeight,p),h.drawArraysInstancedANGLE(n.POINTS,0,l.positionsBuf.numItems,l.numInstances),h.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),h.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),h.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),h.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&h.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&h.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uColor=s.getLocation("color"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),this._uPointSize=s.getLocation("pointSize"),this._uNearPlaneHeight=s.getLocation("nearPlaneHeight"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=t.pointsMaterial._state,s=[];return s.push("// Points instancing silhouette vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("uniform int renderPass;"),s.push("attribute vec3 position;"),t.entityOffsetsEnabled&&s.push("attribute vec3 offset;"),s.push("attribute vec4 flags;"),s.push("attribute vec4 flags2;"),s.push("attribute vec4 modelMatrixCol0;"),s.push("attribute vec4 modelMatrixCol1;"),s.push("attribute vec4 modelMatrixCol2;"),s.push("uniform mat4 worldMatrix;"),s.push("uniform mat4 viewMatrix;"),s.push("uniform mat4 projMatrix;"),s.push("uniform mat4 positionsDecodeMatrix;"),s.push("uniform float pointSize;"),i.perspectivePoints&&s.push("uniform float nearPlaneHeight;"),t.logarithmicDepthBufferEnabled&&(s.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("varying float vFragDepth;")),s.push("uniform vec4 color;"),e&&(s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;")),s.push("void main(void) {"),s.push("if (int(flags.y) != renderPass) {"),s.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),s.push("} else {"),s.push("vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),s.push("worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&s.push("      worldPosition.xyz = worldPosition.xyz + offset;"),s.push("vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(s.push("vWorldPosition = worldPosition;"),s.push("vFlags2 = flags2;")),s.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?s.push("vFragDepth = 1.0 + clipPos.w;"):(s.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),s.push("clipPos.z *= clipPos.w;"))),s.push("gl_Position = clipPos;"),i.perspectivePoints?(s.push("gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;"),s.push("gl_PointSize = max(gl_PointSize, "+Math.floor(i.minPerspectivePointSize)+".0);"),s.push("gl_PointSize = min(gl_PointSize, "+Math.floor(i.maxPerspectivePointSize)+".0);")):s.push("gl_PointSize = pointSize;"),s.push("}"),s.push("}"),s}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Points instancing silhouette fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("uniform vec4 color;"),s.push("void main(void) {"),t.pointsMaterial.roundPoints&&(s.push("  vec2 cxy = 2.0 * gl_PointCoord - 1.0;"),s.push("  float r = dot(cxy, cxy);"),s.push("  if (r > 1.0) {"),s.push("       discard;"),s.push("  }")),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("gl_FragColor = color;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const ai=r.a.vec3();class ni{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()+this._scene.pointsMaterial.hash}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter,u=o.pointsMaterial._state;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t)),a.uniform1i(this._uRenderPass,i);const c=t.pickViewMatrix||r.viewMatrix,d=h?Object(C.a)(c,h):c;if(a.uniformMatrix4fv(this._uViewMatrix,!1,d),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.uniformMatrix4fv(this._uProjMatrix,!1,t.pickProjMatrix),o.logarithmicDepthBufferEnabled){const t=2/(Math.log(r.project.far+1)/Math.LN2);a.uniform1f(this._uLogDepthBufFC,t)}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPickColor.bindArrayBuffer(n.pickColorsBuf),l.vertexAttribDivisorANGLE(this._aPickColor.location,1),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aFlags.bindArrayBuffer(n.flagsBuf),l.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),a.uniform1f(this._uPointSize,u.pointSize);const p="ortho"===o.camera.projection?1:a.drawingBufferHeight/(2*Math.tan(.5*o.camera.perspective.fov*Math.PI/180));a.uniform1f(this._uNearPlaneHeight,p);const f=o._sectionPlanesState.sectionPlanes.length;if(f>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*f,r=s.renderFlags;for(let e=0;e<f;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,ai);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}l.drawArraysInstancedANGLE(a.POINTS,0,n.positionsBuf.numItems,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aPickColor.location,0),l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uPickInvisible=s.getLocation("pickInvisible"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._uRenderPass=s.getLocation("renderPass"),this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aPickColor=s.getAttribute("pickColor"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),this._uPointSize=s.getLocation("pointSize"),this._uNearPlaneHeight=s.getLocation("nearPlaneHeight"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(t){const e=this._scene.canvas.gl;this._program.bind(),e.uniform1i(this._uPickInvisible,t.pickInvisible)}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=t.pointsMaterial._state,s=[];return s.push("// Points instancing pick mesh vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("uniform int renderPass;"),s.push("attribute vec3 position;"),t.entityOffsetsEnabled&&s.push("attribute vec3 offset;"),s.push("attribute vec4 flags;"),s.push("attribute vec4 flags2;"),s.push("attribute vec4 pickColor;"),s.push("attribute vec4 modelMatrixCol0;"),s.push("attribute vec4 modelMatrixCol1;"),s.push("attribute vec4 modelMatrixCol2;"),s.push("uniform bool pickInvisible;"),s.push("uniform mat4 worldMatrix;"),s.push("uniform mat4 viewMatrix;"),s.push("uniform mat4 projMatrix;"),s.push("uniform mat4 positionsDecodeMatrix;"),s.push("uniform float pointSize;"),i.perspectivePoints&&s.push("uniform float nearPlaneHeight;"),t.logarithmicDepthBufferEnabled&&(s.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("varying float vFragDepth;")),e&&(s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;")),s.push("varying vec4 vPickColor;"),s.push("void main(void) {"),s.push("if (int(flags.w) != renderPass) {"),s.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),s.push("} else {"),s.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),s.push("  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&s.push("      worldPosition.xyz = worldPosition.xyz + offset;"),s.push("  vec4 viewPosition  = viewMatrix * worldPosition; "),s.push("  vPickColor = vec4(float(pickColor.r) / 255.0, float(pickColor.g) / 255.0, float(pickColor.b) / 255.0, float(pickColor.a) / 255.0);"),e&&(s.push("  vWorldPosition = worldPosition;"),s.push("  vFlags2 = flags2;")),s.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?s.push("vFragDepth = 1.0 + clipPos.w;"):(s.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),s.push("clipPos.z *= clipPos.w;"))),i.perspectivePoints?(s.push("gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;"),s.push("gl_PointSize = max(gl_PointSize, "+Math.floor(i.minPerspectivePointSize)+".0);"),s.push("gl_PointSize = min(gl_PointSize, "+Math.floor(i.maxPerspectivePointSize)+".0);")):s.push("gl_PointSize = pointSize;"),s.push("}"),s.push("}"),s}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Points instancing pick mesh fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vPickColor;"),s.push("void main(void) {"),t.pointsMaterial.roundPoints&&(s.push("  vec2 cxy = 2.0 * gl_PointCoord - 1.0;"),s.push("  float r = dot(cxy, cxy);"),s.push("  if (r > 1.0) {"),s.push("       discard;"),s.push("  }")),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("gl_FragColor = vPickColor; "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const li=r.a.vec3();class hi{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()+this._scene.pointsMaterial.hash}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.canvas.gl,a=e._state,n=this._instanceExt,l=e._state.rtcCenter,h=o.pointsMaterial._state;if(!this._program&&(this._allocate(e),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram());const u=o.camera;r.uniform1i(this._uRenderPass,i),r.uniform1i(this._uPickInvisible,t.pickInvisible);const c=t.pickViewMatrix||u.viewMatrix,d=l?Object(C.a)(c,l):c;if(r.uniformMatrix4fv(this._uViewMatrix,!1,d),r.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),r.uniformMatrix4fv(this._uProjMatrix,!1,t.pickProjMatrix),r.uniform1f(this._uPickZNear,t.pickZNear),r.uniform1f(this._uPickZFar,t.pickZFar),o.logarithmicDepthBufferEnabled){const e=2/(Math.log(t.pickZFar+1)/Math.LN2);r.uniform1f(this._uLogDepthBufFC,e)}const p=o._sectionPlanesState.sectionPlanes.length;if(p>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*p,a=s.renderFlags;for(let e=0;e<p;e++){const s=this._uSectionPlanes[e],o=a.sectionPlanesActivePerLayer[i+e];if(r.uniform1i(s.active,o?1:0),o){const i=t[e];if(l){const t=Object(C.b)(i.dist,i.dir,l,li);r.uniform3fv(s.pos,t)}else r.uniform3fv(s.pos,i.pos);r.uniform3fv(s.dir,i.dir)}}}r.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(a.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(a.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(a.modelMatrixCol2Buf),n.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),n.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),n.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPosition.bindArrayBuffer(a.positionsBuf),this._aFlags.bindArrayBuffer(a.flagsBuf),n.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(a.flags2Buf),n.vertexAttribDivisorANGLE(this._aFlags2.location,1)),this._aOffset&&(this._aOffset.bindArrayBuffer(a.offsetsBuf),n.vertexAttribDivisorANGLE(this._aOffset.location,1)),r.uniform1f(this._uPointSize,h.pointSize);const f="ortho"===o.camera.projection?1:r.drawingBufferHeight/(2*Math.tan(.5*o.camera.perspective.fov*Math.PI/180));r.uniform1f(this._uNearPlaneHeight,f),n.drawArraysInstancedANGLE(r.POINTS,0,a.positionsBuf.numItems,a.numInstances),n.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),n.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),n.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),n.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&n.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&n.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPickInvisible=i.getLocation("pickInvisible"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),this._aModelMatrixCol0=i.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=i.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=i.getAttribute("modelMatrixCol2"),this._uPickZNear=i.getLocation("pickZNear"),this._uPickZFar=i.getLocation("pickZFar"),this._uPointSize=i.getLocation("pointSize"),this._uNearPlaneHeight=i.getLocation("nearPlaneHeight"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){this._program.bind()}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=t.pointsMaterial._state,s=[];return s.push("// Points instancing pick depth vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("uniform int renderPass;"),s.push("attribute vec3 position;"),t.entityOffsetsEnabled&&s.push("attribute vec3 offset;"),s.push("attribute vec4 flags;"),s.push("attribute vec4 flags2;"),s.push("attribute vec4 modelMatrixCol0;"),s.push("attribute vec4 modelMatrixCol1;"),s.push("attribute vec4 modelMatrixCol2;"),s.push("uniform bool pickInvisible;"),s.push("uniform mat4 worldMatrix;"),s.push("uniform mat4 viewMatrix;"),s.push("uniform mat4 projMatrix;"),s.push("uniform mat4 positionsDecodeMatrix;"),s.push("uniform float pointSize;"),i.perspectivePoints&&s.push("uniform float nearPlaneHeight;"),t.logarithmicDepthBufferEnabled&&(s.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("varying float vFragDepth;")),e&&(s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;")),s.push("varying vec4 vViewPosition;"),s.push("void main(void) {"),s.push("if (int(flags.w) != renderPass) {"),s.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),s.push("} else {"),s.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),s.push("  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&s.push("      worldPosition.xyz = worldPosition.xyz + offset;"),s.push("  vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(s.push("  vWorldPosition = worldPosition;"),s.push("  vFlags2 = flags2;")),s.push("  vViewPosition = viewPosition;"),s.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?s.push("vFragDepth = 1.0 + clipPos.w;"):(s.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),s.push("clipPos.z *= clipPos.w;"))),s.push("gl_Position = clipPos;"),i.perspectivePoints?(s.push("gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;"),s.push("gl_PointSize = max(gl_PointSize, "+Math.floor(i.minPerspectivePointSize)+".0);"),s.push("gl_PointSize = min(gl_PointSize, "+Math.floor(i.maxPerspectivePointSize)+".0);")):s.push("gl_PointSize = pointSize;"),s.push("}"),s.push("}"),s}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Points instancing pick depth fragment shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),s.push("uniform float pickZNear;"),s.push("uniform float pickZFar;"),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec4 vViewPosition;"),s.push("vec4 packDepth(const in float depth) {"),s.push("  const vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);"),s.push("  const vec4 bitMask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);"),s.push("  vec4 res = fract(depth * bitShift);"),s.push("  res -= res.xxyz * bitMask;"),s.push("  return res;"),s.push("}"),s.push("void main(void) {"),t.pointsMaterial.roundPoints&&(s.push("  vec2 cxy = 2.0 * gl_PointCoord - 1.0;"),s.push("  float r = dot(cxy, cxy);"),s.push("  if (r > 1.0) {"),s.push("       discard;"),s.push("  }")),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("    float zNormalizedDepth = abs((pickZNear + vViewPosition.z) / (pickZFar - pickZNear));"),s.push("    gl_FragColor = packDepth(zNormalizedDepth); "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const ui=r.a.vec3();class ci{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()+this._scene.pointsMaterial.hash}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter,u=o.pointsMaterial._state;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uViewMatrix,!1,h?Object(C.a)(r.viewMatrix,h):r.viewMatrix),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix);const c=o._sectionPlanesState.sectionPlanes.length;if(c>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*c,r=s.renderFlags;for(let e=0;e<c;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,ui);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aColor&&(this._aColor.bindArrayBuffer(n.colorsBuf),l.vertexAttribDivisorANGLE(this._aColor.location,1)),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),this._aFlags.bindArrayBuffer(n.flagsBuf),l.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),a.uniform1f(this._uPointSize,u.pointSize);const d="ortho"===o.camera.projection?1:a.drawingBufferHeight/(2*Math.tan(.5*o.camera.perspective.fov*Math.PI/180));a.uniform1f(this._uNearPlaneHeight,d),l.drawArraysInstancedANGLE(a.POINTS,0,n.positionsBuf.numItems,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),this._aColor&&l.vertexAttribDivisorANGLE(this._aColor.location,0),l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uRenderPass=s.getLocation("renderPass"),this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=s.getLocation("worldMatrix"),this._uViewMatrix=s.getLocation("viewMatrix"),this._uProjMatrix=s.getLocation("projMatrix"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aColor=s.getAttribute("color"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),this._uPointSize=s.getLocation("pointSize"),this._uNearPlaneHeight=s.getLocation("nearPlaneHeight"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=s.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=t.pointsMaterial._state,s=[];return s.push("// Points instancing occlusion vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("uniform int renderPass;"),s.push("attribute vec3 position;"),t.entityOffsetsEnabled&&s.push("attribute vec3 offset;"),s.push("attribute vec4 color;"),s.push("attribute vec4 flags;"),s.push("attribute vec4 flags2;"),s.push("attribute vec4 modelMatrixCol0;"),s.push("attribute vec4 modelMatrixCol1;"),s.push("attribute vec4 modelMatrixCol2;"),s.push("uniform mat4 worldMatrix;"),s.push("uniform mat4 viewMatrix;"),s.push("uniform mat4 projMatrix;"),s.push("uniform mat4 positionsDecodeMatrix;"),s.push("uniform float pointSize;"),i.perspectivePoints&&s.push("uniform float nearPlaneHeight;"),t.logarithmicDepthBufferEnabled&&(s.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("varying float vFragDepth;")),e&&(s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;")),s.push("void main(void) {"),s.push("if (int(flags.x) != renderPass) {"),s.push("      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),s.push("} else {"),s.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),s.push("  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&s.push("      worldPosition.xyz = worldPosition.xyz + offset;"),s.push("  vec4 viewPosition  = viewMatrix * worldPosition; "),e&&s.push("  vWorldPosition = worldPosition;"),s.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?s.push("vFragDepth = 1.0 + clipPos.w;"):(s.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),s.push("clipPos.z *= clipPos.w;"))),s.push("gl_Position = clipPos;"),i.perspectivePoints?(s.push("gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;"),s.push("gl_PointSize = max(gl_PointSize, "+Math.floor(i.minPerspectivePointSize)+".0);"),s.push("gl_PointSize = min(gl_PointSize, "+Math.floor(i.maxPerspectivePointSize)+".0);")):s.push("gl_PointSize = pointSize;"),s.push("}"),s.push("}"),s}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Points instancing occlusion vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("void main(void) {"),t.pointsMaterial.roundPoints&&(s.push("  vec2 cxy = 2.0 * gl_PointCoord - 1.0;"),s.push("  float r = dot(cxy, cxy);"),s.push("  if (r > 1.0) {"),s.push("       discard;"),s.push("  }")),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0;t<e.sectionPlanes.length;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return s.push("   gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); "),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const di=r.a.vec3();class pi{constructor(t){this._scene=t,this._hash=this._getHash(),this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()+this._scene.pointsMaterial.hash}drawLayer(t,e,i){const s=e.model,o=s.scene,r=o.camera,a=o.canvas.gl,n=e._state,l=this._instanceExt,h=e._state.rtcCenter,u=o.pointsMaterial._state;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram()),a.uniform1i(this._uRenderPass,i),a.uniformMatrix4fv(this._uWorldMatrix,!1,s.worldMatrix),a.uniformMatrix4fv(this._uViewMatrix,!1,h?Object(C.a)(r.viewMatrix,h):r.viewMatrix);const c=o._sectionPlanesState.sectionPlanes.length;if(c>0){const t=o._sectionPlanesState.sectionPlanes,i=e.layerIndex*c,r=s.renderFlags;for(let e=0;e<c;e++){const s=this._uSectionPlanes[e],o=r.sectionPlanesActivePerLayer[i+e];if(a.uniform1i(s.active,o?1:0),o){const i=t[e];if(h){const t=Object(C.b)(i.dist,i.dir,h,di);a.uniform3fv(s.pos,t)}else a.uniform3fv(s.pos,i.pos);a.uniform3fv(s.dir,i.dir)}}}this._aModelMatrixCol0.bindArrayBuffer(n.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(n.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(n.modelMatrixCol2Buf),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),a.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aPosition.bindArrayBuffer(n.positionsBuf),this._aOffset&&(this._aOffset.bindArrayBuffer(n.offsetsBuf),l.vertexAttribDivisorANGLE(this._aOffset.location,1)),this._aFlags.bindArrayBuffer(n.flagsBuf),l.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(n.flags2Buf),l.vertexAttribDivisorANGLE(this._aFlags2.location,1)),a.uniform1f(this._uPointSize,u.pointSize);const d="ortho"===o.camera.projection?1:a.drawingBufferHeight/(2*Math.tan(.5*o.camera.perspective.fov*Math.PI/180));a.uniform1f(this._uNearPlaneHeight,d),l.drawArraysInstancedANGLE(a.POINTS,0,n.positionsBuf.numItems,n.numInstances),l.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),l.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),l.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&l.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&l.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const i=this._program;this._uRenderPass=i.getLocation("renderPass"),this._uPositionsDecodeMatrix=i.getLocation("positionsDecodeMatrix"),this._uWorldMatrix=i.getLocation("worldMatrix"),this._uViewMatrix=i.getLocation("viewMatrix"),this._uProjMatrix=i.getLocation("projMatrix"),this._uSectionPlanes=[];for(let s=0,o=t._sectionPlanesState.sectionPlanes.length;s<o;s++)this._uSectionPlanes.push({active:i.getLocation("sectionPlaneActive"+s),pos:i.getLocation("sectionPlanePos"+s),dir:i.getLocation("sectionPlaneDir"+s)});this._aPosition=i.getAttribute("position"),this._aOffset=i.getAttribute("offset"),this._aFlags=i.getAttribute("flags"),this._aFlags2=i.getAttribute("flags2"),this._aModelMatrixCol0=i.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=i.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=i.getAttribute("modelMatrixCol2"),this._uPointSize=i.getLocation("pointSize"),this._uNearPlaneHeight=i.getLocation("nearPlaneHeight"),t.logarithmicDepthBufferEnabled&&(this._uLogDepthBufFC=i.getLocation("logDepthBufFC"))}_bindProgram(){const t=this._scene,e=t.canvas.gl,i=t.camera.project;if(this._program.bind(),e.uniformMatrix4fv(this._uProjMatrix,!1,i.matrix),t.logarithmicDepthBufferEnabled){const t=2/(Math.log(i.far+1)/Math.LN2);e.uniform1f(this._uLogDepthBufFC,t)}}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=t.pointsMaterial._state,s=[];return s.push("// Points instancing depth vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("uniform int renderPass;"),s.push("attribute vec3 position;"),t.entityOffsetsEnabled&&s.push("attribute vec3 offset;"),s.push("attribute vec4 flags;"),s.push("attribute vec4 flags2;"),s.push("attribute vec4 modelMatrixCol0;"),s.push("attribute vec4 modelMatrixCol1;"),s.push("attribute vec4 modelMatrixCol2;"),s.push("uniform mat4 worldMatrix;"),s.push("uniform mat4 viewMatrix;"),s.push("uniform mat4 projMatrix;"),s.push("uniform mat4 positionsDecodeMatrix;"),s.push("uniform float pointSize;"),i.perspectivePoints&&s.push("uniform float nearPlaneHeight;"),t.logarithmicDepthBufferEnabled&&(s.push("uniform float logDepthBufFC;"),n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("varying float vFragDepth;")),e&&(s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;")),s.push("void main(void) {"),s.push("if (int(flags.x) != renderPass) {"),s.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),s.push("} else {"),s.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),s.push("  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&s.push("      worldPosition.xyz = worldPosition.xyz + offset;"),s.push("  vec4 viewPosition  = viewMatrix * worldPosition; "),e&&(s.push("vWorldPosition = worldPosition;"),s.push("vFlags2 = flags2;")),s.push("vec4 clipPos = projMatrix * viewPosition;"),t.logarithmicDepthBufferEnabled&&(n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth?s.push("vFragDepth = 1.0 + clipPos.w;"):(s.push("clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;"),s.push("clipPos.z *= clipPos.w;"))),s.push("gl_Position = clipPos;"),i.perspectivePoints?(s.push("gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;"),s.push("gl_PointSize = max(gl_PointSize, "+Math.floor(i.minPerspectivePointSize)+".0);"),s.push("gl_PointSize = min(gl_PointSize, "+Math.floor(i.maxPerspectivePointSize)+".0);")):s.push("gl_PointSize = pointSize;"),s.push("}"),s.push("}"),s}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState;let i,s;const o=e.sectionPlanes.length>0,r=[];if(r.push("// Points instancing depth vertex shader"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("#extension GL_EXT_frag_depth : enable"),r.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),r.push("precision highp float;"),r.push("precision highp int;"),r.push("#else"),r.push("precision mediump float;"),r.push("precision mediump int;"),r.push("#endif"),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(r.push("uniform float logDepthBufFC;"),r.push("varying float vFragDepth;")),o)for(r.push("varying vec4 vWorldPosition;"),r.push("varying vec4 vFlags2;"),i=0,s=e.sectionPlanes.length;i<s;i++)r.push("uniform bool sectionPlaneActive"+i+";"),r.push("uniform vec3 sectionPlanePos"+i+";"),r.push("uniform vec3 sectionPlaneDir"+i+";");if(r.push("const float   packUpScale = 256. / 255.;"),r.push("const float   unpackDownscale = 255. / 256.;"),r.push("const vec3    packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );"),r.push("const vec4    unpackFactors = unpackDownscale / vec4( packFactors, 1. );"),r.push("const float   shiftRight8 = 1.0 / 256.;"),r.push("vec4 packDepthToRGBA( const in float v ) {"),r.push("    vec4 r = vec4( fract( v * packFactors ), v );"),r.push("    r.yzw -= r.xyz * shiftRight8;"),r.push("    return r * packUpScale;"),r.push("}"),r.push("void main(void) {"),t.pointsMaterial.roundPoints&&(r.push("  vec2 cxy = 2.0 * gl_PointCoord - 1.0;"),r.push("  float r = dot(cxy, cxy);"),r.push("  if (r > 1.0) {"),r.push("       discard;"),r.push("  }")),o){for(r.push("  bool clippable = (float(vFlags2.x) > 0.0);"),r.push("  if (clippable) {"),r.push("  float dist = 0.0;"),i=0,s=e.sectionPlanes.length;i<s;i++)r.push("if (sectionPlaneActive"+i+") {"),r.push("   dist += clamp(dot(-sectionPlaneDir"+i+".xyz, vWorldPosition.xyz - sectionPlanePos"+i+".xyz), 0.0, 1000.0);"),r.push("}");r.push("if (dist > 0.0) { discard; }"),r.push("}")}return r.push("    gl_FragColor = packDepthToRGBA( gl_FragCoord.z); "),t.logarithmicDepthBufferEnabled&&n.a.SUPPORTED_EXTENSIONS.EXT_frag_depth&&r.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),r.push("}"),r}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}const fi=r.a.vec3();class _i{constructor(t){this._scene=t,this._hash=this._getHash(),this._lastLightId=null,this._allocate()}getValid(){return this._hash===this._getHash()}_getHash(){return this._scene._sectionPlanesState.getHash()}drawLayer(t,e){const i=e.model,s=i.scene,o=s.canvas.gl,r=e._state,a=this._instanceExt;if(!this._program&&(this._allocate(),this.errors))return;t.lastProgramId!==this._program.id&&(t.lastProgramId=this._program.id,this._bindProgram(t,e)),o.uniformMatrix4fv(this._uPositionsDecodeMatrix,!1,e._state.positionsDecodeMatrix),this._aModelMatrixCol0.bindArrayBuffer(r.modelMatrixCol0Buf),this._aModelMatrixCol1.bindArrayBuffer(r.modelMatrixCol1Buf),this._aModelMatrixCol2.bindArrayBuffer(r.modelMatrixCol2Buf),a.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,1),a.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,1),a.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,1),this._aPosition.bindArrayBuffer(r.positionsBuf),this._aOffset&&(this._aOffset.bindArrayBuffer(r.offsetsBuf),a.vertexAttribDivisorANGLE(this._aOffset.location,1)),this._aColor.bindArrayBuffer(r.colorsBuf),a.vertexAttribDivisorANGLE(this._aColor.location,1),this._aFlags.bindArrayBuffer(r.flagsBuf),a.vertexAttribDivisorANGLE(this._aFlags.location,1),this._aFlags2&&(this._aFlags2.bindArrayBuffer(r.flags2Buf),a.vertexAttribDivisorANGLE(this._aFlags2.location,1));const n=s._sectionPlanesState.sectionPlanes.length;if(n>0){const t=s._sectionPlanesState.sectionPlanes,r=e.layerIndex*n,a=i.renderFlags,l=e._state.rtcCenter;for(let e=0;e<n;e++){const i=this._uSectionPlanes[e],s=a.sectionPlanesActivePerLayer[r+e];if(o.uniform1i(i.active,s?1:0),s){const s=t[e];if(l){const t=Object(C.b)(s.dist,s.dir,l,fi);o.uniform3fv(i.pos,t)}else o.uniform3fv(i.pos,s.pos);o.uniform3fv(i.dir,s.dir)}}}o.uniform1f(this._uPointSize,10),a.drawArraysInstancedANGLE(o.POINTS,0,r.positionsBuf.numItems,r.numInstances),a.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location,0),a.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location,0),a.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location,0),a.vertexAttribDivisorANGLE(this._aColor.location,0),a.vertexAttribDivisorANGLE(this._aFlags.location,0),this._aFlags2&&a.vertexAttribDivisorANGLE(this._aFlags2.location,0),this._aOffset&&a.vertexAttribDivisorANGLE(this._aOffset.location,0)}_allocate(){const t=this._scene,e=t.canvas.gl,i=t._sectionPlanesState;if(this._program=new D.a(e,this._buildShader()),this._program.errors)return void(this.errors=this._program.errors);this._instanceExt=e.getExtension("ANGLE_instanced_arrays");const s=this._program;this._uPositionsDecodeMatrix=s.getLocation("positionsDecodeMatrix"),this._uShadowViewMatrix=s.getLocation("shadowViewMatrix"),this._uShadowProjMatrix=s.getLocation("shadowProjMatrix"),this._uSectionPlanes=[];for(let o=0,r=i.sectionPlanes.length;o<r;o++)this._uSectionPlanes.push({active:s.getLocation("sectionPlaneActive"+o),pos:s.getLocation("sectionPlanePos"+o),dir:s.getLocation("sectionPlaneDir"+o)});this._aPosition=s.getAttribute("position"),this._aOffset=s.getAttribute("offset"),this._aColor=s.getAttribute("color"),this._aFlags=s.getAttribute("flags"),this._aFlags2=s.getAttribute("flags2"),this._aModelMatrixCol0=s.getAttribute("modelMatrixCol0"),this._aModelMatrixCol1=s.getAttribute("modelMatrixCol1"),this._aModelMatrixCol2=s.getAttribute("modelMatrixCol2"),this._uPointSize=s.getLocation("pointSize")}_bindProgram(t,e){const i=this._scene.canvas.gl;this._program.bind(),i.uniformMatrix4fv(this._uShadowViewMatrix,!1,t.shadowViewMatrix),i.uniformMatrix4fv(this._uShadowProjMatrix,!1,t.shadowProjMatrix),this._lastLightId=null}_buildShader(){return{vertex:this._buildVertexShader(),fragment:this._buildFragmentShader()}}_buildVertexShader(){const t=this._scene,e=t._sectionPlanesState.sectionPlanes.length>0,i=[];return i.push("// Instancing geometry shadow drawing vertex shader"),i.push("attribute vec3 position;"),t.entityOffsetsEnabled&&i.push("attribute vec3 offset;"),i.push("attribute vec4 color;"),i.push("attribute vec4 flags;"),i.push("attribute vec4 flags2;"),i.push("attribute vec4 modelMatrixCol0;"),i.push("attribute vec4 modelMatrixCol1;"),i.push("attribute vec4 modelMatrixCol2;"),i.push("uniform mat4 shadowViewMatrix;"),i.push("uniform mat4 shadowProjMatrix;"),i.push("uniform mat4 positionsDecodeMatrix;"),i.push("uniform float pointSize;"),e&&(i.push("varying vec4 vWorldPosition;"),i.push("varying vec4 vFlags2;")),i.push("void main(void) {"),i.push("bool visible      = (float(flags.x) > 0.0);"),i.push("bool transparent  = ((float(color.a) / 255.0) < 1.0);"),i.push("if (!visible || transparent) {"),i.push("   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);"),i.push("} else {"),i.push("  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); "),i.push("  worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);"),t.entityOffsetsEnabled&&i.push("      worldPosition.xyz = worldPosition.xyz + offset;"),i.push("  vec4 viewPosition  = shadowViewMatrix * worldPosition; "),e&&(i.push("vWorldPosition = worldPosition;"),i.push("vFlags2 = flags2;")),i.push("  gl_Position = shadowProjMatrix * viewPosition;"),i.push("}"),i.push("gl_PointSize = pointSize;"),i.push("}"),i}_buildFragmentShader(){const t=this._scene,e=t._sectionPlanesState,i=e.sectionPlanes.length>0,s=[];if(s.push("// Instancing geometry depth drawing fragment shader"),t.logarithmicDepthBufferEnabled&&WEBGL_INFO.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("#extension GL_EXT_frag_depth : enable"),s.push("#ifdef GL_FRAGMENT_PRECISION_HIGH"),s.push("precision highp float;"),s.push("precision highp int;"),s.push("#else"),s.push("precision mediump float;"),s.push("precision mediump int;"),s.push("#endif"),t.logarithmicDepthBufferEnabled&&WEBGL_INFO.SUPPORTED_EXTENSIONS.EXT_frag_depth&&(s.push("uniform float logDepthBufFC;"),s.push("varying float vFragDepth;")),i){s.push("varying vec4 vWorldPosition;"),s.push("varying vec4 vFlags2;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("uniform bool sectionPlaneActive"+t+";"),s.push("uniform vec3 sectionPlanePos"+t+";"),s.push("uniform vec3 sectionPlaneDir"+t+";")}if(s.push("varying vec3 vViewNormal;"),s.push("vec3 packNormalToRGB( const in vec3 normal ) {"),s.push("    return normalize( normal ) * 0.5 + 0.5;"),s.push("}"),s.push("void main(void) {"),s.push("  vec2 cxy = 2.0 * gl_PointCoord - 1.0;"),s.push("  float r = dot(cxy, cxy);"),s.push("  if (r > 1.0) {"),s.push("       discard;"),s.push("  }"),i){s.push("  bool clippable = (float(vFlags2.x) > 0.0);"),s.push("  if (clippable) {"),s.push("  float dist = 0.0;");for(let t=0,i=e.sectionPlanes.length;t<i;t++)s.push("if (sectionPlaneActive"+t+") {"),s.push("   dist += clamp(dot(-sectionPlaneDir"+t+".xyz, vWorldPosition.xyz - sectionPlanePos"+t+".xyz), 0.0, 1000.0);"),s.push("}");s.push("if (dist > 0.0) { discard; }"),s.push("}")}return t.logarithmicDepthBufferEnabled&&WEBGL_INFO.SUPPORTED_EXTENSIONS.EXT_frag_depth&&s.push("gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;"),s.push("    gl_FragColor = vec4(packNormalToRGB(vViewNormal), 1.0); "),s.push("}"),s}webglContextRestored(){this._program=null}destroy(){this._program&&this._program.destroy(),this._program=null}}class gi{constructor(t){this._scene=t}_compile(){this._colorRenderer&&!this._colorRenderer.getValid()&&(this._colorRenderer.destroy(),this._colorRenderer=null),this._depthRenderer&&!this._depthRenderer.getValid()&&(this._depthRenderer.destroy(),this._depthRenderer=null),this._silhouetteRenderer&&!this._silhouetteRenderer.getValid()&&(this._silhouetteRenderer.destroy(),this._silhouetteRenderer=null),this._pickMeshRenderer&&!this._pickMeshRenderer.getValid()&&(this._pickMeshRenderer.destroy(),this._pickMeshRenderer=null),this._pickDepthRenderer&&!this._pickDepthRenderer.getValid()&&(this._pickDepthRenderer.destroy(),this._pickDepthRenderer=null),this._occlusionRenderer&&!1===this._occlusionRenderer.getValid()&&(this._occlusionRenderer.destroy(),this._occlusionRenderer=null),this._shadowRenderer&&!this._shadowRenderer.getValid()&&(this._shadowRenderer.destroy(),this._shadowRenderer=null)}get colorRenderer(){return this._colorRenderer||(this._colorRenderer=new si(this._scene,!1)),this._colorRenderer}get silhouetteRenderer(){return this._silhouetteRenderer||(this._silhouetteRenderer=new ri(this._scene)),this._silhouetteRenderer}get depthRenderer(){return this._depthRenderer||(this._depthRenderer=new pi(this._scene)),this._depthRenderer}get pickMeshRenderer(){return this._pickMeshRenderer||(this._pickMeshRenderer=new ni(this._scene)),this._pickMeshRenderer}get pickDepthRenderer(){return this._pickDepthRenderer||(this._pickDepthRenderer=new hi(this._scene)),this._pickDepthRenderer}get occlusionRenderer(){return this._occlusionRenderer||(this._occlusionRenderer=new ci(this._scene)),this._occlusionRenderer}get shadowRenderer(){return this._shadowRenderer||(this._shadowRenderer=new _i(this._scene)),this._shadowRenderer}_destroy(){this._colorRenderer&&this._colorRenderer.destroy(),this._depthRenderer&&this._depthRenderer.destroy(),this._silhouetteRenderer&&this._silhouetteRenderer.destroy(),this._pickMeshRenderer&&this._pickMeshRenderer.destroy(),this._pickDepthRenderer&&this._pickDepthRenderer.destroy(),this._occlusionRenderer&&this._occlusionRenderer.destroy(),this._shadowRenderer&&this._shadowRenderer.destroy()}}const mi={};const Pi=new Uint8Array(4),vi=r.a.vec4([0,0,0,1]),xi=r.a.vec4([0,0,0,1]),bi=r.a.vec4([0,0,0,1]),yi=new Float32Array(3);class Mi{constructor(t,e){this.sortId="PointsInstancingLayer",this.layerIndex=e.layerIndex,this._pointsInstancingRenderers=function(t){const e=t.id;let i=mi[e];return i||(i=new gi(t),mi[e]=i,i._compile(),t.on("compile",(()=>{i._compile()})),t.on("destroyed",(()=>{delete mi[e],i._destroy()}))),i}(t.scene),this.model=t,this._aabb=r.a.collapseAABB3();const i=t.scene.canvas.gl,s={positionsDecodeMatrix:r.a.mat4(),numInstances:0,obb:r.a.OBB3(),rtcCenter:null},o=!!e.positionsDecodeMatrix;if(e.positions)if(o){let t=!1;s.positionsBuf=new L.a(i,i.ARRAY_BUFFER,e.positions,e.positions.length,3,i.STATIC_DRAW,t),s.positionsDecodeMatrix.set(e.positionsDecodeMatrix);let o=r.a.collapseAABB3();r.a.expandAABB3Points3(o,e.positions),w.a.decompressAABB(o,s.positionsDecodeMatrix),r.a.AABB3ToOBB3(o,s.obb)}else{let t=e.positions.length,o=r.a.collapseAABB3();r.a.expandAABB3Points3(o,e.positions),r.a.AABB3ToOBB3(o,s.obb);const a=dt(e.positions,o,s.positionsDecodeMatrix);let n=!1;s.positionsBuf=new L.a(i,i.ARRAY_BUFFER,a,t,3,i.STATIC_DRAW,n)}if(e.colors){const t=e.colors,o=new Uint8Array(t.length/3*4);for(let e=0,i=0,s=t.length;e<s;e+=3,i+=4)o[e+0]=255*t[i+0],o[i+1]=255*t[e+1],o[i+2]=255*t[e+2],o[i+3]=255;let r=!1;s.colorsBuf=new L.a(i,i.ARRAY_BUFFER,o,o.length,4,i.STATIC_DRAW,r)}this._state=new A.a(s),this._numPortions=0,this._numVisibleLayerPortions=0,this._numTransparentLayerPortions=0,this._numXRayedLayerPortions=0,this._numHighlightedLayerPortions=0,this._numSelectedLayerPortions=0,this._numClippableLayerPortions=0,this._numEdgesLayerPortions=0,this._numPickableLayerPortions=0,this._numCulledLayerPortions=0,this._pickColors=[],this._offsets=[],this._modelMatrixCol0=[],this._modelMatrixCol1=[],this._modelMatrixCol2=[],this._portions=[],e.rtcCenter&&(this._state.rtcCenter=r.a.vec3(e.rtcCenter)),this._finalized=!1,this.aabb=r.a.collapseAABB3()}createPortion(t){const e=t.meshMatrix,i=t.worldMatrix,s=t.aabb,o=t.pickColor;if(this._finalized)throw"Already finalized";this.model.scene.entityOffsetsEnabled&&(this._offsets.push(0),this._offsets.push(0),this._offsets.push(0)),this._modelMatrixCol0.push(e[0]),this._modelMatrixCol0.push(e[4]),this._modelMatrixCol0.push(e[8]),this._modelMatrixCol0.push(e[12]),this._modelMatrixCol1.push(e[1]),this._modelMatrixCol1.push(e[5]),this._modelMatrixCol1.push(e[9]),this._modelMatrixCol1.push(e[13]),this._modelMatrixCol2.push(e[2]),this._modelMatrixCol2.push(e[6]),this._modelMatrixCol2.push(e[10]),this._modelMatrixCol2.push(e[14]),this._pickColors.push(o[0]),this._pickColors.push(o[1]),this._pickColors.push(o[2]),this._pickColors.push(o[3]),r.a.collapseAABB3(s);const a=this._state.obb,n=a.length;for(let h=0;h<n;h+=4)vi[0]=a[h+0],vi[1]=a[h+1],vi[2]=a[h+2],r.a.transformPoint4(e,vi,xi),i?(r.a.transformPoint4(i,xi,bi),r.a.expandAABB3Point3(s,bi)):r.a.expandAABB3Point3(s,xi);if(this._state.rtcCenter){const t=this._state.rtcCenter;s[0]+=t[0],s[1]+=t[1],s[2]+=t[2],s[3]+=t[0],s[4]+=t[1],s[5]+=t[2]}r.a.expandAABB3(this.aabb,s),this._state.numInstances++;const l=this._portions.length;return this._portions.push({}),this._numPortions++,this.model.numPortions++,l}finalize(){if(this._finalized)throw"Already finalized";const t=this.model.scene.canvas.gl,e=this._pickColors.length;if(e>0){let i=!1,s=!0;this._state.flagsBuf=new L.a(t,t.ARRAY_BUFFER,new Uint8Array(e),e,4,t.DYNAMIC_DRAW,i),this._state.flags2Buf=new L.a(t,t.ARRAY_BUFFER,new Uint8Array(e),e,4,t.DYNAMIC_DRAW,s)}if(this.model.scene.entityOffsetsEnabled&&this._offsets.length>0){const e=!1;this._state.offsetsBuf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._offsets),this._offsets.length,3,t.DYNAMIC_DRAW,e),this._offsets=[]}if(this._modelMatrixCol0.length>0){const e=!1;this._state.modelMatrixCol0Buf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._modelMatrixCol0),this._modelMatrixCol0.length,4,t.STATIC_DRAW,e),this._state.modelMatrixCol1Buf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._modelMatrixCol1),this._modelMatrixCol1.length,4,t.STATIC_DRAW,e),this._state.modelMatrixCol2Buf=new L.a(t,t.ARRAY_BUFFER,new Float32Array(this._modelMatrixCol2),this._modelMatrixCol2.length,4,t.STATIC_DRAW,e),this._modelMatrixCol0=[],this._modelMatrixCol1=[],this._modelMatrixCol2=[]}if(this._pickColors.length>0){const e=!1;this._state.pickColorsBuf=new L.a(t,t.ARRAY_BUFFER,new Uint8Array(this._pickColors),this._pickColors.length,4,t.STATIC_DRAW,e),this._pickColors=[]}this._finalized=!0}initFlags(t,e,i){e&d.a.VISIBLE&&(this._numVisibleLayerPortions++,this.model.numVisibleLayerPortions++),e&d.a.HIGHLIGHTED&&(this._numHighlightedLayerPortions++,this.model.numHighlightedLayerPortions++),e&d.a.XRAYED&&(this._numXRayedLayerPortions++,this.model.numXRayedLayerPortions++),e&d.a.SELECTED&&(this._numSelectedLayerPortions++,this.model.numSelectedLayerPortions++),e&d.a.CLIPPABLE&&(this._numClippableLayerPortions++,this.model.numClippableLayerPortions++),e&d.a.EDGES&&(this._numEdgesLayerPortions++,this.model.numEdgesLayerPortions++),e&d.a.PICKABLE&&(this._numPickableLayerPortions++,this.model.numPickableLayerPortions++),e&d.a.CULLED&&(this._numCulledLayerPortions++,this.model.numCulledLayerPortions++),i&&(this._numTransparentLayerPortions++,this.model.numTransparentLayerPortions++),this._setFlags(t,e,i),this._setFlags2(t,e)}setVisible(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.VISIBLE?(this._numVisibleLayerPortions++,this.model.numVisibleLayerPortions++):(this._numVisibleLayerPortions--,this.model.numVisibleLayerPortions--),this._setFlags(t,e,i)}setHighlighted(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.HIGHLIGHTED?(this._numHighlightedLayerPortions++,this.model.numHighlightedLayerPortions++):(this._numHighlightedLayerPortions--,this.model.numHighlightedLayerPortions--),this._setFlags(t,e,i)}setXRayed(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.XRAYED?(this._numXRayedLayerPortions++,this.model.numXRayedLayerPortions++):(this._numXRayedLayerPortions--,this.model.numXRayedLayerPortions--),this._setFlags(t,e,i)}setSelected(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.SELECTED?(this._numSelectedLayerPortions++,this.model.numSelectedLayerPortions++):(this._numSelectedLayerPortions--,this.model.numSelectedLayerPortions--),this._setFlags(t,e,i)}setEdges(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.EDGES?(this._numEdgesLayerPortions++,this.model.numEdgesLayerPortions++):(this._numEdgesLayerPortions--,this.model.numEdgesLayerPortions--),this._setFlags(t,e,i)}setClippable(t,e){if(!this._finalized)throw"Not finalized";e&d.a.CLIPPABLE?(this._numClippableLayerPortions++,this.model.numClippableLayerPortions++):(this._numClippableLayerPortions--,this.model.numClippableLayerPortions--),this._setFlags2(t,e)}setCollidable(t,e){if(!this._finalized)throw"Not finalized"}setPickable(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.PICKABLE?(this._numPickableLayerPortions++,this.model.numPickableLayerPortions++):(this._numPickableLayerPortions--,this.model.numPickableLayerPortions--),this._setFlags2(t,e,i)}setCulled(t,e,i){if(!this._finalized)throw"Not finalized";e&d.a.CULLED?(this._numCulledLayerPortions++,this.model.numCulledLayerPortions++):(this._numCulledLayerPortions--,this.model.numCulledLayerPortions--),this._setFlags(t,e,i)}setColor(t,e){if(!this._finalized)throw"Not finalized";Pi[0]=e[0],Pi[1]=e[1],Pi[2]=e[2],Pi[3]=e[3],this._state.colorsBuf.setData(Pi,4*t,4)}setTransparent(t,e,i){i?(this._numTransparentLayerPortions++,this.model.numTransparentLayerPortions++):(this._numTransparentLayerPortions--,this.model.numTransparentLayerPortions--),this._setFlags(t,e,i)}_setFlags(t,e,i){if(!this._finalized)throw"Not finalized";const s=!!(e&d.a.VISIBLE),o=!!(e&d.a.XRAYED),r=!!(e&d.a.HIGHLIGHTED),a=!!(e&d.a.SELECTED),n=!!(e&d.a.EDGES),l=!!(e&d.a.PICKABLE),h=!!(e&d.a.CULLED);let u,c;u=!s||h||o?p:i?_:f,c=!s||h?p:a?m:r?g:o?P:p;let A=0;A=!s||h?p:a?y:r?b:o?M:n?i?x:v:p;let L=s&&!h&&l?E:p;Pi[0]=u,Pi[1]=c,Pi[2]=A,Pi[3]=L,this._state.flagsBuf.setData(Pi,4*t,4)}_setFlags2(t,e){if(!this._finalized)throw"Not finalized";const i=e&d.a.CLIPPABLE?255:0;Pi[0]=i,this._state.flags2Buf.setData(Pi,4*t,4)}setOffset(t,e){if(!this._finalized)throw"Not finalized";this.model.scene.entityOffsetsEnabled?(yi[0]=e[0],yi[1]=e[1],yi[2]=e[2],this._state.offsetsBuf.setData(yi,3*t,3)):this.model.error("Entity#offset not enabled for this Viewer")}drawColorOpaque(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._numTransparentLayerPortions!==this._numPortions&&this._numXRayedLayerPortions!==this._numPortions&&this._pointsInstancingRenderers.colorRenderer&&this._pointsInstancingRenderers.colorRenderer.drawLayer(e,this,f)}drawColorTransparent(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numTransparentLayerPortions&&this._numXRayedLayerPortions!==this._numPortions&&this._pointsInstancingRenderers.colorRenderer&&this._pointsInstancingRenderers.colorRenderer.drawLayer(e,this,_)}drawDepth(t,e){}drawNormals(t,e){}drawSilhouetteXRayed(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numXRayedLayerPortions&&this._pointsInstancingRenderers.silhouetteRenderer&&this._pointsInstancingRenderers.silhouetteRenderer.drawLayer(e,this,P)}drawSilhouetteHighlighted(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numHighlightedLayerPortions&&this._pointsInstancingRenderers.silhouetteRenderer&&this._pointsInstancingRenderers.silhouetteRenderer.drawLayer(e,this,g)}drawSilhouetteSelected(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&0!==this._numSelectedLayerPortions&&this._pointsInstancingRenderers.silhouetteRenderer&&this._pointsInstancingRenderers.silhouetteRenderer.drawLayer(e,this,m)}drawEdgesColorOpaque(t,e){}drawEdgesColorTransparent(t,e){}drawEdgesHighlighted(t,e){}drawEdgesSelected(t,e){}drawEdgesXRayed(t,e){}drawOcclusion(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._pointsInstancingRenderers.occlusionRenderer&&this._pointsInstancingRenderers.occlusionRenderer.drawLayer(e,this,f)}drawShadow(t,e){}drawPickMesh(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._pointsInstancingRenderers.pickMeshRenderer&&this._pointsInstancingRenderers.pickMeshRenderer.drawLayer(e,this,E)}drawPickDepths(t,e){this._numCulledLayerPortions!==this._numPortions&&0!==this._numVisibleLayerPortions&&this._pointsInstancingRenderers.pickDepthRenderer&&this._pointsInstancingRenderers.pickDepthRenderer.drawLayer(e,this,E)}drawPickNormals(t,e){}destroy(){const t=this._state;t.positionsBuf&&(t.positionsBuf.destroy(),t.positionsBuf=null),t.colorsBuf&&(t.colorsBuf.destroy(),t.colorsBuf=null),t.flagsBuf&&(t.flagsBuf.destroy(),t.flagsBuf=null),t.flags2Buf&&(t.flags2Buf.destroy(),t.flags2Buf=null),t.offsetsBuf&&(t.offsetsBuf.destroy(),t.offsetsBuf=null),t.modelMatrixCol0Buf&&(t.modelMatrixCol0Buf.destroy(),t.modelMatrixCol0Buf=null),t.modelMatrixCol1Buf&&(t.modelMatrixCol1Buf.destroy(),t.modelMatrixCol1Buf=null),t.modelMatrixCol2Buf&&(t.modelMatrixCol2Buf.destroy(),t.modelMatrixCol2Buf=null),t.pickColorsBuf&&(t.pickColorsBuf.destroy(),t.pickColorsBuf=null),t.destroy()}}var Ei=i("ZzC7");const Ai=n.a.SUPPORTED_EXTENSIONS.ANGLE_instanced_arrays,Li=r.a.mat4(),wi=r.a.vec3([1,1,1]),Di=r.a.vec3([0,0,0]),Ci=r.a.vec3([0,0,0]),Si=r.a.identityQuaternion();class Bi extends o.a{constructor(t,e={}){super(t,e),this._maxGeometryBatchSize=e.maxGeometryBatchSize,this._aabb=r.a.collapseAABB3(),this._aabbDirty=!1,this._layerList=[],this._nodeList=[],this._lastRTCCenter=null,this._lastDecodeMatrix=null,this._instancingLayers={},this._currentBatchingLayers={},this._scratchMemory=(c++,u),this._meshes={},this._nodes={},this.renderFlags=new Ei.a,this.numGeometries=0,this.numPortions=0,this.numVisibleLayerPortions=0,this.numTransparentLayerPortions=0,this.numXRayedLayerPortions=0,this.numHighlightedLayerPortions=0,this.numSelectedLayerPortions=0,this.numEdgesLayerPortions=0,this.numPickableLayerPortions=0,this.numClippableLayerPortions=0,this.numCulledLayerPortions=0,this.numEntities=0,this._numTriangles=0,this._numLines=0,this._numPoints=0,this._edgeThreshold=e.edgeThreshold||10,this.visible=e.visible,this.culled=e.culled,this.pickable=e.pickable,this.clippable=e.clippable,this.collidable=e.collidable,this.castsShadow=e.castsShadow,this.receivesShadow=e.receivesShadow,this.xrayed=e.xrayed,this.highlighted=e.highlighted,this.selected=e.selected,this.edges=e.edges,this.colorize=e.colorize,this.opacity=e.opacity,this.backfaces=e.backfaces,this._position=new Float32Array(e.position||[0,0,0]),this._rotation=new Float32Array(e.rotation||[0,0,0]),this._quaternion=new Float32Array(e.quaternion||[0,0,0,1]),e.rotation&&r.a.eulerToQuaternion(this._rotation,"XYZ",this._quaternion),this._scale=new Float32Array(e.scale||[1,1,1]),this._worldMatrix=r.a.mat4(),r.a.composeMat4(this._position,this._quaternion,this._scale,this._worldMatrix),this._worldNormalMatrix=r.a.mat4(),r.a.inverseMat4(this._worldMatrix,this._worldNormalMatrix),r.a.transposeMat4(this._worldNormalMatrix),(e.matrix||e.position||e.rotation||e.scale||e.quaternion)&&(this._viewMatrix=r.a.mat4(),this._viewNormalMatrix=r.a.mat4(),this._viewMatrixDirty=!0,this._worldMatrixNonIdentity=!0),this._opacity=1,this._colorize=[1,1,1],this._saoEnabled=!1!==e.saoEnabled,this._pbrEnabled=!!e.pbrEnabled,this._isModel=e.isModel,this._isModel&&this.scene._registerModel(this),this._onCameraViewMatrix=this.scene.camera.on("matrix",(()=>{this._viewMatrixDirty=!0}))}get isPerformanceModel(){return!0}get position(){return this._position}get rotation(){return this._rotation}get quaternion(){return this._quaternion}get scale(){return this._scale}get matrix(){return this._worldMatrix}get worldMatrix(){return this._worldMatrix}get worldNormalMatrix(){return this._worldNormalMatrix}get viewMatrix(){return this._viewMatrix?(this._viewMatrixDirty&&(r.a.mulMat4(this.scene.camera.viewMatrix,this._worldMatrix,this._viewMatrix),r.a.inverseMat4(this._viewMatrix,this._viewNormalMatrix),r.a.transposeMat4(this._viewNormalMatrix),this._viewMatrixDirty=!1),this._viewMatrix):this.scene.camera.viewMatrix}getPickViewMatrix(t){return this._viewMatrix?this._viewMatrix:t}get viewNormalMatrix(){return this._viewNormalMatrix?(this._viewMatrixDirty&&(r.a.mulMat4(this.scene.camera.viewMatrix,this._worldMatrix,this._viewMatrix),r.a.inverseMat4(this._viewMatrix,this._viewNormalMatrix),r.a.transposeMat4(this._viewNormalMatrix),this._viewMatrixDirty=!1),this._viewNormalMatrix):this.scene.camera.viewNormalMatrix}createGeometry(t){if(!Ai)return void this.error("WebGL instanced arrays not supported");const e=t.id;if(void 0===e||null===e)return void this.error("Config missing: id");if(this._instancingLayers[e])return void this.error("Geometry already created: "+e);let i;const o=t.primitive;if(void 0!==o&&null!==o){switch(o){case"triangles":case"solid":i=new ae(this,s.a.apply({layerIndex:0,solid:!0},t)),this._numTriangles+=t.indices?Math.round(t.indices.length/3):0;break;case"surface":i=new ae(this,s.a.apply({layerIndex:0,solid:!1},t)),this._numTriangles+=t.indices?Math.round(t.indices.length/3):0;break;case"lines":i=new Ne(this,s.a.apply({layerIndex:0},t)),this._numLines+=t.indices?Math.round(t.indices.length/2):0;break;case"points":i=new Mi(this,s.a.apply({layerIndex:0},t)),this._numPoints+=t.positions?Math.round(t.positions.length/3):0}this._instancingLayers[e]=i,this._layerList.push(i),this.numGeometries++}else this.error("Config missing: primitive")}createMesh(t){let e=t.id;if(void 0===e||null===e)return void this.error("Config missing: id");if(this._meshes[e])return void this.error("PerformanceModel already has a Mesh with this ID: "+e);const i=t.geometryId,s=void 0!==i;if(s){if(!Ai)return void this.error("WebGL instanced arrays not supported");if(!this._instancingLayers[i])return void this.error("Geometry not found: "+i+" - ensure that you create it first with createGeometry()")}let o,n;const h=t.color?new Uint8Array([Math.floor(255*t.color[0]),Math.floor(255*t.color[1]),Math.floor(255*t.color[2])]):[255,255,255],u=void 0!==t.opacity&&null!==t.opacity?Math.floor(255*t.opacity):255,c=void 0!==t.metallic&&null!==t.metallic?Math.floor(255*t.metallic):0,d=void 0!==t.roughness&&null!==t.roughness?Math.floor(255*t.roughness):255;u<255&&this.numTransparentLayerPortions++;const p=new l(this,e,h,u),f=p.pickId,_=new Uint8Array([255&f,f>>8&255,f>>16&255,f>>24&255]),g=r.a.collapseAABB3();if(s){let e,s=this._worldMatrixNonIdentity?this._worldMatrix:null;if(t.matrix)e=t.matrix;else{const i=t.scale||wi,s=t.position||Di,o=t.rotation||Ci;r.a.eulerToQuaternion(o,"XYZ",Si),e=r.a.composeMat4(s,Si,i,Li)}const a=this._instancingLayers[i];o=a,n=a.createPortion({color:h,metallic:c,roughness:d,opacity:u,meshMatrix:e,worldMatrix:s,aabb:g,pickColor:_}),r.a.expandAABB3(this._aabb,g);const l=Math.round(a.numIndices/3);this._numTriangles+=l,p.numTriangles=l,p.rtcCenter=a.rtcCenter}else{let e=t.primitive||"triangles";"points"!==e&&"lines"!==e&&"triangles"!==e&&"solid"!==e&&"surface"!==e&&(this.error(`Unsupported value for 'primitive': '${e}' - supported values are 'points', 'lines', 'triangles', 'solid' and 'surface'. Defaulting to 'triangles'.`),e="triangles");let i=t.positions;if(!i)return this.error("Config missing: positions (no meshIds provided, so expecting geometry arrays instead)"),null;let s=t.indices,l=t.edgeIndices;if(!t.indices&&"triangles"===e)return this.error("Config missing for triangles primitive: indices (no meshIds provided, so expecting geometry arrays instead)"),null;let f=!1;if(t.rtcCenter&&(this._lastRTCCenter?r.a.compareVec3(this._lastRTCCenter,t.rtcCenter)||(f=!0,this._lastRTCCenter.set(t.rtcCenter)):(f=!0,this._lastRTCCenter=r.a.vec3(t.rtcCenter))),t.positionsDecodeMatrix&&(this._lastDecodeMatrix?r.a.compareMat4(this._lastDecodeMatrix,t.positionsDecodeMatrix)||(f=!0,this._lastDecodeMatrix.set(t.positionsDecodeMatrix)):(f=!0,this._lastDecodeMatrix=r.a.mat4(t.positionsDecodeMatrix))),f){for(let t in this._currentBatchingLayers)this._currentBatchingLayers.hasOwnProperty(t)&&this._currentBatchingLayers[t].finalize();this._currentBatchingLayers={}}const m=this._worldMatrixNonIdentity?this._worldMatrix:null;let P;if(!t.positionsDecodeMatrix)if(t.matrix)P=t.matrix;else{const e=t.scale||wi,i=t.position||Di,s=t.rotation||Ci;r.a.eulerToQuaternion(s,"XYZ",Si),P=r.a.composeMat4(i,Si,e,Li)}switch(o=this._currentBatchingLayers[e],e){case"triangles":case"solid":case"surface":o&&(o.canCreatePortion(i.length,s.length)||(o.finalize(),delete this._currentBatchingLayers[e],o=null)),o||(o=new Mt(this,{layerIndex:0,scratchMemory:this._scratchMemory,positionsDecodeMatrix:t.positionsDecodeMatrix,rtcCenter:t.rtcCenter,maxGeometryBatchSize:this._maxGeometryBatchSize,solid:"solid"===e}),this._layerList.push(o),this._currentBatchingLayers[e]=o),l||(l=Object(a.a)(i,s,null,this._edgeThreshold)),n=o.createPortion({positions:i,normals:t.normals,indices:s,edgeIndices:l,color:h,metallic:c,roughness:d,colors:t.colors,opacity:u,meshMatrix:P,worldMatrix:m,worldAABB:g,pickColor:_});const r=Math.round(s.length/3);this._numTriangles+=r,p.numTriangles=r;break;case"lines":o&&(o.canCreatePortion(i.length,s.length)||(o.finalize(),delete this._currentBatchingLayers[e],o=null)),o||(o=new xe(this,{layerIndex:0,scratchMemory:this._scratchMemory,positionsDecodeMatrix:t.positionsDecodeMatrix,rtcCenter:t.rtcCenter,maxGeometryBatchSize:this._maxGeometryBatchSize}),this._layerList.push(o),this._currentBatchingLayers[e]=o),n=o.createPortion({positions:i,indices:s,color:h,colors:t.colors,opacity:u,meshMatrix:P,worldMatrix:m,worldAABB:g,pickColor:_}),this._numLines+=Math.round(s.length/2);break;case"points":o&&(o.canCreatePortion(i.length)||(o.finalize(),delete this._currentBatchingLayers[e],o=null)),o||(o=new ei(this,{layerIndex:0,scratchMemory:this._scratchMemory,positionsDecodeMatrix:t.positionsDecodeMatrix,rtcCenter:t.rtcCenter,maxGeometryBatchSize:this._maxGeometryBatchSize}),this._layerList.push(o),this._currentBatchingLayers[e]=o),n=o.createPortion({positions:i,color:h,colors:t.colors,opacity:u,meshMatrix:P,worldMatrix:m,worldAABB:g,pickColor:_}),this._numPoints+=Math.round(i.length/3)}r.a.expandAABB3(this._aabb,g),this.numGeometries++,p.rtcCenter=t.rtcCenter}p.parent=null,p._layer=o,p._portionId=n,p.aabb=g,this._meshes[e]=p}createEntity(t){let e=t.id;void 0===e?e=r.a.createUUID():this.scene.components[e]&&(this.error("Scene already has a Component with this ID: "+e+" - will assign random ID"),e=r.a.createUUID());const i=t.meshIds;if(void 0===i)return void this.error("Config missing: meshIds");let s=[];for(let r=0,l=i.length;r<l;r++){const t=i[r],e=this._meshes[t];e?e.parent?this.error("Mesh with ID "+t+" already belongs to object with ID "+e.parent.id+" - ignoring this mesh"):s.push(e):this.error("Mesh with this ID not found: "+t+" - ignoring this mesh")}let o,a=0;if(this._visible&&!1!==t.visible&&(a|=d.a.VISIBLE),this._pickable&&!1!==t.pickable&&(a|=d.a.PICKABLE),this._culled&&!1!==t.culled&&(a|=d.a.CULLED),this._clippable&&!1!==t.clippable&&(a|=d.a.CLIPPABLE),this._collidable&&!1!==t.collidable&&(a|=d.a.COLLIDABLE),this._edges&&!1!==t.edges&&(a|=d.a.EDGES),this._xrayed&&!1!==t.xrayed&&(a|=d.a.XRAYED),this._highlighted&&!1!==t.highlighted&&(a|=d.a.HIGHLIGHTED),this._selected&&!1!==t.selected&&(a|=d.a.SELECTED),1===s.length)o=s[0].aabb;else{o=r.a.collapseAABB3();for(let t=0,e=s.length;t<e;t++)r.a.expandAABB3(o,s[t].aabb)}const n=new h.a(this,t.isObject,e,s,a,o);return this._nodeList.push(n),this._nodes[e]=n,this.numEntities++,n}finalize(){if(!this.destroyed){for(const t in this._instancingLayers)this._instancingLayers.hasOwnProperty(t)&&this._instancingLayers[t].finalize();for(let t in this._currentBatchingLayers)this._currentBatchingLayers.hasOwnProperty(t)&&this._currentBatchingLayers[t].finalize();this._currentBatchingLayers={};for(let t=0,e=this._nodeList.length;t<e;t++){this._nodeList[t]._finalize()}this._layerList.sort(((t,e)=>t.sortId<e.sortId?-1:t.sortId>e.sortId?1:0));for(let t=0,e=this._layerList.length;t<e;t++){this._layerList[t].layerIndex=t}this.glRedraw(),this.scene._aabbDirty=!0}}set backfaces(t){t=!!t,this._backfaces=t,this.glRedraw()}get backfaces(){return this._backfaces}get entityList(){return this._nodeList}get isEntity(){return!0}get isModel(){return this._isModel}get isObject(){return!1}get aabb(){return this._aabbDirty&&this._rebuildAABB(),this._aabb}_rebuildAABB(){r.a.collapseAABB3(this._aabb);for(let t=0,e=this._nodeList.length;t<e;t++){const e=this._nodeList[t];r.a.expandAABB3(this._aabb,e.aabb)}this._aabbDirty=!1}get numTriangles(){return this._numTriangles}get numLines(){return this._numLines}get numPoints(){return this._numPoints}set visible(t){t=!1!==t,this._visible=t;for(let e=0,i=this._nodeList.length;e<i;e++)this._nodeList[e].visible=t;this.glRedraw()}get visible(){return this.numVisibleLayerPortions>0}set xrayed(t){t=!!t,this._xrayed=t;for(let e=0,i=this._nodeList.length;e<i;e++)this._nodeList[e].xrayed=t;this.glRedraw()}get xrayed(){return this.numXRayedLayerPortions>0}set highlighted(t){t=!!t,this._highlighted=t;for(let e=0,i=this._nodeList.length;e<i;e++)this._nodeList[e].highlighted=t;this.glRedraw()}get highlighted(){return this.numHighlightedLayerPortions>0}set selected(t){t=!!t,this._selected=t;for(let e=0,i=this._nodeList.length;e<i;e++)this._nodeList[e].selected=t;this.glRedraw()}get selected(){return this.numSelectedLayerPortions>0}set edges(t){t=!!t,this._edges=t;for(let e=0,i=this._nodeList.length;e<i;e++)this._nodeList[e].edges=t;this.glRedraw()}get edges(){return this.numEdgesLayerPortions>0}set culled(t){t=!!t,this._culled=t;for(let e=0,i=this._nodeList.length;e<i;e++)this._nodeList[e].culled=t;this.glRedraw()}get culled(){return this._culled}set clippable(t){t=!1!==t,this._clippable=t;for(let e=0,i=this._nodeList.length;e<i;e++)this._nodeList[e].clippable=t;this.glRedraw()}get clippable(){return this._clippable}set collidable(t){t=!1!==t,this._collidable=t;for(let e=0,i=this._nodeList.length;e<i;e++)this._nodeList[e].collidable=t}get collidable(){return this._collidable}set pickable(t){t=!1!==t,this._pickable=t;for(let e=0,i=this._nodeList.length;e<i;e++)this._nodeList[e].pickable=t}get pickable(){return this.numPickableLayerPortions>0}set colorize(t){this._colorize=t;for(let e=0,i=this._nodeList.length;e<i;e++)this._nodeList[e].colorize=t}get colorize(){return this._colorize}set opacity(t){this._opacity=t;for(let e=0,i=this._nodeList.length;e<i;e++)this._nodeList[e].opacity=t}get opacity(){return this._opacity}set castsShadow(t){(t=!1!==t)!==this._castsShadow&&(this._castsShadow=t,this.glRedraw())}get castsShadow(){return this._castsShadow}set receivesShadow(t){(t=!1!==t)!==this._receivesShadow&&(this._receivesShadow=t,this.glRedraw())}get receivesShadow(){return this._receivesShadow}get saoEnabled(){return this._saoEnabled}get pbrEnabled(){return this._pbrEnabled}get isDrawable(){return!0}get isStateSortable(){return!1}stateSortCompare(t,e){}rebuildRenderFlags(){this.renderFlags.reset(),this._updateRenderFlagsVisibleLayers(),this.renderFlags.numLayers>0&&0===this.renderFlags.numVisibleLayers?this.renderFlags.culled=!0:this._updateRenderFlags()}_updateRenderFlagsVisibleLayers(){const t=this.renderFlags;t.numLayers=this._layerList.length,t.numVisibleLayers=0;for(let e=0,i=this._layerList.length;e<i;e++){const i=this._layerList[e];this._getActiveSectionPlanesForLayer(i)&&(t.visibleLayers[t.numVisibleLayers++]=e)}}_getActiveSectionPlanesForLayer(t){const e=this.renderFlags,i=this.scene._sectionPlanesState.sectionPlanes,s=i.length,o=t.layerIndex*s;if(s>0)for(let r=0;r<s;r++){i[r].active?(e.sectionPlanesActivePerLayer[o+r]=!0,e.sectioned=!0):e.sectionPlanesActivePerLayer[o+r]=!1}return!0}_updateRenderFlags(){if(0===this.numVisibleLayerPortions)return;if(this.numCulledLayerPortions===this.numPortions)return;const t=this.renderFlags;if(t.colorOpaque=this.numTransparentLayerPortions<this.numPortions,this.numTransparentLayerPortions>0&&(t.colorTransparent=!0),this.numXRayedLayerPortions>0){const e=this.scene.xrayMaterial._state;e.fill&&(e.fillAlpha<1?t.xrayedSilhouetteTransparent=!0:t.xrayedSilhouetteOpaque=!0),e.edges&&(e.edgeAlpha<1?t.xrayedEdgesTransparent=!0:t.xrayedEdgesOpaque=!0)}if(this.numEdgesLayerPortions>0){this.scene.edgeMaterial._state.edges&&(t.edgesOpaque=this.numTransparentLayerPortions<this.numPortions,this.numTransparentLayerPortions>0&&(t.edgesTransparent=!0))}if(this.numSelectedLayerPortions>0){const e=this.scene.selectedMaterial._state;e.fill&&(e.fillAlpha<1?t.selectedSilhouetteTransparent=!0:t.selectedSilhouetteOpaque=!0),e.edges&&(e.edgeAlpha<1?t.selectedEdgesTransparent=!0:t.selectedEdgesOpaque=!0)}if(this.numHighlightedLayerPortions>0){const e=this.scene.highlightMaterial._state;e.fill&&(e.fillAlpha<1?t.highlightedSilhouetteTransparent=!0:t.highlightedSilhouetteOpaque=!0),e.edges&&(e.edgeAlpha<1?t.highlightedEdgesTransparent=!0:t.highlightedEdgesOpaque=!0)}}get xrayMaterial(){return this.scene.xrayMaterial}get highlightMaterial(){return this.scene.highlightMaterial}get selectedMaterial(){return this.scene.selectedMaterial}get edgeMaterial(){return this.scene.edgeMaterial}drawColorOpaque(t){const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawColorOpaque(e,t)}}drawColorTransparent(t){const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawColorTransparent(e,t)}}drawDepth(t){const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawDepth(e,t)}}drawNormals(t){const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawNormals(e,t)}}drawSilhouetteXRayed(t){const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawSilhouetteXRayed(e,t)}}drawSilhouetteHighlighted(t){const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawSilhouetteHighlighted(e,t)}}drawSilhouetteSelected(t){const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawSilhouetteSelected(e,t)}}drawEdgesColorOpaque(t){const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawEdgesColorOpaque(e,t)}}drawEdgesColorTransparent(t){const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawEdgesColorTransparent(e,t)}}drawEdgesXRayed(t){const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawEdgesXRayed(e,t)}}drawEdgesHighlighted(t){const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawEdgesHighlighted(e,t)}}drawEdgesSelected(t){const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawEdgesSelected(e,t)}}drawOcclusion(t){if(0===this.numVisibleLayerPortions)return;const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawOcclusion(e,t)}}drawShadow(t){if(0===this.numVisibleLayerPortions)return;const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawShadow(e,t)}}drawPickMesh(t){if(0===this.numVisibleLayerPortions)return;const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawPickMesh(e,t)}}drawPickDepths(t){if(0===this.numVisibleLayerPortions)return;const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawPickDepths(e,t)}}drawPickNormals(t){if(0===this.numVisibleLayerPortions)return;const e=this.renderFlags;for(let i=0,s=e.visibleLayers.length;i<s;i++){const s=e.visibleLayers[i];this._layerList[s].drawPickNormals(e,t)}}destroy(){for(let t in this._currentBatchingLayers)this._currentBatchingLayers.hasOwnProperty(t)&&this._currentBatchingLayers[t].destroy();this._currentBatchingLayers={},this.scene.camera.off(this._onCameraViewMatrix);for(let t=0,e=this._layerList.length;t<e;t++)this._layerList[t].destroy();for(let t=0,e=this._nodeList.length;t<e;t++)this._nodeList[t]._destroy();this.scene._aabbDirty=!0,this._isModel&&this.scene._deregisterModel(this),0!==c&&(c--,0===c&&u._clear()),super.destroy()}}var Ri=i("nJY8");class Ni{constructor(){}getMetaModel(t,e,i){s.a.loadJSON(t,(t=>{e(t)}),(function(t){i(t)}))}getXKT(t,e,i){var s=()=>{};e=e||s,i=i||s;const o=t.match(/^data:(.*?)(;base64)?,(.*)$/);if(o){const t=!!o[2];var r=o[3];r=window.decodeURIComponent(r),t&&(r=window.atob(r));try{const t=new ArrayBuffer(r.length),i=new Uint8Array(t);for(var a=0;a<r.length;a++)i[a]=r.charCodeAt(a);e(t)}catch(n){i(n)}}else{const s=new XMLHttpRequest;s.open("GET",t,!0),s.responseType="arraybuffer",s.onreadystatechange=function(){4===s.readyState&&(200===s.status?e(s.response):i("getXKT error : "+s.response))},s.send(null)}}}const Fi={IfcOpeningElement:{pickable:!1,visible:!1},IfcSpace:{colorize:[.137255,.403922,.870588],pickable:!1,visible:!1,opacity:.5},IfcWindow:{colorize:[.137255,.403922,.870588],pickable:!0,opacity:.1},IfcPlate:{colorize:[.8470588235,.427450980392,0,.5],opacity:.3},DEFAULT:{}};var Ti=i("rJrK");let Ii=window.pako||Ti;Ii.inflate||(Ii=Ii.default);const Oi=function(){const t=new Float32Array(3);return function(e){return t[0]=e[0]/255,t[1]=e[1]/255,t[2]=e[2]/255,t}}();const zi={version:1,parse:function(t,e,i,o){!function(t,e,i,o){o.positionsCompression="precompressed",o.normalsCompression="precompressed";const a=i.positions,n=i.normals,l=i.indices,h=i.edgeIndices,u=i.meshPositions,c=i.meshIndices,d=i.meshEdgesIndices,p=i.meshColors,f=JSON.parse(i.entityIDs),_=i.entityMeshes,g=i.entityIsObjects,m=u.length,P=_.length;for(let v=0;v<P;v++){const x=f[v],b=e.globalizeObjectIds?r.a.globalizeObjectId(o.id,x):x,y=t.metaScene.metaObjects[b],M={},E={};if(y){if(e.excludeTypesMap&&y.type&&e.excludeTypesMap[y.type])continue;if(e.includeTypesMap&&y.type&&!e.includeTypesMap[y.type])continue;const t=e.objectDefaults?e.objectDefaults[y.type]||e.objectDefaults.DEFAULT:null;t&&(!1===t.visible&&(M.visible=!1),!1===t.pickable&&(M.pickable=!1),t.colorize&&(E.color=t.colorize),void 0!==t.opacity&&null!==t.opacity&&(E.opacity=t.opacity))}else if(e.excludeUnclassifiedObjects)continue;const A=v===P-1,L=[];for(let t=_[v],e=A?_.length:_[v+1];t<e;t++){const e=t===m-1,r=b+".mesh."+t,f=Oi(p.subarray(4*t,4*t+3)),_=p[4*t+3]/255;o.createMesh(s.a.apply(E,{id:r,primitive:"triangles",positions:a.subarray(u[t],e?a.length:u[t+1]),normals:n.subarray(u[t],e?a.length:u[t+1]),indices:l.subarray(c[t],e?l.length:c[t+1]),edgeIndices:h.subarray(d[t],e?h.length:d[t+1]),positionsDecodeMatrix:i.positionsDecodeMatrix,color:f,opacity:_})),L.push(r)}o.createEntity(s.a.apply(M,{id:b,isObject:1===g[v],meshIds:L}))}}(t,e,function(t){return{positions:new Uint16Array(Ii.inflate(t.positions).buffer),normals:new Int8Array(Ii.inflate(t.normals).buffer),indices:new Uint32Array(Ii.inflate(t.indices).buffer),edgeIndices:new Uint32Array(Ii.inflate(t.edgeIndices).buffer),meshPositions:new Uint32Array(Ii.inflate(t.meshPositions).buffer),meshIndices:new Uint32Array(Ii.inflate(t.meshIndices).buffer),meshEdgesIndices:new Uint32Array(Ii.inflate(t.meshEdgesIndices).buffer),meshColors:new Uint8Array(Ii.inflate(t.meshColors).buffer),entityIDs:Ii.inflate(t.entityIDs,{to:"string"}),entityMeshes:new Uint32Array(Ii.inflate(t.entityMeshes).buffer),entityIsObjects:new Uint8Array(Ii.inflate(t.entityIsObjects).buffer),positionsDecodeMatrix:new Float32Array(Ii.inflate(t.positionsDecodeMatrix).buffer)}}(function(t){return{positions:t[0],normals:t[1],indices:t[2],edgeIndices:t[3],meshPositions:t[4],meshIndices:t[5],meshEdgesIndices:t[6],meshColors:t[7],entityIDs:t[8],entityMeshes:t[9],entityIsObjects:t[10],positionsDecodeMatrix:t[11]}}(i)),o)}};let Gi=window.pako||Ti;Gi.inflate||(Gi=Gi.default);const Xi=function(){const t=new Float32Array(3);return function(e){return t[0]=e[0]/255,t[1]=e[1]/255,t[2]=e[2]/255,t}}();const ki={version:2,parse:function(t,e,i,o){!function(t,e,i,o){o.positionsCompression="precompressed",o.normalsCompression="precompressed";const a=i.positions,n=i.normals,l=i.indices,h=i.edgeIndices,u=i.meshPositions,c=i.meshIndices,d=i.meshEdgesIndices,p=i.meshColors,f=JSON.parse(i.entityIDs),_=i.entityMeshes,g=i.entityIsObjects,m=i.entityMeshIds,P=i.entityMatrices,v=i.entityUsesInstancing,x=u.length,b=_.length,y={};for(let M=0;M<b;M++){const E=f[M],A=e.globalizeObjectIds?r.a.globalizeObjectId(o.id,E):E,L=t.metaScene.metaObjects[A],w={},D={},C=P.subarray(16*M,16*M+16);if(L){if(e.excludeTypesMap&&L.type&&e.excludeTypesMap[L.type])continue;if(e.includeTypesMap&&L.type&&!e.includeTypesMap[L.type])continue;const t=e.objectDefaults?e.objectDefaults[L.type]||e.objectDefaults.DEFAULT:null;t&&(!1===t.visible&&(w.visible=!1),!1===t.pickable&&(w.pickable=!1),t.colorize&&(D.color=t.colorize),void 0!==t.opacity&&null!==t.opacity&&(D.opacity=t.opacity))}else if(e.excludeUnclassifiedObjects)continue;const S=M===b-1,B=[];for(let t=_[M],e=S?m.length:_[M+1];t<e;t++){const e=m[t],r=e===x-1,f=A+".mesh."+e,_=Xi(p.subarray(4*e,4*e+3)),g=p[4*e+3]/255,P=a.subarray(u[e],r?a.length:u[e+1]),b=n.subarray(u[e],r?a.length:u[e+1]),E=l.subarray(c[e],r?l.length:c[e+1]),L=h.subarray(d[e],r?h.length:d[e+1]);if(1===v[M]){const t="geometry."+e;t in y||(o.createGeometry({id:t,positions:P,normals:b,indices:E,edgeIndices:L,primitive:"triangles",positionsDecodeMatrix:i.positionsDecodeMatrix}),y[t]=!0),o.createMesh(s.a.apply(D,{id:f,color:_,opacity:g,matrix:C,geometryId:t})),B.push(f)}else o.createMesh(s.a.apply(D,{id:f,primitive:"triangles",positions:P,normals:b,indices:E,edgeIndices:L,positionsDecodeMatrix:i.positionsDecodeMatrix,color:_,opacity:g})),B.push(f)}B.length&&o.createEntity(s.a.apply(w,{id:A,isObject:1===g[M],meshIds:B}))}}(t,e,function(t){return{positions:new Uint16Array(Gi.inflate(t.positions).buffer),normals:new Int8Array(Gi.inflate(t.normals).buffer),indices:new Uint32Array(Gi.inflate(t.indices).buffer),edgeIndices:new Uint32Array(Gi.inflate(t.edgeIndices).buffer),meshPositions:new Uint32Array(Gi.inflate(t.meshPositions).buffer),meshIndices:new Uint32Array(Gi.inflate(t.meshIndices).buffer),meshEdgesIndices:new Uint32Array(Gi.inflate(t.meshEdgesIndices).buffer),meshColors:new Uint8Array(Gi.inflate(t.meshColors).buffer),entityIDs:Gi.inflate(t.entityIDs,{to:"string"}),entityMeshes:new Uint32Array(Gi.inflate(t.entityMeshes).buffer),entityIsObjects:new Uint8Array(Gi.inflate(t.entityIsObjects).buffer),positionsDecodeMatrix:new Float32Array(Gi.inflate(t.positionsDecodeMatrix).buffer),entityMeshIds:new Uint32Array(Gi.inflate(t.entityMeshIds).buffer),entityMatrices:new Float32Array(Gi.inflate(t.entityMatrices).buffer),entityUsesInstancing:new Uint8Array(Gi.inflate(t.entityUsesInstancing).buffer)}}(function(t){return{positions:t[0],normals:t[1],indices:t[2],edgeIndices:t[3],meshPositions:t[4],meshIndices:t[5],meshEdgesIndices:t[6],meshColors:t[7],entityIDs:t[8],entityMeshes:t[9],entityIsObjects:t[10],positionsDecodeMatrix:t[11],entityMeshIds:t[12],entityMatrices:t[13],entityUsesInstancing:t[14]}}(i)),o)}};let Ui=window.pako||Ti;Ui.inflate||(Ui=Ui.default);const Vi=function(){const t=new Float32Array(3);return function(e){return t[0]=e[0]/255,t[1]=e[1]/255,t[2]=e[2]/255,t}}();const Hi={version:3,parse:function(t,e,i,o){!function(t,e,i,o){o.positionsCompression="precompressed",o.normalsCompression="precompressed";const a=i.positions,n=i.normals,l=i.indices,h=i.edgeIndices,u=i.meshPositions,c=i.meshIndices,d=i.meshEdgesIndices,p=i.meshColors,f=JSON.parse(i.entityIDs),_=i.entityMeshes,g=i.entityIsObjects,m=i.entityMeshIds,P=i.entityMatrices,v=i.entityUsesInstancing,x=u.length,b=_.length,y={};for(let C=0;C<b;C++){const S=f[C],B=e.globalizeObjectIds?r.a.globalizeObjectId(o.id,S):S,R=t.metaScene.metaObjects[B],N={},F={},T=P.subarray(16*C,16*C+16);if(R){if(e.excludeTypesMap&&R.type&&e.excludeTypesMap[R.type])continue;if(e.includeTypesMap&&R.type&&!e.includeTypesMap[R.type])continue;const t=e.objectDefaults?e.objectDefaults[R.type]||e.objectDefaults.DEFAULT:null;t&&(!1===t.visible&&(N.visible=!1),!1===t.pickable&&(N.pickable=!1),t.colorize&&(F.color=t.colorize),void 0!==t.opacity&&null!==t.opacity&&(F.opacity=t.opacity))}else if(e.excludeUnclassifiedObjects)continue;const I=C===b-1,O=[];for(let t=_[C],e=I?m.length:_[C+1];t<e;t++){var M=m[t];const e=M===x-1,r=B+".mesh."+M,f=Vi(p.subarray(4*M,4*M+3)),_=p[4*M+3]/255;var E=a.subarray(u[M],e?a.length:u[M+1]),A=n.subarray(u[M],e?a.length:u[M+1]),L=l.subarray(c[M],e?l.length:c[M+1]),w=h.subarray(d[M],e?h.length:d[M+1]);if(1===v[C]){var D="geometry."+M;D in y||(o.createGeometry({id:D,positions:E,normals:A,indices:L,edgeIndices:w,primitive:"triangles",positionsDecodeMatrix:i.instancedPositionsDecodeMatrix}),y[D]=!0),o.createMesh(s.a.apply(F,{id:r,color:f,opacity:_,matrix:T,geometryId:D})),O.push(r)}else o.createMesh(s.a.apply(F,{id:r,primitive:"triangles",positions:E,normals:A,indices:L,edgeIndices:w,positionsDecodeMatrix:i.batchedPositionsDecodeMatrix,color:f,opacity:_})),O.push(r)}O.length&&o.createEntity(s.a.apply(N,{id:B,isObject:1===g[C],meshIds:O}))}}(t,e,function(t){return{positions:new Uint16Array(Ui.inflate(t.positions).buffer),normals:new Int8Array(Ui.inflate(t.normals).buffer),indices:new Uint32Array(Ui.inflate(t.indices).buffer),edgeIndices:new Uint32Array(Ui.inflate(t.edgeIndices).buffer),meshPositions:new Uint32Array(Ui.inflate(t.meshPositions).buffer),meshIndices:new Uint32Array(Ui.inflate(t.meshIndices).buffer),meshEdgesIndices:new Uint32Array(Ui.inflate(t.meshEdgesIndices).buffer),meshColors:new Uint8Array(Ui.inflate(t.meshColors).buffer),entityIDs:Ui.inflate(t.entityIDs,{to:"string"}),entityMeshes:new Uint32Array(Ui.inflate(t.entityMeshes).buffer),entityIsObjects:new Uint8Array(Ui.inflate(t.entityIsObjects).buffer),instancedPositionsDecodeMatrix:new Float32Array(Ui.inflate(t.instancedPositionsDecodeMatrix).buffer),batchedPositionsDecodeMatrix:new Float32Array(Ui.inflate(t.batchedPositionsDecodeMatrix).buffer),entityMeshIds:new Uint32Array(Ui.inflate(t.entityMeshIds).buffer),entityMatrices:new Float32Array(Ui.inflate(t.entityMatrices).buffer),entityUsesInstancing:new Uint8Array(Ui.inflate(t.entityUsesInstancing).buffer)}}(function(t){return{positions:t[0],normals:t[1],indices:t[2],edgeIndices:t[3],meshPositions:t[4],meshIndices:t[5],meshEdgesIndices:t[6],meshColors:t[7],entityIDs:t[8],entityMeshes:t[9],entityIsObjects:t[10],instancedPositionsDecodeMatrix:t[11],batchedPositionsDecodeMatrix:t[12],entityMeshIds:t[13],entityMatrices:t[14],entityUsesInstancing:t[15]}}(i)),o)}};let ji=window.pako||Ti;ji.inflate||(ji=ji.default);const Wi=function(){const t=new Float32Array(3);return function(e){return t[0]=e[0]/255,t[1]=e[1]/255,t[2]=e[2]/255,t}}();const Yi={version:4,parse:function(t,e,i,o){!function(t,e,i,o){o.positionsCompression="precompressed",o.normalsCompression="precompressed";const r=i.positions,a=i.normals,n=i.indices,l=i.edgeIndices,h=i.decodeMatrices,u=i.matrices,c=i.eachPrimitivePositionsAndNormalsPortion,d=i.eachPrimitiveIndicesPortion,p=i.eachPrimitiveEdgeIndicesPortion,f=i.eachPrimitiveDecodeMatricesPortion,_=i.eachPrimitiveColor,g=i.primitiveInstances,m=JSON.parse(i.eachEntityId),P=i.eachEntityPrimitiveInstancesPortion,v=i.eachEntityMatricesPortion,x=c.length,b=g.length,y=new Uint8Array(x),M=new Uint32Array(x),E=m.length;for(let s=0;s<x;s++)M[s]=s;M.sort(((t,e)=>f[t]<f[e]?-1:f[t]>f[e]?1:0));for(let s=0;s<b;s++)y[g[s]]++;const A={};for(let s=0;s<E;s++){const t=E-1,e=s===t,i=P[s],o=e?P[t]:P[s+1];for(let r=i;r<o;r++){const t=g[r];y[t]>1||(A[t]=s)}}for(let D=0;D<x;D++){const t=M[D],e=t===x-1,i=y[t]>1,u=Wi(_.subarray(4*t,4*t+3)),g=_[4*t+3]/255,P=r.subarray(c[t],e?r.length:c[t+1]),v=a.subarray(c[t],e?a.length:c[t+1]),b=n.subarray(d[t],e?n.length:d[t+1]),E=l.subarray(p[t],e?l.length:p[t+1]),w=h.subarray(f[t],f[t]+16);if(i){var L="geometry"+t;o.createGeometry({id:L,primitive:"triangles",positions:P,normals:v,indices:b,edgeIndices:E,positionsDecodeMatrix:w})}else{const e=t,i=(m[A[t]],{});o.createMesh(s.a.apply(i,{id:e,primitive:"triangles",positions:P,normals:v,indices:b,edgeIndices:E,positionsDecodeMatrix:w,color:u,opacity:g}))}}let w=0;for(let D=0;D<E;D++){const t=E-1,e=D===t,i=m[D],r=P[D],a=e?P[t]:P[D+1],n=[];for(let l=r;l<a;l++){const t=g[l];if(y[t]>1){const e={},i="instance."+w++,r="geometry"+t,a=16*v[D],l=u.subarray(a,a+16);o.createMesh(s.a.apply(e,{id:i,geometryId:r,matrix:l})),n.push(i)}else n.push(t)}if(n.length>0){const t={};o.createEntity(s.a.apply(t,{id:i,isObject:!0,meshIds:n}))}}}(0,0,function(t){return{positions:new Uint16Array(ji.inflate(t.positions).buffer),normals:new Int8Array(ji.inflate(t.normals).buffer),indices:new Uint32Array(ji.inflate(t.indices).buffer),edgeIndices:new Uint32Array(ji.inflate(t.edgeIndices).buffer),decodeMatrices:new Float32Array(ji.inflate(t.decodeMatrices).buffer),matrices:new Float32Array(ji.inflate(t.matrices).buffer),eachPrimitivePositionsAndNormalsPortion:new Uint32Array(ji.inflate(t.eachPrimitivePositionsAndNormalsPortion).buffer),eachPrimitiveIndicesPortion:new Uint32Array(ji.inflate(t.eachPrimitiveIndicesPortion).buffer),eachPrimitiveEdgeIndicesPortion:new Uint32Array(ji.inflate(t.eachPrimitiveEdgeIndicesPortion).buffer),eachPrimitiveDecodeMatricesPortion:new Uint32Array(ji.inflate(t.eachPrimitiveDecodeMatricesPortion).buffer),eachPrimitiveColor:new Uint8Array(ji.inflate(t.eachPrimitiveColor).buffer),primitiveInstances:new Uint32Array(ji.inflate(t.primitiveInstances).buffer),eachEntityId:ji.inflate(t.eachEntityId,{to:"string"}),eachEntityPrimitiveInstancesPortion:new Uint32Array(ji.inflate(t.eachEntityPrimitiveInstancesPortion).buffer),eachEntityMatricesPortion:new Uint32Array(ji.inflate(t.eachEntityMatricesPortion).buffer)}}(function(t){return{positions:t[0],normals:t[1],indices:t[2],edgeIndices:t[3],decodeMatrices:t[4],matrices:t[5],eachPrimitivePositionsAndNormalsPortion:t[6],eachPrimitiveIndicesPortion:t[7],eachPrimitiveEdgeIndicesPortion:t[8],eachPrimitiveDecodeMatricesPortion:t[9],eachPrimitiveColor:t[10],primitiveInstances:t[11],eachEntityId:t[12],eachEntityPrimitiveInstancesPortion:t[13],eachEntityMatricesPortion:t[14],eachEntityMatrix:t[15]}}(i)),o)}};let Zi=window.pako||Ti;Zi.inflate||(Zi=Zi.default);const Qi=function(){const t=new Float32Array(3);return function(e){return t[0]=e[0]/255,t[1]=e[1]/255,t[2]=e[2]/255,t}}();const qi={version:5,parse:function(t,e,i,o){!function(t,e,i,o){o.positionsCompression="disabled",o.normalsCompression="precompressed";const r=i.positions,a=i.normals,n=i.indices,l=i.edgeIndices,h=i.matrices,u=i.eachPrimitivePositionsAndNormalsPortion,c=i.eachPrimitiveIndicesPortion,d=i.eachPrimitiveEdgeIndicesPortion,p=i.eachPrimitiveColor,f=i.primitiveInstances,_=JSON.parse(i.eachEntityId),g=i.eachEntityPrimitiveInstancesPortion,m=i.eachEntityMatricesPortion,P=u.length,v=f.length,x=new Uint8Array(P),b=_.length;for(let s=0;s<v;s++)x[f[s]]++;const y={};for(let s=0;s<b;s++){const t=b-1,e=s===t,i=g[s],o=e?g[t]:g[s+1];for(let r=i;r<o;r++){const t=f[r];x[t]>1||(y[t]=s)}}for(let A=0;A<P;A++){const t=A===P-1,e=x[A]>1,i=Qi(p.subarray(4*A,4*A+3)),h=p[4*A+3]/255,f=r.subarray(u[A],t?r.length:u[A+1]),g=a.subarray(u[A],t?a.length:u[A+1]),m=n.subarray(c[A],t?n.length:c[A+1]),v=l.subarray(d[A],t?l.length:d[A+1]);if(e){var M="geometry"+A;o.createGeometry({id:M,primitive:"triangles",positions:f,normals:g,indices:m,edgeIndices:v})}else{const t=A,e=(_[y[A]],{});o.createMesh(s.a.apply(e,{id:t,primitive:"triangles",positions:f,normals:g,indices:m,edgeIndices:v,color:i,opacity:h}))}}let E=0;for(let A=0;A<b;A++){const t=b-1,e=A===t,i=_[A],r=g[A],a=e?g[t]:g[A+1],n=[];for(let l=r;l<a;l++){const t=f[l];if(x[t]>1){const e={},i="instance."+E++,r="geometry"+t,a=16*m[A],l=h.subarray(a,a+16);o.createMesh(s.a.apply(e,{id:i,geometryId:r,matrix:l})),n.push(i)}else n.push(t)}if(n.length>0){const t={};o.createEntity(s.a.apply(t,{id:i,isObject:!0,meshIds:n}))}}}(0,0,function(t){return{positions:new Float32Array(Zi.inflate(t.positions).buffer),normals:new Int8Array(Zi.inflate(t.normals).buffer),indices:new Uint32Array(Zi.inflate(t.indices).buffer),edgeIndices:new Uint32Array(Zi.inflate(t.edgeIndices).buffer),matrices:new Float32Array(Zi.inflate(t.matrices).buffer),eachPrimitivePositionsAndNormalsPortion:new Uint32Array(Zi.inflate(t.eachPrimitivePositionsAndNormalsPortion).buffer),eachPrimitiveIndicesPortion:new Uint32Array(Zi.inflate(t.eachPrimitiveIndicesPortion).buffer),eachPrimitiveEdgeIndicesPortion:new Uint32Array(Zi.inflate(t.eachPrimitiveEdgeIndicesPortion).buffer),eachPrimitiveColor:new Uint8Array(Zi.inflate(t.eachPrimitiveColor).buffer),primitiveInstances:new Uint32Array(Zi.inflate(t.primitiveInstances).buffer),eachEntityId:Zi.inflate(t.eachEntityId,{to:"string"}),eachEntityPrimitiveInstancesPortion:new Uint32Array(Zi.inflate(t.eachEntityPrimitiveInstancesPortion).buffer),eachEntityMatricesPortion:new Uint32Array(Zi.inflate(t.eachEntityMatricesPortion).buffer)}}(function(t){return{positions:t[0],normals:t[1],indices:t[2],edgeIndices:t[3],matrices:t[4],eachPrimitivePositionsAndNormalsPortion:t[5],eachPrimitiveIndicesPortion:t[6],eachPrimitiveEdgeIndicesPortion:t[7],eachPrimitiveColor:t[8],primitiveInstances:t[9],eachEntityId:t[10],eachEntityPrimitiveInstancesPortion:t[11],eachEntityMatricesPortion:t[12]}}(i)),o)}};let Ki=window.pako||Ti;Ki.inflate||(Ki=Ki.default);const Ji=function(){const t=new Float32Array(3);return function(e){return t[0]=e[0]/255,t[1]=e[1]/255,t[2]=e[2]/255,t}}();const $i={version:6,parse:function(t,e,i,o){!function(t,e,i,o){const a=i.positions,n=i.normals,l=i.indices,h=i.edgeIndices,u=i.matrices,c=i.reusedPrimitivesDecodeMatrix,d=i.eachPrimitivePositionsAndNormalsPortion,p=i.eachPrimitiveIndicesPortion,f=i.eachPrimitiveEdgeIndicesPortion,_=i.eachPrimitiveColorAndOpacity,g=i.primitiveInstances,m=JSON.parse(i.eachEntityId),P=i.eachEntityPrimitiveInstancesPortion,v=i.eachEntityMatricesPortion,x=i.eachTileAABB,b=i.eachTileEntitiesPortion,y=d.length,M=g.length,E=m.length,A=b.length;let L=0;const D=new Uint32Array(y);for(let s=0;s<M;s++){const t=g[s];void 0!==D[t]?D[t]++:D[t]=1}const C=r.a.vec3(),S=r.a.AABB3();for(let B=0;B<A;B++){const i=B===A-1,M=b[B],R=i?E:b[B+1],N=6*B,F=x.subarray(N,N+6);r.a.getAABB3Center(F,C),S[0]=F[0]-C[0],S[1]=F[1]-C[1],S[2]=F[2]-C[2],S[3]=F[3]-C[0],S[4]=F[4]-C[1],S[5]=F[5]-C[2];const T=w.a.createPositionsDecodeMatrix(S),I={};for(let x=M;x<R;x++){const i=m[x],b=e.globalizeObjectIds?r.a.globalizeObjectId(o.id,i):i,M=v[x],A=u.slice(M,M+16),w=x===E-1,S=P[x],R=w?g.length:P[x+1],N=[],F=t.metaScene.metaObjects[b],O={},z={};if(F){if(e.excludeTypesMap&&F.type&&e.excludeTypesMap[F.type])continue;if(e.includeTypesMap&&F.type&&!e.includeTypesMap[F.type])continue;const t=e.objectDefaults?e.objectDefaults[F.type]||e.objectDefaults.DEFAULT:null;t&&(!1===t.visible&&(O.visible=!1),!1===t.pickable&&(O.pickable=!1),t.colorize&&(z.color=t.colorize),void 0!==t.opacity&&null!==t.opacity&&(z.opacity=t.opacity))}else if(e.excludeUnclassifiedObjects)continue;for(let t=S;t<R;t++){const e=g[t],i=D[e]>1,r=e===y-1,u=a.subarray(d[e],r?a.length:d[e+1]),m=n.subarray(d[e],r?n.length:d[e+1]),P=l.subarray(p[e],r?l.length:p[e+1]),v=h.subarray(f[e],r?h.length:f[e+1]),x=Ji(_.subarray(4*e,4*e+3)),b=_[4*e+3]/255,M=L++;if(i){const t="geometry."+B+"."+e;I[t]||(o.createGeometry({id:t,rtcCenter:C,primitive:"triangles",positions:u,normals:m,indices:P,edgeIndices:v,positionsDecodeMatrix:c}),I[t]=!0),o.createMesh(s.a.apply(z,{id:M,geometryId:t,matrix:A,color:x,opacity:b})),N.push(M)}else o.createMesh(s.a.apply(z,{id:M,rtcCenter:C,primitive:"triangles",positions:u,normals:m,indices:P,edgeIndices:v,positionsDecodeMatrix:T,color:x,opacity:b})),N.push(M)}N.length>0&&o.createEntity(s.a.apply(O,{id:b,isObject:!0,meshIds:N}))}}}(t,e,function(t){function e(t,e){return 0===t.length?[]:Ki.inflate(t,e).buffer}return{positions:new Uint16Array(e(t.positions)),normals:new Int8Array(e(t.normals)),indices:new Uint32Array(e(t.indices)),edgeIndices:new Uint32Array(e(t.edgeIndices)),matrices:new Float32Array(e(t.matrices)),reusedPrimitivesDecodeMatrix:new Float32Array(e(t.reusedPrimitivesDecodeMatrix)),eachPrimitivePositionsAndNormalsPortion:new Uint32Array(e(t.eachPrimitivePositionsAndNormalsPortion)),eachPrimitiveIndicesPortion:new Uint32Array(e(t.eachPrimitiveIndicesPortion)),eachPrimitiveEdgeIndicesPortion:new Uint32Array(e(t.eachPrimitiveEdgeIndicesPortion)),eachPrimitiveColorAndOpacity:new Uint8Array(e(t.eachPrimitiveColorAndOpacity)),primitiveInstances:new Uint32Array(e(t.primitiveInstances)),eachEntityId:Ki.inflate(t.eachEntityId,{to:"string"}),eachEntityPrimitiveInstancesPortion:new Uint32Array(e(t.eachEntityPrimitiveInstancesPortion)),eachEntityMatricesPortion:new Uint32Array(e(t.eachEntityMatricesPortion)),eachTileAABB:new Float64Array(e(t.eachTileAABB)),eachTileEntitiesPortion:new Uint32Array(e(t.eachTileEntitiesPortion))}}(function(t){return{positions:t[0],normals:t[1],indices:t[2],edgeIndices:t[3],matrices:t[4],reusedPrimitivesDecodeMatrix:t[5],eachPrimitivePositionsAndNormalsPortion:t[6],eachPrimitiveIndicesPortion:t[7],eachPrimitiveEdgeIndicesPortion:t[8],eachPrimitiveColorAndOpacity:t[9],primitiveInstances:t[10],eachEntityId:t[11],eachEntityPrimitiveInstancesPortion:t[12],eachEntityMatricesPortion:t[13],eachTileAABB:t[14],eachTileEntitiesPortion:t[15]}}(i)),o)}};let ts=window.pako||Ti;ts.inflate||(ts=ts.default);const es=function(){const t=new Float32Array(3);return function(e){return t[0]=e[0]/255,t[1]=e[1]/255,t[2]=e[2]/255,t}}();const is={version:7,parse:function(t,e,i,o){!function(t,e,i,o){const a=i.positions,n=i.normals,l=i.colors,h=i.indices,u=i.edgeIndices,c=i.matrices,d=i.reusedGeometriesDecodeMatrix,p=i.eachGeometryPrimitiveType,f=i.eachGeometryPositionsPortion,_=i.eachGeometryNormalsPortion,g=i.eachGeometryColorsPortion,m=i.eachGeometryIndicesPortion,P=i.eachGeometryEdgeIndicesPortion,v=i.eachMeshGeometriesPortion,x=i.eachMeshMatricesPortion,b=i.eachMeshMaterial,y=JSON.parse(i.eachEntityId),M=i.eachEntityMeshesPortion,E=i.eachTileAABB,A=i.eachTileEntitiesPortion,L=f.length,D=v.length,C=y.length,S=A.length;let B=0;const R=new Uint32Array(L);for(let s=0;s<D;s++){const t=v[s];void 0!==R[t]?R[t]++:R[t]=1}const N=r.a.vec3(),F=r.a.AABB3();for(let T=0;T<S;T++){const i=T===S-1,D=A[T],I=i?C:A[T+1],O=6*T,z=E.subarray(O,O+6);r.a.getAABB3Center(z,N),F[0]=z[0]-N[0],F[1]=z[1]-N[1],F[2]=z[2]-N[2],F[3]=z[3]-N[0],F[4]=z[4]-N[1],F[5]=z[5]-N[2];const G=w.a.createPositionsDecodeMatrix(F),X={};for(let E=D;E<I;E++){const i=y[E],A=e.globalizeObjectIds?r.a.globalizeObjectId(o.id,i):i,w=E===C-1,D=M[E],S=w?v.length:M[E+1],F=[],I=t.metaScene.metaObjects[A],O={},z={};if(I){if(e.excludeTypesMap&&I.type&&e.excludeTypesMap[I.type])continue;if(e.includeTypesMap&&I.type&&!e.includeTypesMap[I.type])continue;const t=e.objectDefaults?e.objectDefaults[I.type]||e.objectDefaults.DEFAULT:null;t&&(!1===t.visible&&(O.visible=!1),!1===t.pickable&&(O.pickable=!1),t.colorize&&(z.color=t.colorize),void 0!==t.opacity&&null!==t.opacity&&(z.opacity=t.opacity),void 0!==t.metallic&&null!==t.metallic&&(z.metallic=t.metallic),void 0!==t.roughness&&null!==t.roughness&&(z.roughness=t.roughness))}else if(e.excludeUnclassifiedObjects)continue;for(let t=D;t<S;t++){const e=v[t],i=R[e]>1,r=e===L-1,y=es(b.subarray(6*t,6*t+3)),M=b[6*t+3]/255,E=b[6*t+4]/255,A=b[6*t+5]/255,w=B++;if(i){const i=x[t],v=c.slice(i,i+16),b="geometry."+T+"."+e;if(!X[b]){let t,i,s,c,v,x;switch(p[e]){case 0:t="solid",i=a.subarray(f[e],r?a.length:f[e+1]),s=n.subarray(_[e],r?n.length:_[e+1]),v=h.subarray(m[e],r?h.length:m[e+1]),x=u.subarray(P[e],r?u.length:P[e+1]);break;case 1:t="surface",i=a.subarray(f[e],r?a.length:f[e+1]),s=n.subarray(_[e],r?n.length:_[e+1]),v=h.subarray(m[e],r?h.length:m[e+1]),x=u.subarray(P[e],r?u.length:P[e+1]);break;case 2:t="points",i=a.subarray(f[e],r?a.length:f[e+1]),c=l.subarray(g[e],r?l.length:g[e+1]);break;case 3:t="lines",i=a.subarray(f[e],r?a.length:f[e+1]),v=h.subarray(m[e],r?h.length:m[e+1]);break;default:continue}o.createGeometry({id:b,rtcCenter:N,primitive:t,positions:i,normals:s,colors:c,indices:v,edgeIndices:x,positionsDecodeMatrix:d}),X[b]=!0}o.createMesh(s.a.apply(z,{id:w,geometryId:b,matrix:v,color:y,metallic:E,roughness:A,opacity:M})),F.push(w)}else{let t,i,c,d,v,x;switch(p[e]){case 0:t="solid",i=a.subarray(f[e],r?a.length:f[e+1]),c=n.subarray(_[e],r?n.length:_[e+1]),v=h.subarray(m[e],r?h.length:m[e+1]),x=u.subarray(P[e],r?u.length:P[e+1]);break;case 1:t="surface",i=a.subarray(f[e],r?a.length:f[e+1]),c=n.subarray(_[e],r?n.length:_[e+1]),v=h.subarray(m[e],r?h.length:m[e+1]),x=u.subarray(P[e],r?u.length:P[e+1]);break;case 2:t="points",i=a.subarray(f[e],r?a.length:f[e+1]),d=l.subarray(g[e],r?l.length:g[e+1]);break;case 3:t="lines",i=a.subarray(f[e],r?a.length:f[e+1]),v=h.subarray(m[e],r?h.length:m[e+1]);break;default:continue}o.createMesh(s.a.apply(z,{id:w,rtcCenter:N,primitive:t,positions:i,normals:c,colors:d,indices:v,edgeIndices:x,positionsDecodeMatrix:G,color:y,metallic:E,roughness:A,opacity:M})),F.push(w)}}F.length>0&&o.createEntity(s.a.apply(O,{id:A,isObject:!0,meshIds:F}))}}}(t,e,function(t){function e(t,e){return 0===t.length?[]:ts.inflate(t,e).buffer}return{positions:new Uint16Array(e(t.positions)),normals:new Int8Array(e(t.normals)),colors:new Uint8Array(e(t.colors)),indices:new Uint32Array(e(t.indices)),edgeIndices:new Uint32Array(e(t.edgeIndices)),matrices:new Float32Array(e(t.matrices)),reusedGeometriesDecodeMatrix:new Float32Array(e(t.reusedGeometriesDecodeMatrix)),eachGeometryPrimitiveType:new Uint8Array(e(t.eachGeometryPrimitiveType)),eachGeometryPositionsPortion:new Uint32Array(e(t.eachGeometryPositionsPortion)),eachGeometryNormalsPortion:new Uint32Array(e(t.eachGeometryNormalsPortion)),eachGeometryColorsPortion:new Uint32Array(e(t.eachGeometryColorsPortion)),eachGeometryIndicesPortion:new Uint32Array(e(t.eachGeometryIndicesPortion)),eachGeometryEdgeIndicesPortion:new Uint32Array(e(t.eachGeometryEdgeIndicesPortion)),eachMeshGeometriesPortion:new Uint32Array(e(t.eachMeshGeometriesPortion)),eachMeshMatricesPortion:new Uint32Array(e(t.eachMeshMatricesPortion)),eachMeshMaterial:new Uint8Array(e(t.eachMeshMaterial)),eachEntityId:ts.inflate(t.eachEntityId,{to:"string"}),eachEntityMeshesPortion:new Uint32Array(e(t.eachEntityMeshesPortion)),eachTileAABB:new Float64Array(e(t.eachTileAABB)),eachTileEntitiesPortion:new Uint32Array(e(t.eachTileEntitiesPortion))}}(function(t){return{positions:t[0],normals:t[1],colors:t[2],indices:t[3],edgeIndices:t[4],matrices:t[5],reusedGeometriesDecodeMatrix:t[6],eachGeometryPrimitiveType:t[7],eachGeometryPositionsPortion:t[8],eachGeometryNormalsPortion:t[9],eachGeometryColorsPortion:t[10],eachGeometryIndicesPortion:t[11],eachGeometryEdgeIndicesPortion:t[12],eachMeshGeometriesPortion:t[13],eachMeshMatricesPortion:t[14],eachMeshMaterial:t[15],eachEntityId:t[16],eachEntityMeshesPortion:t[17],eachTileAABB:t[18],eachTileEntitiesPortion:t[19]}}(i)),o)}},ss={};ss[zi.version]=zi,ss[ki.version]=ki,ss[Hi.version]=Hi,ss[Yi.version]=Yi,ss[qi.version]=qi,ss[$i.version]=$i,ss[is.version]=is;class os extends Ri.a{constructor(t,e={}){super("XKTLoader",t,e),this._maxGeometryBatchSize=e.maxGeometryBatchSize,this.dataSource=e.dataSource,this.objectDefaults=e.objectDefaults,this.includeTypes=e.includeTypes,this.excludeTypes=e.excludeTypes,this.excludeUnclassifiedObjects=e.excludeUnclassifiedObjects}get supportedVersions(){return Object.keys(ss)}set dataSource(t){this._dataSource=t||new Ni}get dataSource(){return this._dataSource}set objectDefaults(t){this._objectDefaults=t||Fi}get objectDefaults(){return this._objectDefaults}set includeTypes(t){this._includeTypes=t}get includeTypes(){return this._includeTypes}set excludeTypes(t){this._excludeTypes=t}get excludeTypes(){return this._excludeTypes}set excludeUnclassifiedObjects(t){this._excludeUnclassifiedObjects=!!t}get excludeUnclassifiedObjects(){return this._excludeUnclassifiedObjects}set globalizeObjectIds(t){this._globalizeObjectIds=!!t}get globalizeObjectIds(){return this._globalizeObjectIds}load(t={}){t.id&&this.viewer.scene.components[t.id]&&(this.error("Component with this ID already exists in viewer: "+t.id+" - will autogenerate this ID"),delete t.id);const e=new Bi(this.viewer.scene,s.a.apply(t,{isModel:!0,maxGeometryBatchSize:this._maxGeometryBatchSize})),i=e.id;if(!t.src&&!t.xkt)return this.error("load() param expected: src or xkt"),e;const o={};if(t.metaModelSrc||t.metaModelData){const s=t.includeTypes||this._includeTypes,r=t.excludeTypes||this._excludeTypes,a=t.objectDefaults||this._objectDefaults;if(s){o.includeTypesMap={};for(let t=0,e=s.length;t<e;t++)o.includeTypesMap[s[t]]=!0}if(r){o.excludeTypesMap={};for(let t=0,e=r.length;t<e;t++)o.excludeTypesMap[r[t]]=!0}a&&(o.objectDefaults=a),o.excludeUnclassifiedObjects=void 0!==t.excludeUnclassifiedObjects?!!t.excludeUnclassifiedObjects:this._excludeUnclassifiedObjects,o.globalizeObjectIds=void 0!==t.globalizeObjectIds?!!t.globalizeObjectIds:this._globalizeObjectIds;const n=a=>!!this.viewer.metaScene.createMetaModel(i,a,{includeTypes:s,excludeTypes:r,globalizeObjectIds:this.globalizeObjectIds})&&(t.src?this._loadModel(t.src,t,o,e):this._parseModel(t.xkt,t,o,e),e.once("destroyed",(()=>{this.viewer.metaScene.destroyMetaModel(e.id)})),!0);if(t.metaModelSrc){const s=t.metaModelSrc;this.viewer.scene.canvas.spinner.processes++,this._dataSource.getMetaModel(s,(t=>{e.destroyed||(n(t)||(this.error(`load(): Failed to load model metadata for model '${i} from '${s}' - metadata not valid`),e.fire("error","Metadata not valid")),this.viewer.scene.canvas.spinner.processes--)}),(t=>{this.error(`load(): Failed to load model metadata for model '${i} from  '${s}' - ${t}`),e.fire("error",`Failed to load model metadata from  '${s}' - ${t}`),this.viewer.scene.canvas.spinner.processes--}))}else t.metaModelData&&(n(t.metaModelData)||(this.error(`load(): Failed to load model metadata for model '${i} from '${metaModelSrc}' - metadata not valid`),e.fire("error","Metadata not valid")))}else t.src?this._loadModel(t.src,t,o,e):this._parseModel(t.xkt,t,o,e);return e}_loadModel(t,e,i,s){const o=this.viewer.scene.canvas.spinner;o.processes++,this._dataSource.getXKT(e.src,(t=>{this._parseModel(t,e,i,s),o.processes--}),(t=>{o.processes--,this.error(t),s.fire("error",t)}))}_parseModel(t,e,i,s){if(s.destroyed)return;const o=new DataView(t),r=new Uint8Array(t),a=o.getUint32(0,!0),n=ss[a];if(!n)return void this.error("Unsupported .XKT file version: "+a+" - this XKTLoaderPlugin supports versions "+Object.keys(ss));this.log("Loading .xkt V"+a);const l=o.getUint32(4,!0),h=[];let u=4*(l+2);for(let c=0;c<l;c++){const t=o.getUint32(4*(c+2),!0);h.push(r.subarray(u,u+t)),u+=t}n.parse(this.viewer,i,h,s),s.finalize(),s.scene.once("tick",(()=>{s.destroyed||(s.scene.fire("modelLoaded",s.id),s.fire("loaded",!0,!1))}))}}}}]);